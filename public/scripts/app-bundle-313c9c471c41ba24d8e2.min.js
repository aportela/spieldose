/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkspieldose"] = self["webpackChunkspieldose"] || []).push([["app"],{

/***/ "./node_modules/audiomotion-analyzer/src/audioMotion-analyzer.js":
/*!***********************************************************************!*\
  !*** ./node_modules/audiomotion-analyzer/src/audioMotion-analyzer.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ AudioMotionAnalyzer)\n/* harmony export */ });\n/**!\n * audioMotion-analyzer\n * High-resolution real-time graphic audio spectrum analyzer JS module\n *\n * @version 3.6.0\n * @author  Henrique Avila Vianna <hvianna@gmail.com> <https://henriquevianna.com>\n * @license AGPL-3.0-or-later\n */\n\nconst VERSION = '3.6.0';\n\n// internal constants\nconst TAU     = 2 * Math.PI,\n\t  HALF_PI = Math.PI / 2,\n\t  RPM     = TAU / 3600,           // angle increment per frame for one revolution per minute @60fps\n\t  ROOT24  = 2 ** ( 1 / 24 ),      // 24th root of 2\n\t  C0      = 440 * ROOT24 ** -114; // ~16.35 Hz\n\nclass AudioMotionAnalyzer {\n\n/**\n * CONSTRUCTOR\n *\n * @param {object} [container] DOM element where to insert the analyzer; if undefined, uses the document body\n * @param {object} [options]\n * @returns {object} AudioMotionAnalyzer object\n */\n\tconstructor( container, options = {} ) {\n\n\t\tthis._ready = false;\n\n\t\t// Gradient definitions\n\n\t\tthis._gradients = {\n\t\t\tclassic: {\n\t\t\t\tbgColor: '#111',\n\t\t\t\tcolorStops: [\n\t\t\t\t\t'hsl( 0, 100%, 50% )',\n\t\t\t\t\t{ pos: .6, color: 'hsl( 60, 100%, 50% )' },\n\t\t\t\t\t'hsl( 120, 100%, 50% )'\n\t\t\t\t]\n\t\t\t},\n\t\t\tprism:   {\n\t\t\t\tbgColor: '#111',\n\t\t\t\tcolorStops: [\n\t\t\t\t\t'hsl( 0, 100%, 50% )',\n\t\t\t\t\t'hsl( 60, 100%, 50% )',\n\t\t\t\t\t'hsl( 120, 100%, 50% )',\n\t\t\t\t\t'hsl( 180, 100%, 50% )',\n\t\t\t\t\t'hsl( 240, 100%, 50% )'\n\t\t\t\t]\n\t\t\t},\n\t\t\trainbow: {\n\t\t\t\tbgColor: '#111',\n\t\t\t\tdir: 'h',\n\t\t\t\tcolorStops: [\n\t\t\t\t\t'hsl( 0, 100%, 50% )',\n\t\t\t\t\t'hsl( 60, 100%, 50% )',\n\t\t\t\t\t'hsl( 120, 100%, 50% )',\n\t\t\t\t\t'hsl( 180, 100%, 47% )',\n\t\t\t\t\t'hsl( 240, 100%, 58% )',\n\t\t\t\t\t'hsl( 300, 100%, 50% )',\n\t\t\t\t\t'hsl( 360, 100%, 50% )'\n\t\t\t\t]\n\t\t\t},\n\t\t};\n\n\t\t// Set container\n\t\tthis._container = container || document.body;\n\n\t\t// Make sure we have minimal width and height dimensions in case of an inline container\n\t\tthis._defaultWidth  = this._container.clientWidth  || 640;\n\t\tthis._defaultHeight = this._container.clientHeight || 270;\n\n\t\t// Use audio context provided by user, or create a new one\n\n\t\tlet audioCtx;\n\n\t\tif ( options.source && ( audioCtx = options.source.context ) ) {\n\t\t\t// get audioContext from provided source audioNode\n\t\t}\n\t\telse if ( audioCtx = options.audioCtx ) {\n\t\t\t// use audioContext provided by user\n\t\t}\n\t\telse {\n\t\t\ttry {\n\t\t\t\taudioCtx = new ( window.AudioContext || window.webkitAudioContext )();\n\t\t\t}\n\t\t\tcatch( err ) {\n\t\t\t\tthrow new AudioMotionError( 'ERR_AUDIO_CONTEXT_FAIL', 'Could not create audio context. Web Audio API not supported?' );\n\t\t\t}\n\t\t}\n\n\t\t// make sure audioContext is valid\n\t\tif ( ! audioCtx.createGain )\n\t\t\tthrow new AudioMotionError( 'ERR_INVALID_AUDIO_CONTEXT', 'Provided audio context is not valid' );\n\n\t\t/*\n\t\t\tConnection routing:\n\t\t\t===================\n\n\t\t\tfor STEREO:                              +--->  analyzer[0]  ---+\n\t\t    \t                                     |                      |\n\t\t\t(source) --->  input  --->  splitter  ---+                      +--->  merger  --->  output  ---> (destination)\n\t\t    \t                                     |                      |\n\t\t        \t                                 +--->  analyzer[1]  ---+\n\n\t\t\tfor MONO:\n\n\t\t\t(source) --->  input  ----------------------->  analyzer[0]  --------------------->  output  ---> (destination)\n\n\t\t*/\n\n\t\t// create the analyzer nodes, channel splitter and merger, and gain nodes for input/output connections\n\t\tconst analyzer = this._analyzer = [ audioCtx.createAnalyser(), audioCtx.createAnalyser() ];\n\t\tconst splitter = this._splitter = audioCtx.createChannelSplitter(2);\n \t\tconst merger   = this._merger   = audioCtx.createChannelMerger(2);\n \t\tthis._input    = audioCtx.createGain();\n \t\tthis._output   = audioCtx.createGain();\n\n \t\t// initialize sources array and connect audio source if provided in the options\n\t\tthis._sources = [];\n\t\tif ( options.source )\n\t\t\tthis.connectInput( options.source );\n\n \t\t// connect splitter -> analyzers\n \t\tfor ( const i of [0,1] )\n\t\t\tsplitter.connect( analyzer[ i ], i );\n\n\t\t// connect merger -> output\n\t\tmerger.connect( this._output );\n\n\t\t// connect output -> destination (speakers)\n\t\tthis._outNodes = [];\n\t\tif ( options.connectSpeakers !== false )\n\t\t\tthis.connectOutput();\n\n\t\t// initialize object to save energy\n\t\tthis._energy = { val: 0, peak: 0, hold: 0 };\n\n\t\t// create analyzer canvas\n\t\tconst canvas = document.createElement('canvas');\n\t\tcanvas.style = 'max-width: 100%;';\n\t\tthis._canvasCtx = canvas.getContext('2d');\n\n\t\t// create auxiliary canvases for the X-axis and radial scale labels\n\t\tfor ( const ctx of [ '_scaleX', '_scaleR' ] )\n\t\t\tthis[ ctx ] = document.createElement('canvas').getContext('2d');\n\n\t\t// set fullscreen element (defaults to canvas)\n\t\tthis._fsEl = options.fsElement || canvas;\n\n\t\t// Update canvas size on container / window resize and fullscreen events\n\n\t\t// Fullscreen changes are handled quite differently across browsers:\n\t\t// 1. Chromium browsers will trigger a `resize` event followed by a `fullscreenchange`\n\t\t// 2. Firefox triggers the `fullscreenchange` first and then the `resize`\n\t\t// 3. Chrome on Android (TV) won't trigger a `resize` event, only `fullscreenchange`\n\t\t// 4. Safari won't trigger `fullscreenchange` events at all, and on iPadOS the `resize`\n\t\t//    event is triggered **on the window** only (last tested on iPadOS 14)\n\n\t\t// helper function for resize events\n\t\tconst onResize = () => {\n\t\t\tif ( ! this._fsTimeout ) {\n\t\t\t\t// delay the resize to prioritize a possible following `fullscreenchange` event\n\t\t\t\tthis._fsTimeout = window.setTimeout( () => {\n\t\t\t\t\tif ( ! this._fsChanging ) {\n\t\t\t\t\t\tthis._setCanvas('resize');\n\t\t\t\t\t\tthis._fsTimeout = 0;\n\t\t\t\t\t}\n\t\t\t\t}, 60 );\n\t\t\t}\n\t\t}\n\n\t\t// if browser supports ResizeObserver, listen for resize on the container\n\t\tif ( window.ResizeObserver ) {\n\t\t\tconst resizeObserver = new ResizeObserver( onResize );\n\t\t\tresizeObserver.observe( this._container );\n\t\t}\n\n\t\t// listen for resize events on the window - required for fullscreen on iPadOS\n\t\twindow.addEventListener( 'resize', onResize );\n\n\t\t// listen for fullscreenchange events on the canvas - not available on Safari\n\t\tcanvas.addEventListener( 'fullscreenchange', () => {\n\t\t\t// set flag to indicate a fullscreen change in progress\n\t\t\tthis._fsChanging = true;\n\n\t\t\t// if there is a scheduled resize event, clear it\n\t\t\tif ( this._fsTimeout )\n\t\t\t\twindow.clearTimeout( this._fsTimeout );\n\n\t\t\t// update the canvas\n\t\t\tthis._setCanvas('fschange');\n\n\t\t\t// delay clearing the flag to prevent any shortly following resize event\n\t\t\tthis._fsTimeout = window.setTimeout( () => {\n\t\t\t\tthis._fsChanging = false;\n\t\t\t\tthis._fsTimeout = 0;\n\t\t\t}, 60 );\n\t\t});\n\n\t\t// Resume audio context if in suspended state (browsers' autoplay policy)\n\t\tconst unlockContext = () => {\n\t\t\tif ( audioCtx.state == 'suspended' )\n\t\t\t\taudioCtx.resume();\n\t\t\twindow.removeEventListener( 'click', unlockContext );\n\t\t}\n\t\twindow.addEventListener( 'click', unlockContext );\n\n\t\t// initialize internal variables\n\t\tthis._calcAux();\n\n\t\t// Set configuration options and use defaults for any missing properties\n\t\tthis._setProps( options, true );\n\n\t\t// add canvas to the container\n\t\tif ( this.useCanvas )\n\t\t\tthis._container.appendChild( canvas );\n\n\t\t// Finish canvas setup\n\t\tthis._ready = true;\n\t\tthis._setCanvas('create');\n\t}\n\n\t/**\n\t * ==========================================================================\n\t *\n\t * PUBLIC PROPERTIES GETTERS AND SETTERS\n\t *\n\t * ==========================================================================\n\t */\n\n\n\tget alphaBars() {\n\t\treturn this._alphaBars;\n\t}\n\tset alphaBars( value ) {\n\t\tthis._alphaBars = !! value;\n\t\tthis._calcAux();\n\t}\n\n\tget barSpace() {\n\t\treturn this._barSpace;\n\t}\n\tset barSpace( value ) {\n\t\tthis._barSpace = +value || 0;\n\t\tthis._calcAux();\n\t}\n\n\tget fftSize() {\n\t\treturn this._analyzer[0].fftSize;\n\t}\n\tset fftSize( value ) {\n\t\tfor ( const i of [0,1] )\n\t\t\tthis._analyzer[ i ].fftSize = value;\n\t\tconst binCount = this._analyzer[0].frequencyBinCount;\n\t\tthis._fftData = [ new Uint8Array( binCount ), new Uint8Array( binCount ) ];\n\t\tthis._calcBars();\n\t}\n\n\tget gradient() {\n\t\treturn this._gradient;\n\t}\n\tset gradient( value ) {\n\t\tif ( ! this._gradients.hasOwnProperty( value ) )\n\t\t\tthrow new AudioMotionError( 'ERR_UNKNOWN_GRADIENT', `Unknown gradient: '${value}'` );\n\n\t\tthis._gradient = value;\n\t\tthis._makeGrad();\n\t}\n\n\tget height() {\n\t\treturn this._height;\n\t}\n\tset height( h ) {\n\t\tthis._height = h;\n\t\tthis._setCanvas('user');\n\t}\n\n\tget ledBars() {\n\t\treturn this._showLeds;\n\t}\n\tset ledBars( value ) {\n\t\tthis._showLeds = !! value;\n\t\tthis._calcAux();\n\t}\n\n\tget loRes() {\n\t\treturn this._loRes;\n\t}\n\tset loRes( value ) {\n\t\tthis._loRes = !! value;\n\t\tthis._setCanvas('lores');\n\t}\n\n\tget lumiBars() {\n\t\treturn this._lumiBars;\n\t}\n\tset lumiBars( value ) {\n\t\tthis._lumiBars = !! value;\n\t\tthis._calcAux();\n\t\tthis._calcLeds();\n\t\tthis._makeGrad();\n\t}\n\n\tget maxDecibels() {\n\t\treturn this._analyzer[0].maxDecibels;\n\t}\n\tset maxDecibels( value ) {\n\t\tfor ( const i of [0,1] )\n\t\t\tthis._analyzer[ i ].maxDecibels = value;\n\t}\n\n\tget maxFreq() {\n\t\treturn this._maxFreq;\n\t}\n\tset maxFreq( value ) {\n\t\tif ( value < 1 )\n\t\t\tthrow new AudioMotionError( 'ERR_FREQUENCY_TOO_LOW', `Frequency values must be >= 1` );\n\t\telse {\n\t\t\tthis._maxFreq = value;\n\t\t\tthis._calcBars();\n\t\t}\n\t}\n\n\tget minDecibels() {\n\t\treturn this._analyzer[0].minDecibels;\n\t}\n\tset minDecibels( value ) {\n\t\tfor ( const i of [0,1] )\n\t\t\tthis._analyzer[ i ].minDecibels = value;\n\t}\n\n\tget minFreq() {\n\t\treturn this._minFreq;\n\t}\n\tset minFreq( value ) {\n\t\tif ( value < 1 )\n\t\t\tthrow new AudioMotionError( 'ERR_FREQUENCY_TOO_LOW', `Frequency values must be >= 1` );\n\t\telse {\n\t\t\tthis._minFreq = value;\n\t\t\tthis._calcBars();\n\t\t}\n\t}\n\n\tget mirror() {\n\t\treturn this._mirror;\n\t}\n\tset mirror( value ) {\n\t\tthis._mirror = Math.sign( value ) | 0; // ensure only -1, 0 or 1\n\t\tthis._calcAux();\n\t\tthis._calcBars();\n\t\tthis._makeGrad();\n\t}\n\n\tget mode() {\n\t\treturn this._mode;\n\t}\n\tset mode( value ) {\n\t\tconst mode = value | 0;\n\t\tif ( mode >= 0 && mode <= 10 && mode != 9 ) {\n\t\t\tthis._mode = mode;\n\t\t\tthis._calcAux();\n\t\t\tthis._calcBars();\n\t\t\tthis._makeGrad();\n\t\t}\n\t\telse\n\t\t\tthrow new AudioMotionError( 'ERR_INVALID_MODE', `Invalid mode: ${value}` );\n\t}\n\n\tget outlineBars() {\n\t\treturn this._outlineBars;\n\t}\n\tset outlineBars( value ) {\n\t\tthis._outlineBars = !! value;\n\t\tthis._calcAux();\n\t}\n\n\tget radial() {\n\t\treturn this._radial;\n\t}\n\tset radial( value ) {\n\t\tthis._radial = !! value;\n\t\tthis._calcAux();\n\t\tthis._calcBars();\n\t\tthis._makeGrad();\n\t}\n\n\tget reflexRatio() {\n\t\treturn this._reflexRatio;\n\t}\n\tset reflexRatio( value ) {\n\t\tvalue = +value || 0;\n\t\tif ( value < 0 || value >= 1 )\n\t\t\tthrow new AudioMotionError( 'ERR_REFLEX_OUT_OF_RANGE', `Reflex ratio must be >= 0 and < 1` );\n\t\telse {\n\t\t\tthis._reflexRatio = value;\n\t\t\tthis._calcAux();\n\t\t\tthis._makeGrad();\n\t\t\tthis._calcLeds();\n\t\t}\n\t}\n\n\t// DEPRECATED - use ledBars instead\n\tget showLeds() {\n\t\treturn this.ledBars;\n\t}\n\tset showLeds( value ) {\n\t\tthis.ledBars = value;\n\t}\n\n\tget smoothing() {\n\t\treturn this._analyzer[0].smoothingTimeConstant;\n\t}\n\tset smoothing( value ) {\n\t\tfor ( const i of [0,1] )\n\t\t\tthis._analyzer[ i ].smoothingTimeConstant = value;\n\t}\n\n\tget spinSpeed() {\n\t\treturn this._spinSpeed;\n\t}\n\tset spinSpeed( value ) {\n\t\tvalue = +value || 0;\n\t\tif ( this._spinSpeed === undefined || value == 0 )\n\t\t\tthis._spinAngle = -HALF_PI; // initialize or reset the rotation angle\n\t\tthis._spinSpeed = value;\n\t}\n\n\tget splitGradient() {\n\t\treturn this._splitGradient;\n\t}\n\tset splitGradient( value ) {\n\t\tthis._splitGradient = !! value;\n\t\tthis._makeGrad();\n\t}\n\n\tget stereo() {\n\t\treturn this._stereo;\n\t}\n\tset stereo( value ) {\n\t\tthis._stereo = !! value;\n\n\t\t// update node connections\n\t\tthis._input.disconnect();\n\t\tthis._input.connect( this._stereo ? this._splitter : this._analyzer[0] );\n\t\tthis._analyzer[0].disconnect();\n\t\tif ( this._outNodes.length ) // connect analyzer only if the output is connected to other nodes\n\t\t\tthis._analyzer[0].connect( this._stereo ? this._merger : this._output );\n\n\t\t// update properties affected by stereo\n\t\tthis._calcAux();\n\t\tthis._createScales();\n\t\tthis._calcLeds();\n\t\tthis._makeGrad();\n\t}\n\n\tget volume() {\n\t\treturn this._output.gain.value;\n\t}\n\tset volume( value ) {\n\t\tthis._output.gain.value = value;\n\t}\n\n\tget width() {\n\t\treturn this._width;\n\t}\n\tset width( w ) {\n\t\tthis._width = w;\n\t\tthis._setCanvas('user');\n\t}\n\n\t// Read only properties\n\n\tget audioCtx() {\n\t\treturn this._input.context;\n\t}\n\tget canvas() {\n\t\treturn this._canvasCtx.canvas;\n\t}\n\tget canvasCtx() {\n\t\treturn this._canvasCtx;\n\t}\n\tget connectedSources() {\n\t\treturn this._sources;\n\t}\n\tget connectedTo() {\n\t\treturn this._outNodes;\n\t}\n\tget energy() { // DEPRECATED - use getEnergy() instead\n\t\treturn this.getEnergy();\n\t}\n\tget fps() {\n\t\treturn this._fps;\n\t}\n\tget fsHeight() {\n\t\treturn this._fsHeight;\n\t}\n\tget fsWidth() {\n\t\treturn this._fsWidth;\n\t}\n\tget isAlphaBars() {\n\t\treturn this._isAlphaBars;\n\t}\n\tget isFullscreen() {\n\t\treturn ( document.fullscreenElement || document.webkitFullscreenElement ) === this._fsEl;\n\t}\n\tget isLedBars() {\n\t\treturn this._isLedDisplay;\n\t}\n\tget isLedDisplay() { // DEPRECATED - use isLedBars instead\n\t\treturn this.isLedBars;\n\t}\n\tget isLumiBars() {\n\t\treturn this._isLumiBars;\n\t}\n\tget isOctaveBands() {\n\t\treturn this._isOctaveBands;\n\t}\n\tget isOn() {\n\t\treturn this._runId !== undefined;\n\t}\n\tget isOutlineBars() {\n\t\treturn this._isOutline;\n\t}\n\tget peakEnergy() { // DEPRECATED - use getEnergy('peak') instead\n\t\treturn this.getEnergy('peak');\n\t}\n\tget pixelRatio() {\n\t\treturn this._pixelRatio;\n\t}\n\tstatic get version() {\n\t\treturn VERSION;\n\t}\n\n\t/**\n\t * ==========================================================================\n     *\n\t * PUBLIC METHODS\n\t *\n\t * ==========================================================================\n\t */\n\n\t/**\n\t * Connects an HTML media element or audio node to the analyzer\n\t *\n\t * @param {object} an instance of HTMLMediaElement or AudioNode\n\t * @returns {object} a MediaElementAudioSourceNode object if created from HTML element, or the same input object otherwise\n\t */\n\tconnectInput( source ) {\n\t\tconst isHTML = source instanceof HTMLMediaElement;\n\n\t\tif ( ! ( isHTML || source.connect ) )\n\t\t\tthrow new AudioMotionError( 'ERR_INVALID_AUDIO_SOURCE', 'Audio source must be an instance of HTMLMediaElement or AudioNode' );\n\n\t\t// if source is an HTML element, create an audio node for it; otherwise, use the provided audio node\n\t\tconst node = isHTML ? this.audioCtx.createMediaElementSource( source ) : source;\n\n\t\tif ( ! this._sources.includes( node ) ) {\n\t\t\tnode.connect( this._input );\n\t\t\tthis._sources.push( node );\n\t\t}\n\n\t\treturn node;\n\t}\n\n\t/**\n\t * Connects the analyzer output to another audio node\n\t *\n\t * @param [{object}] an AudioNode; if undefined, the output is connected to the audio context destination (speakers)\n\t */\n\tconnectOutput( node = this.audioCtx.destination ) {\n\t\tif ( this._outNodes.includes( node ) )\n\t\t\treturn;\n\n\t\tthis._output.connect( node );\n\t\tthis._outNodes.push( node );\n\n\t\t// when connecting the first node, also connect the analyzer nodes to the merger / output nodes\n\t\tif ( this._outNodes.length == 1 ) {\n\t\t\tfor ( const i of [0,1] )\n\t\t\t\tthis._analyzer[ i ].connect( ( ! this._stereo && ! i ? this._output : this._merger ), 0, i );\n\t\t}\n\t}\n\n\t/**\n\t * Disconnects audio sources from the analyzer\n\t *\n\t * @param [{object|array}] a connected AudioNode object or an array of such objects; if undefined, all connected nodes are disconnected\n\t */\n\tdisconnectInput( sources ) {\n\t\tif ( ! sources )\n\t\t\tsources = Array.from( this._sources );\n\t\telse if ( ! Array.isArray( sources ) )\n\t\t\tsources = [ sources ];\n\n\t\tfor ( const node of sources ) {\n\t\t\tconst idx = this._sources.indexOf( node );\n\t\t\tif ( idx >= 0 ) {\n\t\t\t\tnode.disconnect( this._input );\n\t\t\t\tthis._sources.splice( idx, 1 );\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Disconnects the analyzer output from other audio nodes\n\t *\n\t * @param [{object}] a connected AudioNode object; if undefined, all connected nodes are disconnected\n\t */\n\tdisconnectOutput( node ) {\n\t\tif ( node && ! this._outNodes.includes( node ) )\n\t\t\treturn;\n\n\t\tthis._output.disconnect( node );\n\t\tthis._outNodes = node ? this._outNodes.filter( e => e !== node ) : [];\n\n\t\t// if disconnected from all nodes, also disconnect the analyzer nodes so they keep working on Chromium\n\t\t// see https://github.com/hvianna/audioMotion-analyzer/issues/13#issuecomment-808764848\n\t\tif ( this._outNodes.length == 0 ) {\n\t\t\tfor ( const i of [0,1] )\n\t\t\t\tthis._analyzer[ i ].disconnect();\n\t\t}\n\t}\n\n\t/**\n\t * Returns analyzer bars data\n     *\n\t * @returns {array}\n\t */\n\tgetBars() {\n\t\treturn Array.from( this._bars, ( { posX, freqLo, freqHi, hold, peak, value } ) => ( { posX, freqLo, freqHi, hold, peak, value } ) );\n\t}\n\n\t/**\n\t * Returns the energy of a frequency, or average energy of a range of frequencies\n\t *\n\t * @param [{number|string}] single or initial frequency (Hz), or preset name; if undefined, returns the overall energy\n\t * @param [{number}] ending frequency (Hz)\n\t * @returns {number|null} energy value (0 to 1) or null, if the specified preset is unknown\n\t */\n\tgetEnergy( startFreq, endFreq ) {\n\t\tif ( startFreq === undefined )\n\t\t\treturn this._energy.val;\n\n\t\t// if startFreq is a string, check for presets\n\t\tif ( startFreq != +startFreq ) {\n\t\t\tif ( startFreq == 'peak' )\n\t\t\t\treturn this._energy.peak;\n\n\t\t\tconst presets = {\n\t\t\t\tbass:    [ 20, 250 ],\n\t\t\t\tlowMid:  [ 250, 500 ],\n\t\t\t\tmid:     [ 500, 2e3 ],\n\t\t\t\thighMid: [ 2e3, 4e3 ],\n\t\t\t\ttreble:  [ 4e3, 16e3 ]\n\t\t\t}\n\n\t\t\tif ( ! presets[ startFreq ] )\n\t\t\t\treturn null;\n\n\t\t\t[ startFreq, endFreq ] = presets[ startFreq ];\n\t\t}\n\n\t\tconst startBin = this._freqToBin( startFreq ),\n\t\t      endBin   = endFreq ? this._freqToBin( endFreq ) : startBin,\n\t\t      chnCount = this._stereo + 1;\n\n\t\tlet energy = 0;\n\t\tfor ( let channel = 0; channel < chnCount; channel++ ) {\n\t\t\tfor ( let i = startBin; i <= endBin; i++ )\n\t\t\t\tenergy += this._fftData[ channel ][ i ];\n\t\t}\n\n\t\treturn energy / ( endBin - startBin + 1 ) / chnCount / 255;\n\t}\n\n\t/**\n\t * Registers a custom gradient\n\t *\n\t * @param {string} name\n\t * @param {object} options\n\t */\n\tregisterGradient( name, options ) {\n\t\tif ( typeof name !== 'string' || name.trim().length == 0 )\n\t\t\tthrow new AudioMotionError( 'ERR_GRADIENT_INVALID_NAME', 'Gradient name must be a non-empty string' );\n\n\t\tif ( typeof options !== 'object' )\n\t\t\tthrow new AudioMotionError( 'ERR_GRADIENT_NOT_AN_OBJECT', 'Gradient options must be an object' );\n\n\t\tif ( options.colorStops === undefined || options.colorStops.length < 2 )\n\t\t\tthrow new AudioMotionError( 'ERR_GRADIENT_MISSING_COLOR', 'Gradient must define at least two colors' );\n\n\t\tthis._gradients[ name ] = {\n\t\t\tbgColor:    options.bgColor || '#111',\n\t\t\tdir:        options.dir,\n\t\t\tcolorStops: options.colorStops\n\t\t};\n\n\t\t// if the registered gradient is the current one, regenerate it\n\t\tif ( name == this._gradient )\n\t\t\tthis._makeGrad();\n\t}\n\n\t/**\n\t * Set dimensions of analyzer's canvas\n\t *\n\t * @param {number} w width in pixels\n\t * @param {number} h height in pixels\n\t */\n\tsetCanvasSize( w, h ) {\n\t\tthis._width = w;\n\t\tthis._height = h;\n\t\tthis._setCanvas('user');\n\t}\n\n\t/**\n\t * Set desired frequency range\n\t *\n\t * @param {number} min lowest frequency represented in the x-axis\n\t * @param {number} max highest frequency represented in the x-axis\n\t */\n\tsetFreqRange( min, max ) {\n\t\tif ( min < 1 || max < 1 )\n\t\t\tthrow new AudioMotionError( 'ERR_FREQUENCY_TOO_LOW', `Frequency values must be >= 1` );\n\t\telse {\n\t\t\tthis._minFreq = Math.min( min, max );\n\t\t\tthis._maxFreq = Math.max( min, max );\n\t\t\tthis._calcBars();\n\t\t}\n\t}\n\n\t/**\n\t * Set custom parameters for LED effect\n\t * If called with no arguments or if any property is invalid, clears any previous custom parameters\n\t *\n\t * @param {object} [params]\n\t */\n\tsetLedParams( params ) {\n\t\tlet maxLeds, spaceV, spaceH;\n\n\t\t// coerce parameters to Number; `NaN` results are rejected in the condition below\n\t\tif ( params ) {\n\t\t\tmaxLeds = params.maxLeds | 0, // ensure integer\n\t\t\tspaceV  = +params.spaceV,\n\t\t\tspaceH  = +params.spaceH;\n\t\t}\n\n\t\tthis._ledParams = maxLeds > 0 && spaceV > 0 && spaceH >= 0 ? [ maxLeds, spaceV, spaceH ] : undefined;\n\t\tthis._calcLeds();\n\t}\n\n\t/**\n\t * Shorthand function for setting several options at once\n\t *\n\t * @param {object} options\n\t */\n\tsetOptions( options ) {\n\t\tthis._setProps( options );\n\t}\n\n\t/**\n\t * Adjust the analyzer's sensitivity\n\t *\n\t * @param {number} min minimum decibels value\n\t * @param {number} max maximum decibels value\n\t */\n\tsetSensitivity( min, max ) {\n\t\tfor ( const i of [0,1] ) {\n\t\t\tthis._analyzer[ i ].minDecibels = Math.min( min, max );\n\t\t\tthis._analyzer[ i ].maxDecibels = Math.max( min, max );\n\t\t}\n\t}\n\n\t/**\n\t * Start / stop canvas animation\n\t *\n\t * @param {boolean} [value] if undefined, inverts the current status\n\t * @returns {boolean} resulting status after the change\n\t */\n\ttoggleAnalyzer( value ) {\n\t\tconst started = this.isOn;\n\n\t\tif ( value === undefined )\n\t\t\tvalue = ! started;\n\n\t\tif ( started && ! value ) {\n\t\t\tcancelAnimationFrame( this._runId );\n\t\t\tthis._runId = undefined;\n\t\t}\n\t\telse if ( ! started && value ) {\n\t\t\tthis._frame = this._fps = 0;\n\t\t\tthis._time = performance.now();\n\t\t\tthis._runId = requestAnimationFrame( timestamp => this._draw( timestamp ) );\n\t\t}\n\n\t\treturn this.isOn;\n\t}\n\n\t/**\n\t * Toggles canvas full-screen mode\n\t */\n\ttoggleFullscreen() {\n\t\tif ( this.isFullscreen ) {\n\t\t\tif ( document.exitFullscreen )\n\t\t\t\tdocument.exitFullscreen();\n\t\t\telse if ( document.webkitExitFullscreen )\n\t\t\t\tdocument.webkitExitFullscreen();\n\t\t}\n\t\telse {\n\t\t\tconst fsEl = this._fsEl;\n\t\t\tif ( fsEl.requestFullscreen )\n\t\t\t\tfsEl.requestFullscreen();\n\t\t\telse if ( fsEl.webkitRequestFullscreen )\n\t\t\t\tfsEl.webkitRequestFullscreen();\n\t\t}\n\t}\n\n\t/**\n\t * ==========================================================================\n\t *\n\t * PRIVATE METHODS\n\t *\n\t * ==========================================================================\n\t */\n\n\t/**\n\t * Calculate auxiliary values and flags\n\t */\n\t_calcAux() {\n\t\tconst canvas   = this.canvas,\n\t\t\t  isRadial = this._radial,\n\t\t\t  isDual   = this._stereo && ! isRadial,\n\t\t\t  centerX  = canvas.width >> 1;\n\n\t\tthis._radius         = Math.min( canvas.width, canvas.height ) * ( this._stereo ? .375 : .125 ) | 0;\n\t\tthis._barSpacePx     = Math.min( this._barWidth - 1, ( this._barSpace > 0 && this._barSpace < 1 ) ? this._barWidth * this._barSpace : this._barSpace );\n\t\tthis._isOctaveBands  = this._mode % 10 != 0;\n\t\tthis._isLedDisplay   = this._showLeds && this._isOctaveBands && ! isRadial;\n\t\tthis._isLumiBars     = this._lumiBars && this._isOctaveBands && ! isRadial;\n\t\tthis._isAlphaBars    = this._alphaBars && ! this._isLumiBars && this._mode != 10;\n\t\tthis._isOutline      = this._outlineBars && this._isOctaveBands && ! this._isLumiBars && ! this._isLedDisplay;\n\t\tthis._maximizeLeds   = ! this._stereo || this._reflexRatio > 0 && ! this._isLumiBars;\n\n\t\tthis._channelHeight  = canvas.height - ( isDual && ! this._isLedDisplay ? .5 : 0 ) >> isDual;\n\t\tthis._analyzerHeight = this._channelHeight * ( this._isLumiBars || isRadial ? 1 : 1 - this._reflexRatio ) | 0;\n\n\t\t// channelGap is **0** if isLedDisplay == true (LEDs already have spacing); **1** if canvas height is odd (windowed); **2** if it's even\n\t\t// TODO: improve this, make it configurable?\n\t\tthis._channelGap     = isDual ? canvas.height - this._channelHeight * 2 : 0;\n\n\t\tthis._analyzerWidth  = canvas.width - centerX * ( this._mirror != 0 );\n\t\tthis._initialX       = centerX * ( this._mirror == -1 && ! isRadial );\n\t}\n\n\t/**\n\t * Precalculate the actual X-coordinate on screen for each analyzer bar\n\t */\n\t_calcBars() {\n\t\t/*\n\t \t   Since the frequency scale is logarithmic, each position in the X-axis actually represents a power of 10.\n\t \t   To improve performace, the position of each frequency is calculated in advance and stored in an array.\n\t \t   Canvas space usage is optimized to accommodate exactly the frequency range the user needs.\n\t \t   Positions need to be recalculated whenever the frequency range, FFT size or canvas size change.\n\n\t \t                                +-------------------------- canvas --------------------------+\n\t \t                                |                                                            |\n\t \t      |-------------------|-----|-------------|-------------------!-------------------|------|------------|\n\t \t      1                  10     |            100                  1K                 10K     |           100K (Hz)\n\t \t   (10^0)              (10^1)   |          (10^2)               (10^3)              (10^4)   |          (10^5)\n\t \t                                |-------------|<--- logWidth ---->|--------------------------|\n\t \t                    minFreq--> 20                   (pixels)                                22K <--maxFreq\n\t \t                            (10^1.3)                                                     (10^4.34)\n\t \t                             minLog\n\t \t*/\n\n\t\tconst bars = this._bars = []; // initialize object property\n\n\t\tif ( ! this._ready )\n\t\t\treturn;\n\n\t\t// helper functions\n\t\tconst binToFreq = bin => bin * this.audioCtx.sampleRate / this.fftSize || 1; // returns 1 for bin 0\n\t\tconst barsPush  = ( posX, binLo, binHi, freqLo, freqHi, ratioLo, ratioHi ) => bars.push( { posX, binLo, binHi, freqLo, freqHi, ratioLo, ratioHi, peak: [0,0], hold: [0], value: [0] } );\n\n\t\tconst analyzerWidth = this._analyzerWidth,\n\t\t\t  initialX      = this._initialX,\n\t\t\t  maxFreq       = this._maxFreq,\n\t\t\t  minFreq       = this._minFreq;\n\n\t\tlet minLog,\tlogWidth;\n\n\t\tif ( this._isOctaveBands ) {\n\n\t\t\t// generate a 11-octave 24-tone equal tempered scale (16Hz to 33kHz)\n\n\t\t\t/*\n\t\t\t\tA simple linear interpolation is used to obtain an approximate amplitude value for the desired frequency\n\t\t\t\tfrom available FFT data, like so:\n\n\t\t\t\th = hLo + ( hHi - hLo ) * ( f - fLo ) / ( fHi - fLo )\n\t\t\t\t                         \\___________________________/\n\t\t\t\t                                       |\n\t\t\t\t                                     ratio\n\t\t\t\twhere:\n\n\t\t\t\tf   - desired frequency\n\t\t\t\th   - amplitude of desired frequency\n\t\t\t\tfLo - frequency represented by the lower FFT bin\n\t\t\t\tfHi - frequency represented by the higher FFT bin\n\t\t\t\thLo - amplitude of fLo\n\t\t\t\thHi - amplitude of fHi\n\n\t\t\t\tratio is calculated in advance here, to reduce computational complexity during real-time rendering in the _draw() function\n\t\t\t*/\n\n\t\t\tlet temperedScale = [];\n\n\t\t\tfor ( let octave = 0; octave < 11; octave++ ) {\n\t\t\t\tfor ( let note = 0; note < 24; note++ ) {\n\n\t\t\t\t\tconst freq     = C0 * ROOT24 ** ( octave * 24 + note ),\n\t\t\t\t\t\t  bin      = this._freqToBin( freq, 'floor' ),\n\t\t\t\t\t\t  binFreq  = binToFreq( bin ),\n\t\t\t\t\t\t  nextFreq = binToFreq( bin + 1 ),\n\t\t\t\t\t\t  ratio    = ( freq - binFreq ) / ( nextFreq - binFreq );\n\n\t\t\t\t\ttemperedScale.push( { freq, bin, ratio } );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// generate the frequency bands according to current analyzer settings\n\n\t\t\tconst steps = [0,1,2,3,4,6,8,12,24][ this._mode ]; // number of notes grouped per band for each mode\n\n\t\t\tfor ( let index = 0; index < temperedScale.length; index += steps ) {\n\t\t\t\tlet { freq: freqLo, bin: binLo, ratio: ratioLo } = temperedScale[ index ],             // band start\n\t\t\t\t\t{ freq: freqHi, bin: binHi, ratio: ratioHi } = temperedScale[ index + steps - 1 ]; // band end\n\n\t\t\t\tconst nBars   = bars.length,\n\t\t\t\t\t  prevBar = bars[ nBars - 1 ];\n\n\t\t\t\t// if the ending frequency is out of range, we're done here\n\t\t\t\tif ( freqHi > maxFreq || binHi >= this.fftSize / 2 ) {\n\t\t\t\t\tprevBar.binHi++;     // add an extra bin to the last bar, to fully include the last valid band\n\t\t\t\t\tprevBar.ratioHi = 0; // disable interpolation\n\t\t\t\t\tprevBar.freqHi = binToFreq( prevBar.binHi ); // update ending frequency\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\t// is the starting frequency in the selected range?\n\t\t\t\tif ( freqLo >= minFreq ) {\n\t\t\t\t\tif ( nBars > 0 ) {\n\t\t\t\t\t\tconst diff = binLo - prevBar.binHi;\n\n\t\t\t\t\t\t// check if we skipped any available FFT bins since the last bar\n\t\t\t\t\t\tif ( diff > 1 ) {\n\t\t\t\t\t\t\t// allocate half of the unused bins to the previous bar\n\t\t\t\t\t\t\tprevBar.binHi = binLo - ( diff >> 1 );\n\t\t\t\t\t\t\tprevBar.ratioHi = 0;\n\t\t\t\t\t\t\tprevBar.freqHi = binToFreq( prevBar.binHi ); // update ending frequency\n\n\t\t\t\t\t\t\t// if the previous bar doesn't share any bins with other bars, no need for interpolation\n\t\t\t\t\t\t\tif ( nBars > 1 && prevBar.binHi > prevBar.binLo && prevBar.binLo > bars[ nBars - 2 ].binHi ) {\n\t\t\t\t\t\t\t\tprevBar.ratioLo = 0;\n\t\t\t\t\t\t\t\tprevBar.freqLo = binToFreq( prevBar.binLo ); // update starting frequency\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// start the current bar at the bin following the last allocated bin\n\t\t\t\t\t\t\tbinLo = prevBar.binHi + 1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// if the lower bin is not shared with the ending frequency nor the previous bar, no need to interpolate it\n\t\t\t\t\t\tif ( binHi > binLo && binLo > prevBar.binHi ) {\n\t\t\t\t\t\t\tratioLo = 0;\n\t\t\t\t\t\t\tfreqLo = binToFreq( binLo );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tbarsPush( 0, binLo, binHi, freqLo, freqHi, ratioLo, ratioHi );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._barWidth = analyzerWidth / bars.length;\n\n\t\t\tbars.forEach( ( bar, index ) => bar.posX = initialX + index * this._barWidth );\n\n\t\t\tminLog = Math.log10( bars[0].freqLo );\n\t\t\tlogWidth = analyzerWidth / ( Math.log10( bars[ bars.length - 1 ].freqHi ) - minLog );\n\t\t}\n\t\telse {\n\n\t\t\t// Discrete frequencies modes\n\n\t\t\tthis._barWidth = 1;\n\n\t\t\tminLog = Math.log10( minFreq );\n\t\t\tlogWidth = analyzerWidth / ( Math.log10( maxFreq ) - minLog );\n\n\t\t\tconst minIndex = this._freqToBin( minFreq, 'floor' ),\n\t\t\t\t  maxIndex = this._freqToBin( maxFreq );\n\n\t \t\tlet lastPos = -999;\n\n\t\t\tfor ( let i = minIndex; i <= maxIndex; i++ ) {\n\t\t\t\tconst freq = binToFreq( i ), // frequency represented by this index\n\t\t\t\t\t  pos  = initialX + Math.round( logWidth * ( Math.log10( freq ) - minLog ) ); // avoid fractionary pixel values\n\n\t\t\t\t// if it's on a different X-coordinate, create a new bar for this frequency\n\t\t\t\tif ( pos > lastPos ) {\n\t\t\t\t\tbarsPush( pos, i, i, freq, freq, 0, 0 );\n\t\t\t\t\tlastPos = pos;\n\t\t\t\t} // otherwise, add this frequency to the last bar's range\n\t\t\t\telse if ( bars.length ) {\n\t\t\t\t\tbars[ bars.length - 1 ].binHi = i;\n\t\t\t\t\tbars[ bars.length - 1 ].freqHi = freq;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// save these for scale generation\n\t\tthis._minLog = minLog;\n\t\tthis._logWidth = logWidth;\n\n\t\t// update internal variables\n\t\tthis._calcAux();\n\n\t\t// generate the X-axis and radial scales\n\t\tthis._createScales();\n\n\t\t// update LED properties\n\t\tthis._calcLeds();\n\t}\n\n\t/**\n\t * Calculate attributes for the vintage LEDs effect, based on visualization mode and canvas resolution\n\t */\n\t_calcLeds() {\n\t\tif ( ! this._isOctaveBands || ! this._ready )\n\t\t\treturn;\n\n\t\t// adjustment for high pixel-ratio values on low-resolution screens (Android TV)\n\t\tconst dPR = this._pixelRatio / ( window.devicePixelRatio > 1 && window.screen.height <= 540 ? 2 : 1 );\n\n\t\tconst params = [ [],\n\t\t\t[ 128,  3, .45  ], // mode 1\n\t\t\t[ 128,  4, .225 ], // mode 2\n\t\t\t[  96,  6, .225 ], // mode 3\n\t\t\t[  80,  6, .225 ], // mode 4\n\t\t\t[  80,  6, .125 ], // mode 5\n\t\t\t[  64,  6, .125 ], // mode 6\n\t\t\t[  48,  8, .125 ], // mode 7\n\t\t\t[  24, 16, .125 ], // mode 8\n\t\t];\n\n\t\t// use custom LED parameters if set, or the default parameters for the current mode\n\t\tconst customParams = this._ledParams,\n\t\t\t  [ maxLeds, spaceVRatio, spaceHRatio ] = customParams || params[ this._mode ];\n\n\t\tlet ledCount, spaceV,\n\t\t\tanalyzerHeight = this._analyzerHeight;\n\n\t\tif ( customParams ) {\n\t\t\tconst minHeight = 2 * dPR;\n\t\t\tlet blockHeight;\n\t\t\tledCount = maxLeds + 1;\n\t\t\tdo {\n\t\t\t\tledCount--;\n\t\t\t\tblockHeight = analyzerHeight / ledCount / ( 1 + spaceVRatio );\n\t\t\t\tspaceV = blockHeight * spaceVRatio;\n\t\t\t} while ( ( blockHeight < minHeight || spaceV < minHeight ) && ledCount > 1 );\n\t\t}\n\t\telse {\n\t\t\t// calculate vertical spacing - aim for the reference ratio, but make sure it's at least 2px\n\t\t\tconst refRatio = 540 / spaceVRatio;\n\t\t\tspaceV = Math.min( spaceVRatio * dPR, Math.max( 2, analyzerHeight / refRatio + .1 | 0 ) );\n\t\t}\n\n\t\t// remove the extra spacing below the last line of LEDs\n\t\tif ( this._maximizeLeds )\n\t\t\tanalyzerHeight += spaceV;\n\n\t\t// recalculate the number of leds, considering the effective spaceV\n\t\tif ( ! customParams )\n\t\t\tledCount = Math.min( maxLeds, analyzerHeight / ( spaceV * 2 ) | 0 );\n\n\t\tthis._leds = [\n\t\t\tledCount,\n\t\t\tspaceHRatio >= 1 ? spaceHRatio : this._barWidth * spaceHRatio, // spaceH\n\t\t\tspaceV,\n\t\t\tanalyzerHeight / ledCount - spaceV // ledHeight\n\t\t];\n\t}\n\n\t/**\n\t * Generate the X-axis and radial scales in auxiliary canvases\n\t */\n\t_createScales() {\n\t\tconst freqLabels  = [ 16, 31, 63, 125, 250, 500, 1000, 2000, 4000, 8000, 16000 ],\n\t\t\t  canvas      = this._canvasCtx.canvas,\n\t\t\t  scaleX      = this._scaleX,\n\t\t\t  scaleR      = this._scaleR,\n\t\t\t  canvasX     = scaleX.canvas,\n\t\t\t  canvasR     = scaleR.canvas,\n\t\t\t  scaleHeight = Math.min( canvas.width, canvas.height ) * .03 | 0; // circular scale height (radial mode)\n\n\t\t// in radial stereo mode, the scale is positioned exactly between both channels, by making the canvas a bit larger than the central diameter\n\t\tcanvasR.width = canvasR.height = ( this._radius << 1 ) + ( this._stereo * scaleHeight );\n\n\t\tconst radius  = canvasR.width >> 1, // this is also used as the center X and Y coordinates of the circular scale canvas\n\t\t\t  radialY = radius - scaleHeight * .7;\t// vertical position of text labels in the circular scale\n\n\t\t// helper function\n\t\tconst radialLabel = ( x, label ) => {\n\t\t\tconst angle  = TAU * ( x / canvas.width ),\n\t\t\t\t  adjAng = angle - HALF_PI, // rotate angles so 0 is at the top\n\t\t\t\t  posX   = radialY * Math.cos( adjAng ),\n\t\t\t\t  posY   = radialY * Math.sin( adjAng );\n\n\t\t\tscaleR.save();\n\t\t\tscaleR.translate( radius + posX, radius + posY );\n\t\t\tscaleR.rotate( angle );\n\t\t\tscaleR.fillText( label, 0, 0 );\n\t\t\tscaleR.restore();\n\t\t}\n\n\t\t// clear scale canvas\n\t\tcanvasX.width |= 0;\n\n\t\tscaleX.fillStyle = scaleR.strokeStyle = '#000c';\n\t\tscaleX.fillRect( 0, 0, canvasX.width, canvasX.height );\n\n\t\tscaleR.arc( radius, radius, radius - scaleHeight / 2, 0, TAU );\n\t\tscaleR.lineWidth = scaleHeight;\n\t\tscaleR.stroke();\n\n\t\tscaleX.fillStyle = scaleR.fillStyle = '#fff';\n\t\tscaleX.font = `${ canvasX.height >> 1 }px sans-serif`;\n\t\tscaleR.font = `${ scaleHeight >> 1 }px sans-serif`;\n\t\tscaleX.textAlign = scaleR.textAlign = 'center';\n\n\t\tfor ( const freq of freqLabels ) {\n\t\t\tconst label = ( freq >= 1000 ) ? `${ freq / 1000 }k` : freq,\n\t\t\t\t  x     = this._logWidth * ( Math.log10( freq ) - this._minLog );\n\n\t\t\tif ( x >= 0 && x <= this._analyzerWidth ) {\n\t\t\t\tscaleX.fillText( label, this._initialX + x, canvasX.height * .75 );\n\t\t\t\tif ( x < this._analyzerWidth ) // avoid wrapping-around the last label and overlapping the first one\n\t\t\t\t\tradialLabel( x, label );\n\n\t\t\t\tif ( this._mirror ) {\n\t\t\t\t\tscaleX.fillText( label, ( this._initialX || canvas.width ) - x, canvasX.height * .75 );\n\t\t\t\t\tif ( x > 10 ) // avoid overlapping of first labels on mirror mode\n\t\t\t\t\t\tradialLabel( -x, label );\n\t\t\t\t}\n\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Redraw the canvas\n\t * this is called 60 times per second by requestAnimationFrame()\n\t */\n\t_draw( timestamp ) {\n\t\tconst ctx            = this._canvasCtx,\n\t\t\t  canvas         = ctx.canvas,\n\t\t\t  canvasX        = this._scaleX.canvas,\n\t\t\t  canvasR        = this._scaleR.canvas,\n\t\t\t  energy         = this._energy,\n\t\t\t  mode           = this._mode,\n\t\t\t  isAlphaBars    = this._isAlphaBars,\n\t\t\t  isLedDisplay   = this._isLedDisplay,\n\t\t\t  isLumiBars     = this._isLumiBars,\n\t\t\t  isOctaveBands  = this._isOctaveBands,\n\t\t\t  isOutline      = this._isOutline,\n\t\t\t  isRadial       = this._radial,\n\t\t\t  isStereo       = this._stereo,\n\t\t\t  lineWidth      = +this.lineWidth, // make sure the damn thing is a number!\n\t\t\t  mirrorMode     = this._mirror,\n\t\t\t  channelHeight  = this._channelHeight,\n\t\t\t  channelGap     = this._channelGap,\n\t\t\t  analyzerHeight = this._analyzerHeight,\n\t\t\t  analyzerWidth  = isRadial ? canvas.width : this._analyzerWidth,\n\t\t\t  initialX       = this._initialX,\n\t\t\t  finalX         = initialX + analyzerWidth,\n\t\t\t  centerX        = canvas.width >> 1,\n\t\t\t  centerY        = canvas.height >> 1,\n\t\t\t  radius         = this._radius,\n\t\t\t  maxBarHeight   = isRadial ? Math.min( centerX, centerY ) - radius : analyzerHeight,\n\t\t\t  useCanvas      = this.useCanvas;\n\n\t\tif ( energy.val > 0 )\n\t\t\tthis._spinAngle += this._spinSpeed * RPM;\n\n\t\tconst strokeIf = flag => {\n\t\t\tif ( flag && lineWidth ) {\n\t\t\t\tconst alpha = ctx.globalAlpha;\n\t\t\t\tctx.globalAlpha = 1;\n\t\t\t\tctx.stroke();\n\t\t\t\tctx.globalAlpha = alpha;\n\t\t\t}\n\t\t}\n\n\t\t// helper function - convert planar X,Y coordinates to radial coordinates\n\t\tconst radialXY = ( x, y, dir ) => {\n\t\t\tconst height = radius + y,\n\t\t\t\t  angle  = dir * TAU * ( x / canvas.width ) + this._spinAngle;\n\n\t\t\treturn [ centerX + height * Math.cos( angle ), centerY + height * Math.sin( angle ) ];\n\t\t}\n\n\t\t// helper function - draw a polygon of width `w` and height `h` at (x,y) in radial mode\n\t\tconst radialPoly = ( x, y, w, h, stroke ) => {\n\t\t\tctx.beginPath();\n\t\t\tfor ( const dir of ( mirrorMode ? [1,-1] : [1] ) ) {\n\t\t\t\tctx.moveTo( ...radialXY( x, y, dir ) );\n\t\t\t\tctx.lineTo( ...radialXY( x, y + h, dir ) );\n\t\t\t\tctx.lineTo( ...radialXY( x + w, y + h, dir ) );\n\t\t\t\tctx.lineTo( ...radialXY( x + w, y, dir ) );\n\t\t\t}\n\n\t\t\tstrokeIf( stroke );\n\t\t\tctx.fill();\n\t\t}\n\n\t\t// LED attributes and helper function for bar height calculation\n\t\tconst [ ledCount, ledSpaceH, ledSpaceV, ledHeight ] = this._leds || [];\n\t\tconst ledPosY = height => ( height * ledCount | 0 ) * ( ledHeight + ledSpaceV ) - ledSpaceV;\n\n\t\t// select background color\n\t\tconst bgColor = ( ! this.showBgColor || isLedDisplay && ! this.overlay ) ? '#000' : this._gradients[ this._gradient ].bgColor;\n\n\t\t// compute the effective bar width, considering the selected bar spacing\n\t\t// if led effect is active, ensure at least the spacing from led definitions\n\t\tlet width = this._barWidth - ( ! isOctaveBands ? 0 : Math.max( isLedDisplay ? ledSpaceH : 0, this._barSpacePx ) );\n\n\t\t// make sure width is integer for pixel accurate calculation, when no bar spacing is required\n\t\tif ( this._barSpace == 0 && ! isLedDisplay )\n\t\t\twidth |= 0;\n\n\t\tlet currentEnergy = 0;\n\n\t\tconst nBars = this._bars.length;\n\n\t\tfor ( let channel = 0; channel < isStereo + 1; channel++ ) {\n\n\t\t\tconst channelTop     = channelHeight * channel + channelGap * channel,\n\t\t\t\t  channelBottom  = channelTop + channelHeight,\n\t\t\t\t  analyzerBottom = channelTop + analyzerHeight - ( isLedDisplay && ! this._maximizeLeds ? ledSpaceV : 0 );\n\n\t\t\tif ( useCanvas ) {\n\t\t\t\t// clear the channel area, if in overlay mode\n\t\t\t\t// this is done per channel to clear any residue below 0 off the top channel (especially in line graph mode with lineWidth > 1)\n\t\t\t\tif ( this.overlay )\n\t\t\t\t\tctx.clearRect( 0, channelTop - channelGap, canvas.width, channelHeight + channelGap );\n\n\t\t\t\t// fill the analyzer background if needed (not overlay or overlay + showBgColor)\n\t\t\t\tif ( ! this.overlay || this.showBgColor ) {\n\t\t\t\t\tif ( this.overlay )\n\t\t\t\t\t\tctx.globalAlpha = this.bgAlpha;\n\n\t\t\t\t\tctx.fillStyle = bgColor;\n\n\t\t\t\t\t// exclude the reflection area when overlay is true and reflexAlpha == 1 (avoids alpha over alpha difference, in case bgAlpha < 1)\n\t\t\t\t\tif ( ! isRadial || channel == 0 )\n\t\t\t\t\t\tctx.fillRect( initialX, channelTop - channelGap, analyzerWidth, ( this.overlay && this.reflexAlpha == 1 ? analyzerHeight : channelHeight ) + channelGap );\n\n\t\t\t\t\tctx.globalAlpha = 1;\n\t\t\t\t}\n\n\t\t\t\t// draw dB scale (Y-axis)\n\t\t\t\tif ( this.showScaleY && ! isLumiBars && ! isRadial ) {\n\t\t\t\t\tconst scaleWidth = canvasX.height,\n\t\t\t\t\t\t  fontSize   = scaleWidth >> 1,\n\t\t\t\t\t\t  mindB      = this._analyzer[0].minDecibels,\n\t\t\t\t\t\t  maxdB      = this._analyzer[0].maxDecibels,\n\t\t\t\t\t\t  interval   = analyzerHeight / ( maxdB - mindB );\n\n\t\t\t\t\tctx.fillStyle = '#888';\n\t\t\t\t\tctx.font = `${fontSize}px sans-serif`;\n\t\t\t\t\tctx.textAlign = 'right';\n\t\t\t\t\tctx.lineWidth = 1;\n\n\t\t\t\t\tfor ( let db = maxdB; db > mindB; db -= 5 ) {\n\t\t\t\t\t\tconst posY = channelTop + ( maxdB - db ) * interval,\n\t\t\t\t\t\t\t  even = ( db % 2 == 0 ) | 0;\n\n\t\t\t\t\t\tif ( even ) {\n\t\t\t\t\t\t\tconst labelY = posY + fontSize * ( posY == channelTop ? .8 : .35 );\n\t\t\t\t\t\t\tif ( mirrorMode != -1 )\n\t\t\t\t\t\t\t\tctx.fillText( db, scaleWidth * .85, labelY );\n\t\t\t\t\t\t\tif ( mirrorMode != 1 )\n\t\t\t\t\t\t\t\tctx.fillText( db, canvas.width - scaleWidth * .1, labelY );\n\t\t\t\t\t\t\tctx.strokeStyle = '#888';\n\t\t\t\t\t\t\tctx.setLineDash([2,4]);\n\t\t\t\t\t\t\tctx.lineDashOffset = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tctx.strokeStyle = '#555';\n\t\t\t\t\t\t\tctx.setLineDash([2,8]);\n\t\t\t\t\t\t\tctx.lineDashOffset = 1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tctx.beginPath();\n\t\t\t\t\t\tctx.moveTo( initialX + scaleWidth * even * ( mirrorMode != -1 ), ~~posY + .5 ); // for sharp 1px line (https://stackoverflow.com/a/13879402/2370385)\n\t\t\t\t\t\tctx.lineTo( finalX - scaleWidth * even * ( mirrorMode != 1 ), ~~posY + .5 );\n\t\t\t\t\t\tctx.stroke();\n\t\t\t\t\t}\n\t\t\t\t\t// restore line properties\n\t\t\t\t\tctx.setLineDash([]);\n\t\t\t\t\tctx.lineDashOffset = 0;\n\t\t\t\t}\n\n\t\t\t\t// set line width and dash for LEDs effect\n\t\t\t\tif ( isLedDisplay ) {\n\t\t\t\t\tctx.setLineDash( [ ledHeight, ledSpaceV ] );\n\t\t\t\t\tctx.lineWidth = width;\n\t\t\t\t}\n\t\t\t\telse // for outline effect ensure linewidth is not greater than half the bar width\n\t\t\t\t\tctx.lineWidth = isOutline ? Math.min( lineWidth, width / 2 ) : lineWidth;\n\n\t\t\t\t// set selected gradient for fill and stroke\n\t\t\t\tctx.fillStyle = ctx.strokeStyle = this._canvasGradient;\n\t\t\t} // if ( useCanvas )\n\n\t\t\t// get a new array of data from the FFT\n\t\t\tconst fftData = this._fftData[ channel ];\n\t\t\tthis._analyzer[ channel ].getByteFrequencyData( fftData );\n\n\t\t\t// helper function for FFT data interpolation\n\t\t\tconst interpolate = ( bin, ratio ) => fftData[ bin ] + ( fftData[ bin + 1 ] - fftData[ bin ] ) * ratio;\n\n\t\t\t// start drawing path (for mode 10)\n\t\t\tctx.beginPath();\n\n\t\t\t// store line graph points to create mirror effect in radial mode\n\t\t\tlet points = [];\n\n\t\t\t// draw bars / lines\n\n\t\t\tfor ( let i = 0; i < nBars; i++ ) {\n\n\t\t\t\tconst bar = this._bars[ i ],\n\t\t\t\t\t  { binLo, binHi, ratioLo, ratioHi } = bar;\n\n\t\t\t\tlet barHeight = Math.max( interpolate( binLo, ratioLo ), interpolate( binHi, ratioHi ) );\n\n\t\t\t\t// check additional bins (if any) for this bar and keep the highest value\n\t\t\t\tfor ( let j = binLo + 1; j < binHi; j++ ) {\n\t\t\t\t\tif ( fftData[ j ] > barHeight )\n\t\t\t\t\t\tbarHeight = fftData[ j ];\n\t\t\t\t}\n\n\t\t\t\tbarHeight /= 255;\n\t\t\t\tbar.value[ channel ] = barHeight;\n\t\t\t\tcurrentEnergy += barHeight;\n\n\t\t\t\t// update bar peak\n\t\t\t\tif ( bar.peak[ channel ] > 0 ) {\n\t\t\t\t\tbar.hold[ channel ]--;\n\t\t\t\t\t// if hold is negative, it becomes the \"acceleration\" for peak drop\n\t\t\t\t\tif ( bar.hold[ channel ] < 0 )\n\t\t\t\t\t\tbar.peak[ channel ] += bar.hold[ channel ] / maxBarHeight;\n\t\t\t\t}\n\n\t\t\t\t// check if it's a new peak for this bar\n\t\t\t\tif ( barHeight >= bar.peak[ channel ] ) {\n\t\t\t\t\tbar.peak[ channel ] = barHeight;\n\t\t\t\t\tbar.hold[ channel ] = 30; // set peak hold time to 30 frames (0.5s)\n\t\t\t\t}\n\n\t\t\t\t// if not using the canvas, move earlier to the next bar\n\t\t\t\tif ( ! useCanvas )\n\t\t\t\t\tcontinue;\n\n\t\t\t\t// set opacity for bar effects\n\t\t\t\tif ( isLumiBars || isAlphaBars )\n\t\t\t\t\tctx.globalAlpha = barHeight;\n\t\t\t\telse if ( isOutline )\n\t\t\t\t\tctx.globalAlpha = this.fillAlpha;\n\n\t\t\t\t// normalize barHeight\n\t\t\t\tif ( isLedDisplay ) {\n\t\t\t\t\tbarHeight = ledPosY( barHeight );\n\t\t\t\t\tif ( barHeight < 0 )\n\t\t\t\t\t\tbarHeight = 0; // prevent showing leds below 0 when overlay and reflex are active\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\tbarHeight = barHeight * maxBarHeight | 0;\n\n\t\t\t\t// invert bar for radial channel 1\n\t\t\t\tif ( isRadial && channel == 1 )\n\t\t\t\t\tbarHeight *= -1;\n\n\t\t\t\t// bar width may need small adjustments for some bars, when barSpace == 0\n\t\t\t\tlet adjWidth = width,\n\t\t\t\t\tposX     = bar.posX;\n\n\t\t\t\t// Draw current bar or line segment\n\n\t\t\t\tif ( mode == 10 ) {\n\t\t\t\t\t// compute the average between the initial bar (i==0) and the next one\n\t\t\t\t\t// used to smooth the curve when the initial posX is off the screen, in mirror and radial modes\n\t\t\t\t\tconst nextBarAvg = i ? 0 : ( fftData[ this._bars[1].binLo ] / 255 * maxBarHeight * ( ! isRadial || ! channel || - 1 ) + barHeight ) / 2;\n\n\t\t\t\t\tif ( isRadial ) {\n\t\t\t\t\t\tif ( i == 0 )\n\t\t\t\t\t\t\tctx.lineTo( ...radialXY( 0, ( posX < 0 ? nextBarAvg : barHeight ), 1 ) );\n\t\t\t\t\t\t// draw line to the current point, avoiding overlapping wrap-around frequencies\n\t\t\t\t\t\tif ( posX >= 0 ) {\n\t\t\t\t\t\t\tconst point = [ posX, barHeight ];\n\t\t\t\t\t\t\tctx.lineTo( ...radialXY( ...point, 1 ) );\n\t\t\t\t\t\t\tpoints.push( point );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse { // Linear\n\t\t\t\t\t\tif ( i == 0 ) {\n\t\t\t\t\t\t\t// start the line off-screen using the previous FFT bin value as the initial amplitude\n\t\t\t\t\t\t\tif ( mirrorMode != -1 ) {\n\t\t\t\t\t\t\t\tconst prevFFTData = binLo ? fftData[ binLo - 1 ] / 255 * maxBarHeight : barHeight; // use previous FFT bin value, when available\n\t\t\t\t\t\t\t\tctx.moveTo( initialX - lineWidth, analyzerBottom - prevFFTData );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tctx.moveTo( initialX, analyzerBottom - ( posX < initialX ? nextBarAvg : barHeight ) );\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// draw line to the current point\n\t\t\t\t\t\t// avoid X values lower than the origin when mirroring left, otherwise draw them for best graph accuracy\n\t\t\t\t\t\tif ( mirrorMode != -1 || posX >= initialX )\n\t\t\t\t\t\t\tctx.lineTo( posX, analyzerBottom - barHeight );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif ( mode > 0 ) {\n\t\t\t\t\t\tif ( isLedDisplay )\n\t\t\t\t\t\t\tposX += Math.max( ledSpaceH / 2, this._barSpacePx / 2 );\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tif ( this._barSpace == 0 ) {\n\t\t\t\t\t\t\t\tposX |= 0;\n\t\t\t\t\t\t\t\tif ( i > 0 && posX > this._bars[ i - 1 ].posX + width ) {\n\t\t\t\t\t\t\t\t\tposX--;\n\t\t\t\t\t\t\t\t\tadjWidth++;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tposX += this._barSpacePx / 2;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( isLedDisplay ) {\n\t\t\t\t\t\tconst x = posX + width / 2;\n\t\t\t\t\t\t// draw \"unlit\" leds\n\t\t\t\t\t\tif ( this.showBgColor && ! this.overlay ) {\n\t\t\t\t\t\t\tconst alpha = ctx.globalAlpha;\n\t\t\t\t\t\t\tctx.beginPath();\n\t\t\t\t\t\t\tctx.moveTo( x, channelTop );\n\t\t\t\t\t\t\tctx.lineTo( x, analyzerBottom );\n\t\t\t\t\t\t\tctx.strokeStyle = '#7f7f7f22';\n\t\t\t\t\t\t\tctx.globalAlpha = 1;\n\t\t\t\t\t\t\tctx.stroke();\n\t\t\t\t\t\t\t// restore properties\n\t\t\t\t\t\t\tctx.strokeStyle = ctx.fillStyle;\n\t\t\t\t\t\t\tctx.globalAlpha = alpha;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tctx.beginPath();\n\t\t\t\t\t\tctx.moveTo( x, isLumiBars ? channelTop : analyzerBottom );\n\t\t\t\t\t\tctx.lineTo( x, isLumiBars ? channelBottom : analyzerBottom - barHeight );\n\t\t\t\t\t\tctx.stroke();\n\t\t\t\t\t}\n\t\t\t\t\telse if ( posX >= initialX ) {\n\t\t\t\t\t\tif ( isRadial )\n\t\t\t\t\t\t\tradialPoly( posX, 0, adjWidth, barHeight, isOutline );\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tconst x = posX,\n\t\t\t\t\t\t\t\t  y = isLumiBars ? channelTop : analyzerBottom,\n\t\t\t\t\t\t\t\t  w = adjWidth,\n\t\t\t\t\t\t\t\t  h = isLumiBars ? channelBottom : -barHeight;\n\n\t\t\t\t\t\t\tctx.beginPath();\n\t\t\t\t\t\t\tctx.moveTo( x, y );\n\t\t\t\t\t\t\tctx.lineTo( x, y + h );\n\t\t\t\t\t\t\tctx.lineTo( x + w, y + h );\n\t\t\t\t\t\t\tctx.lineTo( x + w, y );\n\n\t\t\t\t\t\t\tstrokeIf( isOutline );\n\t\t\t\t\t\t\tctx.fill();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Draw peak\n\t\t\t\tconst peak = bar.peak[ channel ];\n\t\t\t\tif ( peak > 0 && this.showPeaks && ! isLumiBars && posX >= initialX && posX < finalX ) {\n\t\t\t\t\t// choose the best opacity for the peaks\n\t\t\t\t\tif ( isOutline && lineWidth > 0 )\n\t\t\t\t\t\tctx.globalAlpha = 1;\n\t\t\t\t\telse if ( isAlphaBars )\n\t\t\t\t\t\tctx.globalAlpha = peak;\n\n\t\t\t\t\t// render peak according to current mode / effect\n\t\t\t\t\tif ( isLedDisplay )\n\t\t\t\t\t\tctx.fillRect( posX,\tanalyzerBottom - ledPosY( peak ), width, ledHeight );\n\t\t\t\t\telse if ( ! isRadial )\n\t\t\t\t\t\tctx.fillRect( posX, analyzerBottom - peak * maxBarHeight, adjWidth, 2 );\n\t\t\t\t\telse if ( mode != 10 ) // radial - no peaks for mode 10\n\t\t\t\t\t\tradialPoly( posX, peak * maxBarHeight * ( ! channel || -1 ), adjWidth, -2 );\n\t\t\t\t}\n\n\t\t\t} // for ( let i = 0; i < nBars; i++ )\n\n\t\t\t// if not using the canvas, move earlier to the next channel\n\t\t\tif ( ! useCanvas )\n\t\t\t\tcontinue;\n\n\t\t\t// restore global alpha\n\t\t\tctx.globalAlpha = 1;\n\n\t\t\t// Fill/stroke drawing path for mode 10\n\t\t\tif ( mode == 10 ) {\n\t\t\t\tif ( isRadial ) {\n\t\t\t\t\tif ( mirrorMode ) {\n\t\t\t\t\t\tlet p;\n\t\t\t\t\t\twhile ( p = points.pop() )\n\t\t\t\t\t\t\tctx.lineTo( ...radialXY( ...p, -1 ) );\n\t\t\t\t\t}\n\t\t\t\t\tctx.closePath();\n\t\t\t\t}\n\n\t\t\t\tif ( lineWidth > 0 )\n\t\t\t\t\tctx.stroke();\n\n\t\t\t\tif ( this.fillAlpha > 0 ) {\n\t\t\t\t\tif ( isRadial ) {\n\t\t\t\t\t\t// exclude the center circle from the fill area\n\t\t\t\t\t\tctx.moveTo( centerX + radius, centerY );\n\t\t\t\t\t\tctx.arc( centerX, centerY, radius, 0, TAU, true );\n\t\t\t\t\t}\n\t\t\t\t\telse { // close the fill area\n\t\t\t\t\t\tctx.lineTo( finalX, analyzerBottom );\n\t\t\t\t\t\tctx.lineTo( initialX, analyzerBottom );\n\t\t\t\t\t}\n\n\t\t\t\t\tctx.globalAlpha = this.fillAlpha;\n\t\t\t\t\tctx.fill();\n\t\t\t\t\tctx.globalAlpha = 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Reflex effect\n\t\t\tif ( this._reflexRatio > 0 && ! isLumiBars ) {\n\t\t\t\tlet posY, height;\n\t\t\t\tif ( this.reflexFit || isStereo ) { // always fit reflex in stereo mode\n\t\t\t\t\tposY   = isStereo && channel == 0 ? channelHeight + channelGap : 0;\n\t\t\t\t\theight = channelHeight - analyzerHeight;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tposY   = canvas.height - analyzerHeight * 2;\n\t\t\t\t\theight = analyzerHeight;\n\t\t\t\t}\n\n\t\t\t\t// set alpha and brightness for the reflection\n\t\t\t\tctx.globalAlpha = this.reflexAlpha;\n\t\t\t\tif ( this.reflexBright != 1 )\n\t\t\t\t\tctx.filter = `brightness(${this.reflexBright})`;\n\n\t\t\t\t// create the reflection\n\t\t\t\tctx.setTransform( 1, 0, 0, -1, 0, canvas.height );\n\t\t\t\tctx.drawImage( canvas, 0, channelTop, canvas.width, analyzerHeight, 0, posY, canvas.width, height );\n\n\t\t\t\t// reset changed properties\n\t\t\t\tctx.setTransform( 1, 0, 0, 1, 0, 0 );\n\t\t\t\tctx.filter = 'none';\n\t\t\t\tctx.globalAlpha = 1;\n\t\t\t}\n\n\t\t} // for ( let channel = 0; channel < isStereo + 1; channel++ ) {\n\n\t\t// Update energy\n\t\tenergy.val = currentEnergy / ( nBars << isStereo );\n\t\tif ( energy.val >= energy.peak ) {\n\t\t\tenergy.peak = energy.val;\n\t\t\tenergy.hold = 30;\n\t\t}\n\t\telse {\n\t\t\tif ( energy.hold > 0 )\n\t\t\t\tenergy.hold--;\n\t\t\telse if ( energy.peak > 0 )\n\t\t\t\tenergy.peak *= ( 30 + energy.hold-- ) / 30; // decay (drops to zero in 30 frames)\n\t\t}\n\n\t\tif ( useCanvas ) {\n\t\t\t// Mirror effect\n\t\t\tif ( mirrorMode && ! isRadial ) {\n\t\t\t\tctx.setTransform( -1, 0, 0, 1, canvas.width - initialX, 0 );\n\t\t\t\tctx.drawImage( canvas, initialX, 0, centerX, canvas.height, 0, 0, centerX, canvas.height );\n\t\t\t\tctx.setTransform( 1, 0, 0, 1, 0, 0 );\n\t\t\t}\n\n\t\t\t// restore solid lines\n\t\t\tctx.setLineDash([]);\n\n\t\t\t// draw frequency scale (X-axis)\n\t\t\tif ( this.showScaleX ) {\n\t\t\t\tif ( isRadial ) {\n\t\t\t\t\tctx.save();\n\t\t\t\t\tctx.translate( centerX, centerY );\n\t\t\t\t\tif ( this._spinSpeed )\n\t\t\t\t\t\tctx.rotate( this._spinAngle + HALF_PI );\n\t\t\t\t\tctx.drawImage( canvasR, -canvasR.width >> 1, -canvasR.width >> 1 );\n\t\t\t\t\tctx.restore();\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\tctx.drawImage( canvasX, 0, canvas.height - canvasX.height );\n\t\t\t}\n\t\t}\n\n\t\t// calculate and update current frame rate\n\n\t\tthis._frame++;\n\t\tconst elapsed = timestamp - this._time;\n\n\t\tif ( elapsed >= 1000 ) {\n\t\t\tthis._fps = this._frame / ( elapsed / 1000 );\n\t\t\tthis._frame = 0;\n\t\t\tthis._time = timestamp;\n\t\t}\n\t\tif ( this.showFPS ) {\n\t\t\tconst size = canvasX.height;\n\t\t\tctx.font = `bold ${size}px sans-serif`;\n\t\t\tctx.fillStyle = '#0f0';\n\t\t\tctx.textAlign = 'right';\n\t\t\tctx.fillText( Math.round( this._fps ), canvas.width - size, size * 2 );\n\t\t}\n\n\t\t// call callback function, if defined\n\t\tif ( this.onCanvasDraw ) {\n\t\t\tctx.save();\n\t\t\tctx.fillStyle = ctx.strokeStyle = this._canvasGradient;\n\t\t\tthis.onCanvasDraw( this );\n\t\t\tctx.restore();\n\t\t}\n\n\t\t// schedule next canvas update\n\t\tthis._runId = requestAnimationFrame( timestamp => this._draw( timestamp ) );\n\t}\n\n\t/**\n\t * Return the FFT data bin (array index) which represents a given frequency\n\t */\n\t_freqToBin( freq, rounding = 'round' ) {\n\t\tconst max = this._analyzer[0].frequencyBinCount - 1,\n\t\t\t  bin = Math[ rounding ]( freq * this.fftSize / this.audioCtx.sampleRate );\n\n\t\treturn bin < max ? bin : max;\n\t}\n\n\t/**\n\t * Generate currently selected gradient\n\t */\n\t_makeGrad() {\n\n\t\tif ( ! this._ready )\n\t\t\treturn;\n\n\t\tconst ctx            = this._canvasCtx,\n\t\t\t  canvas         = ctx.canvas,\n\t\t\t  isLumiBars     = this._isLumiBars,\n\t\t\t  gradientHeight = isLumiBars ? canvas.height : canvas.height * ( 1 - this._reflexRatio * ! this._stereo ) | 0,\n\t\t\t  \t\t\t\t\t// for stereo we keep the full canvas height and handle the reflex areas while generating the color stops\n\t\t\t  analyzerRatio  = 1 - this._reflexRatio,\n\t\t\t  initialX       = this._initialX;\n\n\t\t// for radial mode\n\t\tconst centerX   = canvas.width >> 1,\n\t\t\t  centerY   = canvas.height >> 1,\n\t\t\t  maxRadius = Math.min( centerX, centerY ),\n\t\t\t  radius    = this._radius;\n\n\t\tconst currGradient = this._gradients[ this._gradient ],\n\t\t\t  colorStops   = currGradient.colorStops,\n\t\t\t  isHorizontal = currGradient.dir == 'h';\n\n\t\tlet grad;\n\n\t\tif ( this._radial )\n\t\t\tgrad = ctx.createRadialGradient( centerX, centerY, maxRadius, centerX, centerY, radius - ( maxRadius - radius ) * this._stereo );\n\t\telse\n\t\t\tgrad = ctx.createLinearGradient( ...( isHorizontal ? [ initialX, 0, initialX + this._analyzerWidth, 0 ] : [ 0, 0, 0, gradientHeight ] ) );\n\n\t\tif ( colorStops ) {\n\t\t\tconst dual = this._stereo && ! this._splitGradient && ! isHorizontal;\n\n\t\t\t// helper function\n\t\t\tconst addColorStop = ( offset, colorInfo ) => grad.addColorStop( offset, colorInfo.color || colorInfo );\n\n\t\t\tfor ( let channel = 0; channel < 1 + dual; channel++ ) {\n\t\t\t\tcolorStops.forEach( ( colorInfo, index ) => {\n\n\t\t\t\t\tconst maxIndex = colorStops.length - 1;\n\n\t\t\t\t\tlet offset = colorInfo.pos !== undefined ? colorInfo.pos : index / maxIndex;\n\n\t\t\t\t\t// in dual mode (not split), use half the original offset for each channel\n\t\t\t\t\tif ( dual )\n\t\t\t\t\t\toffset /= 2;\n\n\t\t\t\t\t// constrain the offset within the useful analyzer areas (avoid reflex areas)\n\t\t\t\t\tif ( this._stereo && ! isLumiBars && ! this._radial && ! isHorizontal ) {\n\t\t\t\t\t\toffset *= analyzerRatio;\n\t\t\t\t\t\t// skip the first reflex area in split mode\n\t\t\t\t\t\tif ( ! dual && offset > .5 * analyzerRatio )\n\t\t\t\t\t\t\toffset += .5 * this._reflexRatio;\n\t\t\t\t\t}\n\n\t\t\t\t\t// only for split mode\n\t\t\t\t\tif ( channel == 1 ) {\n\t\t\t\t\t\t// add colors in reverse order if radial or lumi are active\n\t\t\t\t\t\tif ( this._radial || isLumiBars ) {\n\t\t\t\t\t\t\tconst revIndex = maxIndex - index;\n\t\t\t\t\t\t\tcolorInfo = colorStops[ revIndex ];\n\t\t\t\t\t\t\toffset = 1 - ( colorInfo.pos !== undefined ? colorInfo.pos : revIndex / maxIndex ) / 2;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t// if the first offset is not 0, create an additional color stop to prevent bleeding from the first channel\n\t\t\t\t\t\t\tif ( index == 0 && offset > 0 )\n\t\t\t\t\t\t\t\taddColorStop( .5, colorInfo );\n\t\t\t\t\t\t\t// bump the offset to the second half of the gradient\n\t\t\t\t\t\t\toffset += .5;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// add gradient color stop\n\t\t\t\t\taddColorStop( offset, colorInfo );\n\n\t\t\t\t\t// create additional color stop at the end of first channel to prevent bleeding\n\t\t\t\t\tif ( this._stereo && index == maxIndex && offset < .5 )\n\t\t\t\t\t\taddColorStop( .5, colorInfo );\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tthis._canvasGradient = grad;\n\t}\n\n\t/**\n\t * Internal function to change canvas dimensions on demand\n\t */\n\t_setCanvas( reason ) {\n\t\t// if initialization is not finished, quit\n\t\tif ( ! this._ready )\n\t\t\treturn;\n\n\t\tconst ctx        = this._canvasCtx,\n\t\t\t  canvas     = ctx.canvas,\n\t\t\t  canvasX    = this._scaleX.canvas,\n\t\t\t  pixelRatio = window.devicePixelRatio / ( this._loRes + 1 );\n\n\t\tlet screenWidth  = window.screen.width  * pixelRatio,\n\t\t\tscreenHeight = window.screen.height * pixelRatio;\n\n\t\t// Fix for iOS Safari - swap width and height when in landscape\n\t\tif ( Math.abs( window.orientation ) == 90 && screenWidth < screenHeight )\n\t\t\t[ screenWidth, screenHeight ] = [ screenHeight, screenWidth ];\n\n\t\tconst isFullscreen = this.isFullscreen,\n\t\t\t  isCanvasFs   = isFullscreen && this._fsEl == canvas,\n\t\t\t  newWidth     = isCanvasFs ? screenWidth  : ( this._width  || this._container.clientWidth  || this._defaultWidth  ) * pixelRatio | 0,\n\t\t\t  newHeight    = isCanvasFs ? screenHeight : ( this._height || this._container.clientHeight || this._defaultHeight ) * pixelRatio | 0;\n\n\t\t// set/update object properties\n\t\tthis._pixelRatio = pixelRatio;\n\t\tthis._fsWidth    = screenWidth;\n\t\tthis._fsHeight   = screenHeight;\n\n\t\t// if canvas dimensions haven't changed, quit\n\t\tif ( canvas.width == newWidth && canvas.height == newHeight )\n\t\t\treturn;\n\n\t\t// apply new dimensions\n\t\tcanvas.width  = newWidth;\n\t\tcanvas.height = newHeight;\n\n\t\t// update internal variables\n\t\tthis._calcAux();\n\n\t\t// if not in overlay mode, paint the canvas black\n\t\tif ( ! this.overlay ) {\n\t\t\tctx.fillStyle = '#000';\n\t\t\tctx.fillRect( 0, 0, newWidth, newHeight );\n\t\t}\n\n\t\t// set lineJoin property for area fill mode (this is reset whenever the canvas size changes)\n\t\tctx.lineJoin = 'bevel';\n\n\t\t// update dimensions of the scale canvas\n\t\tcanvasX.width = newWidth;\n\t\tcanvasX.height = Math.max( 20 * pixelRatio, Math.min( newWidth, newHeight ) / 27 | 0 );\n\n\t\t// (re)generate gradient\n\t\tthis._makeGrad();\n\n\t\t// calculate bar positions and led options\n\t\tthis._calcBars();\n\n\t\t// detect fullscreen changes (for Safari)\n\t\tif ( this._fsStatus !== undefined && this._fsStatus !== isFullscreen )\n\t\t\treason = 'fschange';\n\t\tthis._fsStatus = isFullscreen;\n\n\t\t// call the callback function, if defined\n\t\tif ( this.onCanvasResize )\n\t\t\tthis.onCanvasResize( reason, this );\n\t}\n\n\t/**\n\t * Set object properties\n\t */\n\t_setProps( options, useDefaults ) {\n\n\t\t// settings defaults\n\t\tconst defaults = {\n\t\t\talphaBars    : false,\n\t\t\tbarSpace     : 0.1,\n\t\t\tbgAlpha      : 0.7,\n\t\t\tfftSize      : 8192,\n\t\t\tfillAlpha    : 1,\n\t\t\tgradient     : 'classic',\n\t\t\tledBars      : false,\n\t\t\tlineWidth    : 0,\n\t\t\tloRes        : false,\n\t\t\tlumiBars     : false,\n\t\t\tmaxDecibels  : -25,\n\t\t\tmaxFreq      : 22000,\n\t\t\tminDecibels  : -85,\n\t\t\tminFreq      : 20,\n\t\t\tmirror       : 0,\n\t\t\tmode         : 0,\n\t\t\toutlineBars  : false,\n\t\t\toverlay      : false,\n\t\t\tradial\t\t : false,\n\t\t\treflexAlpha  : 0.15,\n\t\t\treflexBright : 1,\n\t\t\treflexFit    : true,\n\t\t\treflexRatio  : 0,\n\t\t\tshowBgColor  : true,\n\t\t\tshowFPS      : false,\n\t\t\tshowPeaks    : true,\n\t\t\tshowScaleX   : true,\n\t\t\tshowScaleY   : false,\n\t\t\tsmoothing    : 0.5,\n\t\t\tspinSpeed    : 0,\n\t\t\tsplitGradient: false,\n\t\t\tstart        : true,\n\t\t\tstereo       : false,\n\t\t\tuseCanvas    : true,\n\t\t\tvolume       : 1,\n\t\t};\n\n\t\t// callback functions properties\n\t\tconst callbacks = [ 'onCanvasDraw', 'onCanvasResize' ];\n\n\t\t// build an array of valid properties; `start` is not an actual property and is handled after setting everything else\n\t\tconst validProps = Object.keys( defaults ).filter( e => e != 'start' ).concat( callbacks, ['height', 'width'] );\n\n\t\t// handle deprecated `showLeds` property\n\t\tif ( options && options.showLeds !== undefined && options.ledBars === undefined )\n\t\t\toptions.ledBars = options.showLeds;\n\n\t\tif ( useDefaults || options === undefined )\n\t\t\toptions = { ...defaults, ...options }; // merge options with defaults\n\n\t\tfor ( const prop of Object.keys( options ) ) {\n\t\t\tif ( callbacks.includes( prop ) && typeof options[ prop ] !== 'function' ) // check invalid callback\n\t\t\t\tthis[ prop ] = undefined;\n\t\t\telse if ( validProps.includes( prop ) ) // set only valid properties\n\t\t\t\tthis[ prop ] = options[ prop ];\n\t\t}\n\n\t\tif ( options.start !== undefined )\n\t\t\tthis.toggleAnalyzer( options.start );\n\t}\n\n}\n\n/* Custom error class */\n\nclass AudioMotionError extends Error {\n\tconstructor( code, message ) {\n\t\tsuper( message );\n\t\tthis.name = 'AudioMotionError';\n\t\tthis.code = code;\n\t}\n}\n\n\n//# sourceURL=webpack://spieldose/./node_modules/audiomotion-analyzer/src/audioMotion-analyzer.js?");

/***/ }),

/***/ "./src-frontend/scripts/api.js":
/*!*************************************!*\
  !*** ./src-frontend/scripts/api.js ***!
  \*************************************/
/***/ (() => {

eval("\n\n//# sourceURL=webpack://spieldose/./src-frontend/scripts/api.js?");

/***/ }),

/***/ "./src-frontend/scripts/app.js":
/*!*************************************!*\
  !*** ./src-frontend/scripts/app.js ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var vue__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vue */ \"./node_modules/vue/dist/vue.esm-bundler.js\");\n/* harmony import */ var _plugins_router_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./plugins/router.js */ \"./src-frontend/scripts/plugins/router.js\");\n/* harmony import */ var _plugins_i18n_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./plugins/i18n.js */ \"./src-frontend/scripts/plugins/i18n.js\");\n/* harmony import */ var _plugins_audio_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./plugins/audio.js */ \"./src-frontend/scripts/plugins/audio.js\");\n/* harmony import */ var _plugins_axios_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./plugins/axios.js */ \"./src-frontend/scripts/plugins/axios.js\");\n/* harmony import */ var _plugins_api_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./plugins/api.js */ \"./src-frontend/scripts/plugins/api.js\");\n/* harmony import */ var _plugins_localStorage_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./plugins/localStorage.js */ \"./src-frontend/scripts/plugins/localStorage.js\");\n/* harmony import */ var _plugins_bus_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./plugins/bus.js */ \"./src-frontend/scripts/plugins/bus.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst spieldoseApp = {\r\n    data: function () {\r\n        return ({\r\n            logged: false,\r\n            track: null\r\n        });\r\n    },\r\n    created: function () {\r\n        if (!initialState.version.upgradeAvailable) {\r\n            if (!initialState.logged) {\r\n                if (this.$route.name != 'signin') {\r\n                    this.$router.push({ name: 'signin' });\r\n                }\r\n            } else {\r\n                if (!this.$route.name) {\r\n                    this.$router.push({ name: 'nowPlaying' });\r\n                }\r\n            }\r\n        } else {\r\n            this.$router.push({ name: 'upgrade' });\r\n        }\r\n    }\r\n};\r\n\r\nconst localStorageBasilOptions = {\r\n    namespace: 'spieldose',\r\n    storages: ['local', 'cookie', 'session', 'memory'],\r\n    storage: 'local',\r\n    expireDays: 3650\r\n};\r\n\r\n\r\n(0,vue__WEBPACK_IMPORTED_MODULE_0__.createApp)(spieldoseApp).use(_plugins_router_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]).use(_plugins_i18n_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]).use(_plugins_localStorage_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"], localStorageBasilOptions).use(_plugins_audio_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"]).use(_plugins_axios_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {}).use(_plugins_api_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"]).use(_plugins_bus_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"]).mount('#app');\r\n\n\n//# sourceURL=webpack://spieldose/./src-frontend/scripts/app.js?");

/***/ }),

/***/ "./src-frontend/scripts/layouts/app.js":
/*!*********************************************!*\
  !*** ./src-frontend/scripts/layouts/app.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _vue_components_player_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../vue-components/player.js */ \"./src-frontend/scripts/vue-components/player.js\");\n/* harmony import */ var _vue_components_menu_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../vue-components/menu.js */ \"./src-frontend/scripts/vue-components/menu.js\");\n/* harmony import */ var _vue_components_player_navbar_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../vue-components/player-navbar.js */ \"./src-frontend/scripts/vue-components/player-navbar.js\");\n\r\n\r\n\r\n\r\nconst template = function () {\r\n    return `\r\n        <div>\r\n            <section class=\"section is-fullheight\">\r\n                <div class=\"columns is-desktop\">\r\n                    <!-- TODO: test class \"is-hidden-touch\" for mobile -->\r\n                    <div class=\"is-narrow column\" id=\"sidebar\">\r\n                        <spieldose-component-player :track=\"currentTrack\" @previous=\"onPreviousTrack\" @next=\"onNextTrack\">\r\n                            <template slot=\"top-left-icon\">\r\n                                <a class=\"list__link\" href=\"#\" @click.prevent=\"loadTracks('')\"><i class=\"fa fa-navicon\"></i></a>\r\n                            </template>\r\n                            <template slot=\"top-right-icon\">\r\n                                <a class=\"list__link\" href=\"#\" @click.prevent><i class=\"fa fa-search\"></i></a>\r\n                            </template>\r\n                        </spieldose-component-player>\r\n                        <spieldose-menu-component></spieldose-menu-component>\r\n                    </div>\r\n                    <div class=\"column\">\r\n                        <router-view></router-view>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n            <!--\r\n            <player-navbar></player-navbar>\r\n            -->\r\n        </div>\r\n    `;\r\n};\r\n\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\r\n    name: 'spieldose-layout-app',\r\n    template: template(),\r\n    data: function () {\r\n        return ({\r\n            currentTrack: {}\r\n        });\r\n    },\r\n    components: {\r\n        'spieldose-component-player': _vue_components_player_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"],\r\n        'spieldose-menu-component': _vue_components_menu_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]\r\n        //'player-navbar': playerNavBar\r\n    },\r\n    created: function () {\r\n        this.$bus.on('onTrackChanged', (data) => { this.currentTrack = data.track; });\r\n    },\r\n    methods: {\r\n        onPreviousTrack: function () {\r\n\r\n        },\r\n        onNextTrack: function () {\r\n\r\n        }\r\n    }\r\n});\n\n//# sourceURL=webpack://spieldose/./src-frontend/scripts/layouts/app.js?");

/***/ }),

/***/ "./src-frontend/scripts/locale/en.js":
/*!*******************************************!*\
  !*** ./src-frontend/scripts/locale/en.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\r\n    en: {\r\n        signIn: {\r\n            labels: {\r\n                tabLink: 'Sign in',\r\n                email: 'Email',\r\n                password: 'Password'\r\n            },\r\n            buttons: {\r\n                submit: 'Sign in'\r\n            },\r\n            errorMessages: {\r\n                userNotFound: 'No account found with this email',\r\n                incorrectPassword: 'Incorrect password'\r\n            }\r\n        },\r\n        signUp: {\r\n            labels: {\r\n                tabLink: 'Sign up',\r\n                email: 'Email',\r\n                password: 'Password'\r\n            },\r\n            buttons: {\r\n                submit: 'Sign up'\r\n            },\r\n            errorMessages: {\r\n                emailAlreadyUsed: 'Email already used'\r\n            }\r\n        },\r\n        upgrade: {\r\n            labels: {\r\n                newDatabaseVersionAvailable: 'New database version available',\r\n                upgradeRequired: 'An upgrade is required',\r\n                executeThisCommandline: 'Execute this commandline:',\r\n                updateNotRequired: 'Your system is up to date'\r\n            }\r\n        },\r\n        dashboard: {\r\n            labels: {\r\n                allTimeInterval: 'All Time',\r\n                pastWeekInterval: 'Past week',\r\n                pastMonthInterval: 'Past month',\r\n                pastSemesterInterval: 'Past semester',\r\n                pastYearInterval: 'Past year',\r\n                playCount: 'plays',\r\n                entityTracks: 'Tracks',\r\n                entityArtists: 'Artists',\r\n                entityAlbums: 'Albums',\r\n                topPlayedTracks: 'Top played tracks',\r\n                topPlayedArtists: 'Top played artists',\r\n                topPlayedGenres: 'Top played genres',\r\n                recentlyAdded: 'Recently added',\r\n                recentlyPlayed: 'Recently played',\r\n                playStatistics: 'Play statistics',\r\n                byHour: 'By hour',\r\n                playStatsByWeekday: 'Play stats by weekday',\r\n                byWeekday: 'By weekday',\r\n                byMonth: 'By month',\r\n                byYear: 'By year',\r\n                monday: 'Monday',\r\n                tuesday: 'Tuesday',\r\n                wednesday: 'Wednesday',\r\n                thursday: 'Thursday',\r\n                friday: 'Friday',\r\n                saturday: 'Saturday',\r\n                sunday: 'Sunday',\r\n                playStatsByMonth: 'Play stats by month',\r\n                january: 'January',\r\n                february: 'February',\r\n                march: 'March',\r\n                april: 'April',\r\n                may: 'May',\r\n                june: 'June',\r\n                july: 'July',\r\n                august: 'August',\r\n                september: 'September',\r\n                october: 'October',\r\n                november: 'November',\r\n                december: 'December',\r\n                playStatsByYear: 'Play stats by year'\r\n            },\r\n            errors: {\r\n                notEnoughData: 'There is not enough data to calculate the statistics'\r\n            }\r\n        },\r\n        player: {\r\n            buttons: {\r\n                shufflePlaylistHint: 'shuffle playlist',\r\n                toggleRepeatHint: 'toggle repeat mode',\r\n                previousTrackHint: 'go to previous track',\r\n                pauseTrackHint: 'pause track',\r\n                playTrackHint: 'play track',\r\n                nextTrackHint: 'go to next track',\r\n                unloveTrackHint: 'unlove this track',\r\n                loveTrackHint: 'love this track',\r\n                downloadTrackHint: 'download this track',\r\n                toggleMuteHint: 'toggle mute'\r\n            }\r\n        },\r\n        menu: {\r\n            labels: {\r\n                header: 'Menu',\r\n                dashboard: 'Dashboard',\r\n                currentPlaylist: 'Current playlist',\r\n                search: 'Search',\r\n                browseArtists: 'Browse artists',\r\n                browseAlbums: 'Browse albums',\r\n                browsePaths: 'Browse paths',\r\n                browsePlaylists: 'Browse playlists',\r\n                browseRadioStations: 'Browse radio stations',\r\n                signOut: 'Sign out'\r\n            }\r\n        },\r\n        pagination: {\r\n            labels: {\r\n                invalidPageOrNoResults: 'The specified page is incorrect or there are no results to display'\r\n            },\r\n            buttons: {\r\n                previousPage: 'Previous',\r\n                nextPage: 'Next'\r\n            }\r\n        },\r\n        deleteConfirmationModal: {\r\n            labels: {\r\n                modalTitle: 'Confirmation required',\r\n                modalBody: 'Are you sure you want to permanently remove this item ?'\r\n            },\r\n            buttons: {\r\n                ok: 'Ok',\r\n                cancel: 'Cancel'\r\n            }\r\n        },\r\n        currentPlaylist: {\r\n            labels: {\r\n                sectionName: 'Now playing',\r\n                tableHeaderTrack: 'Track',\r\n                tableHeaderArtist: 'Artist',\r\n                tableHeaderAlbum: 'Album',\r\n                tableHeaderGenre: 'Genre',\r\n                tableHeaderYear: 'Year',\r\n                tableHeaderActions: 'Actions',\r\n                moveElementUpHint: 'move up this track on playlist',\r\n                moveElementDownHint: 'move down this track playlist',\r\n                removeElementHint: 'remove this track from playlist',\r\n                playThisTrackHint: 'play this track',\r\n                nowPlayingClickToPauseHint: 'now playing, click to pause',\r\n                pausedClickToResumeHint: 'paused, click to resume'\r\n            },\r\n            inputs: {\r\n                playlistNamePlaceholder: 'type playlist name'\r\n            },\r\n            buttons: {\r\n                savePlaylist: 'save playlist',\r\n                unsetPlaylist: 'unset playlist',\r\n                loadRandom: 'load random',\r\n                clearPlaylist: 'clear playlist',\r\n                repeat: 'repeat',\r\n                shufflePlaylist: 'shuffle',\r\n                previousTrack: 'previous',\r\n                nextTrack: 'next',\r\n                playTrack: 'play',\r\n                resumeTrack: 'resume',\r\n                pauseTrack: 'pause',\r\n                stopTrack: 'stop',\r\n                loveTrack: 'love',\r\n                unloveTrack: 'unlove',\r\n                downloadTrack: 'download',\r\n            }\r\n        },\r\n        search: {\r\n            labels: {\r\n                sectionName: 'Search artists, albums, tracks, playlists'\r\n            },\r\n            tabs: {\r\n                artists: 'Artists',\r\n                albums: 'Albums',\r\n                tracks: 'Tracks',\r\n                playlists: 'Playlists'\r\n            },\r\n            inputs: {\r\n                searchTextPlaceholder: 'search tracks, artists, albums, playlists'\r\n            },\r\n            buttons: {\r\n                search: 'search'\r\n            }\r\n        },\r\n        browseArtists: {\r\n            labels: {\r\n                sectionName: 'Browse artists',\r\n            },\r\n            inputs: {\r\n                artistNamePlaceholder: 'search artist name...'\r\n            },\r\n            buttons: {\r\n                search: 'search'\r\n            },\r\n            dropdowns: {\r\n                filterAllArtists: 'All artists',\r\n                filterNotScrapedArtists: 'Artists not scraped'\r\n            }\r\n        },\r\n        browseArtist: {\r\n            labels: {\r\n                sectionName: 'Artist details',\r\n                plays: 'plays',\r\n                notPlayedYet: 'not played yet',\r\n                tracksAlbumTableHeader: 'Album',\r\n                tracksSectionYearTableHeader: 'Year',\r\n                tracksSectionNumberTableHeader: 'Number',\r\n                tracksSectionTitleTableHeader: 'Track',\r\n                tracksSectionActionTableHeader: 'Actions',\r\n                musicBrainzSearchArtistName: 'Artist name:',\r\n                musicBrainzSearchArtistNamePlaceholder: 'search artist name...',\r\n                musicBrainzSearchArtistMBId: 'Music Brainz id:',\r\n                musicBrainzSearchArtistMBIdPlaceholder: 'set artist Music Brainz id'\r\n            },\r\n            tabs: {\r\n                overview: 'Overview',\r\n                bio: 'Bio',\r\n                tracks: 'Tracks',\r\n                albums: 'Albums',\r\n                updateArtist: 'Update artist'\r\n            },\r\n            buttons: {\r\n                search: 'search',\r\n                searchOnMusicBrainz: 'Search on Music Brainz',\r\n                save: 'save',\r\n                clear: 'clear'\r\n            }\r\n        },\r\n        browseAlbums: {\r\n            labels: {\r\n                sectionName: 'Browse albums',\r\n                unknownArtist: 'unknown artist'\r\n            },\r\n            inputs: {\r\n                albumNamePlaceholder: 'search album name...',\r\n                yearPlaceholder: 'year (4 digits)',\r\n                artistNamePlaceholder: 'search album artist name...'\r\n            },\r\n            buttons: {\r\n                toggleAdvancedSearch: 'toggle advanced search',\r\n                search: 'search'\r\n            }\r\n        },\r\n        browsePaths: {\r\n            labels: {\r\n                sectionName: 'Browse paths',\r\n                pathNameTableHeader: 'Path',\r\n                trackCountTableHeader: 'Tracks',\r\n                actionsTableHeader: 'Actions',\r\n                playThisPath: 'Play this path',\r\n                enqueueThisPath: 'Enqueue this path'\r\n            },\r\n            inputs: {\r\n                pathNamePlaceholder: 'search path name...'\r\n            },\r\n            buttons: {\r\n                search: 'search'\r\n            }\r\n        },\r\n        browsePlaylists: {\r\n            labels: {\r\n                sectionName: 'Browse playlists'\r\n            },\r\n            inputs: {\r\n                playlistNamePlaceholder: 'search playlist name...'\r\n            },\r\n            buttons: {\r\n                search: 'search',\r\n                play: 'play',\r\n                remove: 'remove'\r\n            }\r\n        },\r\n        browseRadioStations: {\r\n            labels: {\r\n                sectionName: 'Browse radio stations',\r\n                radioStationName: 'Radio station name:',\r\n                radioStationUrl: 'Url:',\r\n                radioStationImage: 'Image:'\r\n            },\r\n            inputs: {\r\n                radioStationSearchNamePlaceholder: 'search radio station name...',\r\n                radioStationNamePlaceholder: 'type radio station name',\r\n                radioStationPlaceholderUrl: 'type radio station url (direct stream / m3u, pls playlist formats)',\r\n                radioStationPlaceholderImage: 'type (optional) remote image url',\r\n            },\r\n            selects: {\r\n                optionDirectStream: 'Station type: Direct stream',\r\n                optionM3U: 'Station type: m3u (format) playlist',\r\n                optionPLS: 'Station type: pls (format) playlist',\r\n            },\r\n            buttons: {\r\n                add: 'add',\r\n                search: 'search',\r\n                play: 'play',\r\n                update: 'update',\r\n                remove: 'remove',\r\n                save: 'save',\r\n                cancel: 'cancel'\r\n            }\r\n        },\r\n        commonErrors: {\r\n            invalidAPIParam: 'API ERROR: invalid param',\r\n            invalidAPIResponse: 'API ERROR: invalid server response'\r\n        },\r\n        commonLabels: {\r\n            slogan: '...music for the Masses',\r\n            projectPageLinkLabel: 'Project page',\r\n            authorLinkLabel: 'by alex',\r\n            playThisTrack: 'Play this track',\r\n            enqueueThisTrack: 'Enqueue this track',\r\n            downloadThisTrack: 'Download this track',\r\n            navigateToArtistPage: 'Navigate to artist page',\r\n            playThisAlbum: 'Play this album',\r\n            enqueueThisAlbum: 'Enqueue this album',\r\n            playThisPlaylist: 'Play this playlist',\r\n            enqueueThisPlaylist: 'Enqueue this playlist',\r\n            by: 'by',\r\n            tracksCount: 'tracks',\r\n            repeatModeNone: 'none',\r\n            repeatModeTrack: 'track',\r\n            repeatModeAll: 'all',\r\n            remoteRadioStation: 'Remote radio station'\r\n        },\r\n        commonMessages: {\r\n            refreshData: 'Refresh data'\r\n        }\r\n    }\r\n});\r\n\n\n//# sourceURL=webpack://spieldose/./src-frontend/scripts/locale/en.js?");

/***/ }),

/***/ "./src-frontend/scripts/locale/es.js":
/*!*******************************************!*\
  !*** ./src-frontend/scripts/locale/es.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\r\n    es: {\r\n        signIn: {\r\n            labels: {\r\n                tabLink: 'Iniciar sesión',\r\n                email: 'Correo electrónico',\r\n                password: 'Contraseña'\r\n            },\r\n            buttons: {\r\n                submit: 'Iniciar sesión'\r\n            },\r\n            errorMessages: {\r\n                userNotFound: 'No existe ninguna cuenta con ese correo electrónico asociado',\r\n                incorrectPassword: 'Clave incorrecta'\r\n            }\r\n        },\r\n        signUp: {\r\n            labels: {\r\n                tabLink: 'Crear cuenta',\r\n                email: 'Correo electrónico',\r\n                password: 'Contraseña'\r\n            },\r\n            buttons: {\r\n                submit: 'Crear cuenta'\r\n            },\r\n            errorMessages: {\r\n                emailAlreadyUsed: 'El correo electrónico especificado ya está en uso'\r\n            }\r\n        },\r\n        upgrade: {\r\n            labels: {\r\n                newDatabaseVersionAvailable: 'Hay disponible una nueva versión de la base de datos',\r\n                upgradeRequired: 'Se requiere actualizar',\r\n                executeThisCommandline: 'Ejecute esta línea de comandos:',\r\n                updateNotRequired: 'Su sistema está actualizado'\r\n            }\r\n        },\r\n        dashboard: {\r\n            labels: {\r\n                allTimeInterval: 'Siempre',\r\n                pastWeekInterval: 'La semana pasada',\r\n                pastMonthInterval: 'El mes pasado',\r\n                pastSemesterInterval: 'El semestre pasado',\r\n                pastYearInterval: 'El año pasado',\r\n                playCount: 'reproducciones',\r\n                entityTracks: 'Canciones',\r\n                entityArtists: 'Artistas',\r\n                entityAlbums: 'Álbumes',\r\n                topPlayedTracks: 'Canciones más escuchadas',\r\n                topPlayedArtists: 'Artistas más escuchados',\r\n                topPlayedGenres: 'Géneros más escuchados',\r\n                recentlyAdded: 'Añadido/a recientemente',\r\n                recentlyPlayed: 'Escuchado/a recientemente',\r\n                playStatistics: 'Estadísticas de reproducciones',\r\n                byHour: 'Por hora',\r\n                playStatsByWeekday: 'Estadísticas de reproducciones semanales',\r\n                byWeekday: 'Por día de la semana',\r\n                byMonth: 'Por mes',\r\n                byYear: 'Por año',\r\n                monday: 'Lunes',\r\n                tuesday: 'Martes',\r\n                wednesday: 'Miércoles',\r\n                thursday: 'Jueves',\r\n                friday: 'Viernes',\r\n                saturday: 'Sábado',\r\n                sunday: 'Domingo',\r\n                playStatsByMonth: 'Estadísticas de reproducciones mensuales',\r\n                january: 'Enero',\r\n                february: 'Febrero',\r\n                march: 'Marzo',\r\n                april: 'Abril',\r\n                may: 'Mayo',\r\n                june: 'Junio',\r\n                july: 'Julio',\r\n                august: 'Agosto',\r\n                september: 'Septiembre',\r\n                october: 'Octubre',\r\n                november: 'Noviembre',\r\n                december: 'Diciembre',\r\n                playStatsByYear: 'Estadísticas de reproducciones anuales'\r\n            },\r\n            errors: {\r\n                notEnoughData: 'No se han recolectado datos suficientes para generar las estadísticas'\r\n            }\r\n        },\r\n        player: {\r\n            buttons: {\r\n                shufflePlaylistHint: 'reordenar aleatoriamente la lista actual',\r\n                toggleRepeatHint: 'cambiar el modo de repetición',\r\n                previousTrackHint: 'ir a la canción anterior',\r\n                pauseTrackHint: 'pausar la canción actual',\r\n                playTrackHint: 'reproducir la canción actual',\r\n                nextTrackHint: 'ir a la siguiente canción',\r\n                unloveTrackHint: 'desmarcar la canción actual como favorita',\r\n                loveTrackHint: 'marcar la canción actual como favorita',\r\n                downloadTrackHint: 'descargar la canción actual',\r\n                toggleMuteHint: 'silenciar/restaurar volumen'\r\n            }\r\n        },\r\n        menu: {\r\n            labels: {\r\n                header: 'Menu',\r\n                dashboard: 'Estadísticas',\r\n                currentPlaylist: 'Lista de reproducción actual',\r\n                search: 'Búsqueda',\r\n                browseArtists: 'Artistas',\r\n                browseAlbums: 'Álbumes',\r\n                browsePaths: 'Directorios',\r\n                browsePlaylists: 'Listas de reproducción',\r\n                browseRadioStations: 'Estaciones de radio',\r\n                signOut: 'Finalizar sesión'\r\n            }\r\n        },\r\n        pagination: {\r\n            labels: {\r\n                invalidPageOrNoResults: 'La página especificada es incorrecta o no se han encontrado resultados'\r\n            },\r\n            buttons: {\r\n                previousPage: 'Anterior',\r\n                nextPage: 'Siguiente'\r\n            }\r\n        },\r\n        deleteConfirmationModal: {\r\n            labels: {\r\n                modalTitle: 'Confirmación requerida',\r\n                modalBody: '¿ Está seguro de que desea eliminar permanentemente este elemento ?'\r\n            },\r\n            buttons: {\r\n                ok: 'Si',\r\n                cancel: 'Cancelar'\r\n            }\r\n        },\r\n        currentPlaylist: {\r\n            labels: {\r\n                sectionName: 'Lista de reproducción actual',\r\n                tableHeaderTrack: 'Título',\r\n                tableHeaderArtist: 'Artista',\r\n                tableHeaderAlbum: 'Álbum',\r\n                tableHeaderGenre: 'Género',\r\n                tableHeaderYear: 'Año',\r\n                tableHeaderActions: 'Acciones',\r\n                moveElementUpHint: 'subir esta canción en la lista de reproducción',\r\n                moveElementDownHint: 'bajar esta canción en la lista de reproducción',\r\n                removeElementHint: 'eliminar esta canción de la lista de reproducción',\r\n                playThisTrackHint: 'escuchar esta canción',\r\n                nowPlayingClickToPauseHint: 'reproduciendo, haga click para pausar',\r\n                pausedClickToResumeHint: 'en pausa, haga click para resumir reproducción'\r\n            },\r\n            inputs: {\r\n                playlistNamePlaceholder: 'teclee el nombre de la lista de reproducción'\r\n            },\r\n            buttons: {\r\n                savePlaylist: 'grabar lista',\r\n                unsetPlaylist: 'desenlazar lista',\r\n                loadRandom: 'cargar canciones aleatorias',\r\n                clearPlaylist: 'vaciar lista',\r\n                repeat: 'repetir',\r\n                shufflePlaylist: 'reordenar aleatoriamente',\r\n                previousTrack: 'anterior',\r\n                nextTrack: 'siguiente',\r\n                playTrack: 'reproducir',\r\n                resumeTrack: 'resumir reproducción',\r\n                pauseTrack: 'pausar',\r\n                stopTrack: 'detener',\r\n                loveTrack: 'favorita',\r\n                unloveTrack: 'favorita',\r\n                downloadTrack: 'descargar',\r\n            }\r\n        },\r\n        search: {\r\n            labels: {\r\n                sectionName: 'Buscar artistas, álbumes, canciones y listas de reproducción'\r\n            },\r\n            tabs: {\r\n                artists: 'Artistas',\r\n                albums: 'Álbumes',\r\n                tracks: 'Canciones',\r\n                playlists: 'Listas de reproducción'\r\n            },\r\n            inputs: {\r\n                searchTextPlaceholder: 'buscar artistas, álbumes, canciones y listas de reproducción'\r\n            },\r\n            buttons: {\r\n                search: 'buscar'\r\n            }\r\n        },\r\n        browseArtists: {\r\n            labels: {\r\n                sectionName: 'Artistas',\r\n            },\r\n            inputs: {\r\n                artistNamePlaceholder: 'teclee el nombre del artista...'\r\n            },\r\n            buttons: {\r\n                search: 'buscar'\r\n            },\r\n            dropdowns: {\r\n                filterAllArtists: 'Todos los artistas',\r\n                filterNotScrapedArtists: 'Artistas sin metadatos'\r\n            }\r\n        },\r\n        browseArtist: {\r\n            labels: {\r\n                sectionName: 'Detalles del artista',\r\n                plays: 'reproducciones',\r\n                notPlayedYet: 'nunca se ha escuchado',\r\n                tracksAlbumTableHeader: 'Álbum',\r\n                tracksSectionYearTableHeader: 'Año',\r\n                tracksSectionNumberTableHeader: 'Número',\r\n                tracksSectionTitleTableHeader: 'Canción',\r\n                tracksSectionActionTableHeader: 'Acciones',\r\n                musicBrainzSearchArtistName: 'Nombre del artista:',\r\n                musicBrainzSearchArtistNamePlaceholder: 'buscar artista por nombre...',\r\n                musicBrainzSearchArtistMBId: 'Identificador Music Brainz:',\r\n                musicBrainzSearchArtistMBIdPlaceholder: 'establecer el identificador Music Brainz del artista'\r\n            },\r\n            tabs: {\r\n                overview: 'Resumen',\r\n                bio: 'Biografía',\r\n                tracks: 'Canciones',\r\n                albums: 'Álbumes',\r\n                updateArtist: 'Actualizar metadatos'\r\n            },\r\n            buttons: {\r\n                search: 'buscar',\r\n                searchOnMusicBrainz: 'buscar en Music Brainz',\r\n                save: 'grabar',\r\n                clear: 'eliminar'\r\n            }\r\n        },\r\n        browseAlbums: {\r\n            labels: {\r\n                sectionName: 'Álbumes',\r\n                unknownArtist: 'artista desconocido'\r\n            },\r\n            inputs: {\r\n                albumNamePlaceholder: 'buscar álbum por nombre...',\r\n                yearPlaceholder: 'año (4 dígitos)',\r\n                artistNamePlaceholder: 'buscar álbum por nombre de artista...'\r\n            },\r\n            buttons: {\r\n                toggleAdvancedSearch: 'mostrar/ocultar búsqueda avanzada',\r\n                search: 'buscar'\r\n            }\r\n        },\r\n        browsePaths: {\r\n            labels: {\r\n                sectionName: 'Directorios',\r\n                pathNameTableHeader: 'Ruta',\r\n                trackCountTableHeader: 'Canciones',\r\n                actionsTableHeader: 'Acciones',\r\n                playThisPath: 'Escuchar todas las canciones de esta ruta',\r\n                enqueueThisPath: 'Añadir todas las canciones de esta ruta a la cola de reproducción actual'\r\n            },\r\n            inputs: {\r\n                pathNamePlaceholder: 'buscar ruta por nombre...'\r\n            },\r\n            buttons: {\r\n                search: 'buscar'\r\n            }\r\n        },\r\n        browsePlaylists: {\r\n            labels: {\r\n                sectionName: 'Listas de reproducción'\r\n            },\r\n            inputs: {\r\n                playlistNamePlaceholder: 'buscar lista de reproducción por nombre...'\r\n            },\r\n            buttons: {\r\n                search: 'buscar',\r\n                play: 'escuchar',\r\n                remove: 'eliminar'\r\n            }\r\n        },\r\n        browseRadioStations: {\r\n            labels: {\r\n                sectionName: 'Estaciones de radio',\r\n                radioStationName: 'Nombre de la estación:',\r\n                radioStationUrl: 'Dirección:',\r\n                radioStationImage: 'Imagen:'\r\n            },\r\n            inputs: {\r\n                radioStationSearchNamePlaceholder: 'buscar estación de radio por nombre...',\r\n                radioStationNamePlaceholder: 'teclee el nombre de la estación de radio',\r\n                radioStationPlaceholderUrl: 'teclee la dirección de la estación de radio (stream directo / lista de reproducción, formatos: m3u, pls)',\r\n                radioStationPlaceholderImage: 'teclee (opcional) la dirección de la imagen',\r\n            },\r\n            selects: {\r\n                optionDirectStream: 'Tipo de la estación: Stream directo',\r\n                optionM3U: 'Tipo de la estación: lista de reproducción (formato m3u)',\r\n                optionPLS: 'Tipo de la estación: Lista de reproducción (formato pls)',\r\n            },\r\n            buttons: {\r\n                add: 'añadir',\r\n                search: 'buscar',\r\n                play: 'escuchar',\r\n                update: 'actualizar',\r\n                remove: 'eliminar',\r\n                save: 'grabar',\r\n                cancel: 'cancelar'\r\n            }\r\n        },\r\n        commonErrors: {\r\n            invalidAPIParam: 'API ERROR: parámetro incorrecto',\r\n            invalidAPIResponse: 'API ERROR: respuesta del servidor desconocida'\r\n        },\r\n        commonLabels: {\r\n            slogan: '...música para todos',\r\n            projectPageLinkLabel: 'Página del proyecto',\r\n            authorLinkLabel: 'por alex',\r\n            playThisTrack: 'Escuchar esta canción',\r\n            enqueueThisTrack: 'Añadir esta canción a la cola de reproducción actual',\r\n            downloadThisTrack: 'Descargar esta canción',\r\n            navigateToArtistPage: 'Visitar la página del artista',\r\n            playThisAlbum: 'Escuchar este álbum',\r\n            enqueueThisAlbum: 'Añadir este álbum a la cola de reproducción actual',\r\n            playThisPlaylist: 'Escuchar esta lista de reproducción',\r\n            enqueueThisPlaylist: 'Añadir esta lista de reproducción a la cola de reproducción actual',\r\n            by: 'por',\r\n            tracksCount: 'canciones',\r\n            repeatModeNone: 'nada',\r\n            repeatModeTrack: 'canción',\r\n            repeatModeAll: 'todo',\r\n            remoteRadioStation: 'Estación de radio remota'\r\n        },\r\n        commonMessages: {\r\n            refreshData: 'Refrescar datos'\r\n        }\r\n    }\r\n});\r\n\n\n//# sourceURL=webpack://spieldose/./src-frontend/scripts/locale/es.js?");

/***/ }),

/***/ "./src-frontend/scripts/locale/gl.js":
/*!*******************************************!*\
  !*** ./src-frontend/scripts/locale/gl.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\r\n    gl: {\r\n        signIn: {\r\n            labels: {\r\n                tabLink: 'Iniciar sesión',\r\n                email: 'Correo electrónico',\r\n                password: 'Contrasinal'\r\n            },\r\n            buttons: {\r\n                submit: 'Iniciar sesión'\r\n            },\r\n            errorMessages: {\r\n                userNotFound: 'Non existe ningunha conta con ese correo electrónico asociado',\r\n                incorrectPassword: 'Contrasinal incorrecta'\r\n            }\r\n        },\r\n        signUp: {\r\n            labels: {\r\n                tabLink: 'Crear conta',\r\n                email: 'Correo electrónico',\r\n                password: 'Contrasinal'\r\n            },\r\n            buttons: {\r\n                submit: 'Crear conta'\r\n            },\r\n            errorMessages: {\r\n                emailAlreadyUsed: 'O correo electrónico especificado xa está en uso'\r\n            }\r\n        },\r\n        upgrade: {\r\n            labels: {\r\n                newDatabaseVersionAvailable: 'Atopouse disponible unha nova versión da base de datos',\r\n                upgradeRequired: 'Requírese actualizar',\r\n                executeThisCommandline: 'Execute esta línea de comandos:',\r\n                updateNotRequired: 'O seu sistema está actualizado'\r\n            }\r\n        },\r\n        dashboard: {\r\n            labels: {\r\n                allTimeInterval: 'Sempre',\r\n                pastWeekInterval: 'A semana pasada',\r\n                pastMonthInterval: 'O mes pasado',\r\n                pastSemesterInterval: 'O semestre pasado',\r\n                pastYearInterval: 'O ano pasado',\r\n                playCount: 'reproduccións',\r\n                entityTracks: 'Cancions',\r\n                entityArtists: 'Artistas',\r\n                entityAlbums: 'Álbumes',\r\n                topPlayedTracks: 'Cancións máis escoitadas',\r\n                topPlayedArtists: 'Artistas máis escoitados',\r\n                topPlayedGenres: 'Xéneros máis escoitados',\r\n                recentlyAdded: 'Engadido/a recentemente',\r\n                recentlyPlayed: 'Escoitado/a recentemente',\r\n                playStatistics: 'Estadísticas de reproduccións',\r\n                byHour: 'Por hora',\r\n                playStatsByWeekday: 'Estadísticas de reproduccións semanais',\r\n                byWeekday: 'Por día da semana',\r\n                byMonth: 'Por mes',\r\n                byYear: 'Por ano',\r\n                monday: 'Luns',\r\n                tuesday: 'Martes',\r\n                wednesday: 'Mércoles',\r\n                thursday: 'Xoves',\r\n                friday: 'Venres',\r\n                saturday: 'Sábado',\r\n                sunday: 'Domingo',\r\n                playStatsByMonth: 'Estadísticas de reproduccións mensuais',\r\n                january: 'Xaneiro',\r\n                february: 'Febreiro',\r\n                march: 'Marzo',\r\n                april: 'Abril',\r\n                may: 'Maio',\r\n                june: 'Xuño',\r\n                july: 'Xullo',\r\n                august: 'Agosto',\r\n                september: 'Setembro',\r\n                october: 'Outubro',\r\n                november: 'Novembro',\r\n                december: 'Decembro',\r\n                playStatsByYear: 'Estadísticas de reproduccións anuais'\r\n            },\r\n            errors: {\r\n                notEnoughData: 'Non se recolectaron datos suficientes pra xear as estadísticas'\r\n            }\r\n        },\r\n        player: {\r\n            buttons: {\r\n                shufflePlaylistHint: 'reordear aleatoriamente a lista actual',\r\n                toggleRepeatHint: 'cambiar o modo de repetición',\r\n                previousTrackHint: 'ir á canción anterior',\r\n                pauseTrackHint: 'pausar a canción actual',\r\n                playTrackHint: 'reproducir a canción actual',\r\n                nextTrackHint: 'ir á seguinte canción',\r\n                unloveTrackHint: 'desmarcar a canción actual como favorita',\r\n                loveTrackHint: 'marcar a canción actual como favorita',\r\n                downloadTrackHint: 'descargar a canción actual',\r\n                toggleMuteHint: 'silenciar/restaurar volumen'\r\n            }\r\n        },\r\n        menu: {\r\n            labels: {\r\n                header: 'Menu',\r\n                dashboard: 'Estadísticas',\r\n                currentPlaylist: 'Lista de reproducción actual',\r\n                search: 'Procura',\r\n                browseArtists: 'Artistas',\r\n                browseAlbums: 'Álbumes',\r\n                browsePaths: 'Directorios',\r\n                browsePlaylists: 'Listas de reproducción',\r\n                browseRadioStations: 'Estacións de radio',\r\n                signOut: 'Rematar sesión'\r\n            }\r\n        },\r\n        pagination: {\r\n            labels: {\r\n                invalidPageOrNoResults: 'A páxina especificada é incorrecta ou non se atoparon resultados'\r\n            },\r\n            buttons: {\r\n                previousPage: 'Anterior',\r\n                nextPage: 'Seguinte'\r\n            }\r\n        },\r\n        deleteConfirmationModal: {\r\n            labels: {\r\n                modalTitle: 'Confirmación requerida',\r\n                modalBody: '¿ Está seguro de que desexa eliminar permanentemente este elemento ?'\r\n            },\r\n            buttons: {\r\n                ok: 'Si',\r\n                cancel: 'Cancelar'\r\n            }\r\n        },\r\n        currentPlaylist: {\r\n            labels: {\r\n                sectionName: 'Lista de reproducción actual',\r\n                tableHeaderTrack: 'Título',\r\n                tableHeaderArtist: 'Artista',\r\n                tableHeaderAlbum: 'Álbum',\r\n                tableHeaderGenre: 'Xénero',\r\n                tableHeaderYear: 'Ano',\r\n                tableHeaderActions: 'Accións',\r\n                moveElementUpHint: 'subir esta canción na lista de reproducción',\r\n                moveElementDownHint: 'baixar esta canción na lista de reproducción',\r\n                removeElementHint: 'eliminar esta canción da lista de reproducción',\r\n                playThisTrackHint: 'escoitar esta canción',\r\n                nowPlayingClickToPauseHint: 'reproducindo, faga click pra pausar',\r\n                pausedClickToResumeHint: 'en pausa, faga click pra resumir reproducción'\r\n            },\r\n            inputs: {\r\n                playlistNamePlaceholder: 'teclee o nombre da lista de reproducción'\r\n            },\r\n            buttons: {\r\n                savePlaylist: 'grabar lista',\r\n                unsetPlaylist: 'desenlazar lista',\r\n                loadRandom: 'cargar cancións aleatorias',\r\n                clearPlaylist: 'vaciar lista',\r\n                repeat: 'repetir',\r\n                shufflePlaylist: 'reordear aleatoriamente',\r\n                previousTrack: 'anterior',\r\n                nextTrack: 'seguinte',\r\n                playTrack: 'reproducir',\r\n                resumeTrack: 'resumir reproducción',\r\n                pauseTrack: 'pausar',\r\n                stopTrack: 'deter',\r\n                loveTrack: 'favorita',\r\n                unloveTrack: 'favorita',\r\n                downloadTrack: 'descargar',\r\n            }\r\n        },\r\n        search: {\r\n            labels: {\r\n                sectionName: 'Procurar artistas, álbumes, cancións e listas de reproducción'\r\n            },\r\n            tabs: {\r\n                artists: 'Artistas',\r\n                albums: 'Álbumes',\r\n                tracks: 'Cancións',\r\n                playlists: 'Listas de reproducción'\r\n            },\r\n            inputs: {\r\n                searchTextPlaceholder: 'procurar artistas, álbumes, cancións y listas de reproducción'\r\n            },\r\n            buttons: {\r\n                search: 'procurar'\r\n            }\r\n        },\r\n        browseArtists: {\r\n            labels: {\r\n                sectionName: 'Artistas',\r\n            },\r\n            inputs: {\r\n                artistNamePlaceholder: 'procure artista por nome...'\r\n            },\r\n            buttons: {\r\n                search: 'procurar'\r\n            },\r\n            dropdowns: {\r\n                filterAllArtists: 'Tódolos artistas',\r\n                filterNotScrapedArtists: 'Artistas sen metadatos'\r\n            }\r\n        },\r\n        browseArtist: {\r\n            labels: {\r\n                sectionName: 'Detalles do artista',\r\n                plays: 'reproduccións',\r\n                notPlayedYet: 'nunca se escoitou',\r\n                tracksAlbumTableHeader: 'Álbum',\r\n                tracksSectionYearTableHeader: 'Ano',\r\n                tracksSectionNumberTableHeader: 'Número',\r\n                tracksSectionTitleTableHeader: 'Canción',\r\n                tracksSectionActionTableHeader: 'Accións',\r\n                musicBrainzSearchArtistName: 'Nome do artista:',\r\n                musicBrainzSearchArtistNamePlaceholder: 'procurar artista por nome...',\r\n                musicBrainzSearchArtistMBId: 'Identificador Music Brainz:',\r\n                musicBrainzSearchArtistMBIdPlaceholder: 'establecer o identificador Music Brainz do artista'\r\n            },\r\n            tabs: {\r\n                overview: 'Resumen',\r\n                bio: 'Biografía',\r\n                tracks: 'Cancións',\r\n                albums: 'Álbumes',\r\n                updateArtist: 'Actualizar metadatos'\r\n            },\r\n            buttons: {\r\n                search: 'procurar',\r\n                searchOnMusicBrainz: 'procurar en Music Brainz',\r\n                save: 'grabar',\r\n                clear: 'eliminar'\r\n            }\r\n        },\r\n        browseAlbums: {\r\n            labels: {\r\n                sectionName: 'Álbumes',\r\n                unknownArtist: 'artista descoñecido'\r\n            },\r\n            inputs: {\r\n                albumNamePlaceholder: 'procurar álbum por nome...',\r\n                yearPlaceholder: 'ano (4 díxitos)',\r\n                artistNamePlaceholder: 'procurar álbum por nome do artista...'\r\n            },\r\n            buttons: {\r\n                toggleAdvancedSearch: 'mostrar/ocultar procura avanzada',\r\n                search: 'procurar'\r\n            }\r\n        },\r\n        browsePaths: {\r\n            labels: {\r\n                sectionName: 'Directorios',\r\n                pathNameTableHeader: 'Ruta',\r\n                trackCountTableHeader: 'Cancións',\r\n                actionsTableHeader: 'Accións',\r\n                playThisPath: 'Escoitar todas as cancións desta ruta',\r\n                enqueueThisPath: 'Engadir todas as cancións desta ruta á cola de reproducción actual'\r\n            },\r\n            inputs: {\r\n                pathNamePlaceholder: 'procurar ruta por nome...'\r\n            },\r\n            buttons: {\r\n                search: 'procurar'\r\n            }\r\n        },\r\n        browsePlaylists: {\r\n            labels: {\r\n                sectionName: 'Listas de reproducción'\r\n            },\r\n            inputs: {\r\n                playlistNamePlaceholder: 'procurar lista de reproducción por nome...'\r\n            },\r\n            buttons: {\r\n                search: 'procurar',\r\n                play: 'escoitar',\r\n                remove: 'eliminar'\r\n            }\r\n        },\r\n        browseRadioStations: {\r\n            labels: {\r\n                sectionName: 'Estacións de radio',\r\n                radioStationName: 'Nome da estación:',\r\n                radioStationUrl: 'Dirección:',\r\n                radioStationImage: 'Imaxen:'\r\n            },\r\n            inputs: {\r\n                radioStationSearchNamePlaceholder: 'procurar estación de radio por nome...',\r\n                radioStationNamePlaceholder: 'teclee o nombre da estación de radio',\r\n                radioStationPlaceholderUrl: 'teclee a dirección da estación de radio (stream directo / lista de reproducción, formatos: m3u, pls)',\r\n                radioStationPlaceholderImage: 'teclee (opcional) a dirección da imaxen',\r\n            },\r\n            selects: {\r\n                optionDirectStream: 'Tipo da estación: Stream directo',\r\n                optionM3U: 'Tipo da estación: lista de reproducción (formato m3u)',\r\n                optionPLS: 'Tipo da estación: Lista de reproducción (formato pls)',\r\n            },\r\n            buttons: {\r\n                add: 'engadir',\r\n                search: 'procurar',\r\n                play: 'escoitar',\r\n                update: 'actualizar',\r\n                remove: 'eliminar',\r\n                save: 'grabar',\r\n                cancel: 'cancelar'\r\n            }\r\n        },\r\n        commonErrors: {\r\n            invalidAPIParam: 'API ERROR: parámetro incorrecto',\r\n            invalidAPIResponse: 'API ERROR: resposta do servidor descoñecida'\r\n        },\r\n        commonLabels: {\r\n            slogan: '...música pra todos',\r\n            projectPageLinkLabel: 'Páxina do proxecto',\r\n            authorLinkLabel: 'por alex',\r\n            playThisTrack: 'Escoitar esta canción',\r\n            enqueueThisTrack: 'Engadir esta canción á cola de reproducción actual',\r\n            downloadThisTrack: 'Descargar esta canción',\r\n            navigateToArtistPage: 'Visitar a páxina do artista',\r\n            playThisAlbum: 'Escoitar este álbum',\r\n            enqueueThisAlbum: 'Engadir este álbum á cola de reproducción actual',\r\n            playThisPlaylist: 'Escoitar esta lista de reproducción',\r\n            enqueueThisPlaylist: 'Engadir esta lista de reproducción á cola de reproducción actual',\r\n            by: 'por',\r\n            tracksCount: 'cancións',\r\n            repeatModeNone: 'nada',\r\n            repeatModeTrack: 'canción',\r\n            repeatModeAll: 'todo',\r\n            remoteRadioStation: 'Estación de radio remota'\r\n        },\r\n        commonMessages: {\r\n            refreshData: 'Refrescar datos'\r\n        }\r\n    }\r\n});\r\n\n\n//# sourceURL=webpack://spieldose/./src-frontend/scripts/locale/gl.js?");

/***/ }),

/***/ "./src-frontend/scripts/mixins.js":
/*!****************************************!*\
  !*** ./src-frontend/scripts/mixins.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"mixinAPIError\": () => (/* binding */ mixinAPIError),\n/* harmony export */   \"mixinAlbums\": () => (/* binding */ mixinAlbums),\n/* harmony export */   \"mixinArtists\": () => (/* binding */ mixinArtists),\n/* harmony export */   \"mixinLiveSearches\": () => (/* binding */ mixinLiveSearches),\n/* harmony export */   \"mixinNavigation\": () => (/* binding */ mixinNavigation),\n/* harmony export */   \"mixinPagination\": () => (/* binding */ mixinPagination),\n/* harmony export */   \"mixinPlayer\": () => (/* binding */ mixinPlayer),\n/* harmony export */   \"mixinSession\": () => (/* binding */ mixinSession),\n/* harmony export */   \"mixinTopRecentCharts\": () => (/* binding */ mixinTopRecentCharts),\n/* harmony export */   \"mixinValidations\": () => (/* binding */ mixinValidations)\n/* harmony export */ });\n/* harmony import */ var _playerData_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./playerData.js */ \"./src-frontend/scripts/playerData.js\");\n/* harmony import */ var _validator_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./validator.js */ \"./src-frontend/scripts/validator.js\");\n\r\n\r\n\r\n/**\r\n * live searches common mixins\r\n */\r\nconst mixinLiveSearches = {\r\n    computed: {\r\n        liveSearch: function () {\r\n            return (initialState.liveSearch);\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * album entity common mixins\r\n */\r\nconst mixinAlbums = {\r\n    methods: {\r\n        getAlbumImageUrl: function (value) {\r\n            if (value) {\r\n                if (value.indexOf(\"http\") == 0) {\r\n                    return (\"api/thumbnail?url=\" + encodeURIComponent(value));\r\n                } else {\r\n                    return (\"api/thumbnail?hash=\" + value);\r\n                }\r\n            } else {\r\n                /**\r\n                 * Vinyl disc icon credits: Jordan Green (http://www.jordangreenphoto.com/)\r\n                 * https://jordygreen.deviantart.com/art/Vinyl-Disc-Icon-Updated-57968239\r\n                 */\r\n                return (\"images/image-album-not-set.png\");\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * artist entity common mixins\r\n */\r\nconst mixinArtists = {\r\n    methods: {\r\n        getArtistImageUrl: function (value) {\r\n            if (value) {\r\n                return (\"api/thumbnail?url=\" + value);\r\n            } else {\r\n                /**\r\n                 * Music band icon credits: adiante apps (http://www.adianteapps.com/)\r\n                 * https://www.iconfinder.com/icons/339940/band_festival_music_rock_stage_icon\r\n                 */\r\n                return (\"images/image-artist-not-set.png\");\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * player common mixins\r\n */\r\nconst mixinPlayer = {\r\n    data: function () {\r\n        return ({\r\n            currentPlayedSeconds: null,\r\n            volume: 1,\r\n            songProgress: 0\r\n        });\r\n    },\r\n    computed: {\r\n        isPlaying: function () {\r\n            return (this.$audioplayer.isPlaying);\r\n        },\r\n        isPaused: function () {\r\n            return (this.$audioplayer.isPaused);\r\n        },\r\n        isMuted: function () {\r\n            return (false);\r\n        },\r\n        isStopped: function () {\r\n            return (this.$audioplayer.isStopped);\r\n        },\r\n        nowPlayingTitle: function () {\r\n            if (this.isPlaying || this.isPaused) {\r\n                if (this.$audioplayer.currentTrack.track.title) {\r\n                    return (this.$audioplayer.currentTrack.track.title);\r\n                } else {\r\n                    return (\"track title unknown\");\r\n                }\r\n            } else {\r\n                return (\"track title\");\r\n            }\r\n        },\r\n        nowPlayingSeconds: function () {\r\n            return (this.currentPlayedSeconds);\r\n        },\r\n        nowPlayingLength: function () {\r\n            if (this.isPlaying || this.isPaused) {\r\n                if (this.$audioplayer.currentTrack.track.playtimeString) {\r\n                    return (this.$audioplayer.currentTrack.track.playtimeString);\r\n                } else {\r\n                    return (\"00:00\");\r\n                }\r\n            } else {\r\n                return (\"00:00\");\r\n            }\r\n        },\r\n        nowPlayingArtist: function () {\r\n            if (this.isPlaying || this.isPaused) {\r\n                if (this.$audioplayer.currentTrack.track.artist) {\r\n                    return (this.$audioplayer.currentTrack.track.artist);\r\n                } else {\r\n                    return (\"artist unknown\");\r\n                }\r\n            } else {\r\n                return (\"artist\");\r\n            }\r\n        },\r\n        nowPlayingArtistAlbum: function () {\r\n            if (this.isPlaying || this.isPaused) {\r\n                if (this.$audioplayer.currentTrack.track.album) {\r\n                    return (\" / \" + this.$audioplayer.currentTrack.track.album);\r\n                } else {\r\n                    return (\"album unknown\");\r\n                }\r\n            } else {\r\n                return (\"album\");\r\n            }\r\n        },\r\n        nowPlayingYear: function () {\r\n            if (this.isPlaying || this.isPaused) {\r\n                if (this.$audioplayer.currentTrack.track.year) {\r\n                    return (\" (\" + this.$audioplayer.currentTrack.track.year + \")\");\r\n                } else {\r\n                    return (\" (year unknown)\");\r\n                }\r\n            } else {\r\n                return (\" (year)\");\r\n            }\r\n        },\r\n        nowPlayingLoved: function () {\r\n            return (this.$audioplayer.currentTrack.track && this.$audioplayer.currentTrack.track.loved == '1');\r\n        }\r\n    },\r\n    methods: {\r\n        formatSeconds: function (seconds) {\r\n            // https://stackoverflow.com/a/11234208\r\n            function formatSecondsAsTime(secs, format) {\r\n                const hr = Math.floor(secs / 3600);\r\n                let min = Math.floor((secs - (hr * 3600)) / 60);\r\n                let sec = Math.floor(secs - (hr * 3600) - (min * 60));\r\n                if (min < 10) {\r\n                    min = \"0\" + min;\r\n                }\r\n                if (sec < 10) {\r\n                    sec = \"0\" + sec;\r\n                }\r\n                return (min + ':' + sec);\r\n            }\r\n            return (formatSecondsAsTime(seconds));\r\n        },\r\n        playPathTracks: function (path) {\r\n            this.clearAPIErrors();\r\n            spieldoseAPI.track.getPathTracks(path).then(response => {\r\n                if (response.data.tracks && response.data.tracks.length > 0) {\r\n                    this.$audioplayer.currentPlaylist.replace(response.data.tracks);\r\n                }\r\n            }).catch(error => {\r\n                this.setAPIError(error.getApiErrorData());\r\n            });\r\n        },\r\n        enqueuePathTracks: function (path) {\r\n            this.clearAPIErrors();\r\n            spieldoseAPI.track.getPathTracks(path).then(response => {\r\n                if (response.data.tracks && response.data.tracks.length > 0) {\r\n                    this.$audioplayer.currentPlaylist.enqueue(response.data.tracks);\r\n                }\r\n            }).catch(error => {\r\n                this.setAPIError(error.getApiErrorData());\r\n            });\r\n        },\r\n        playAlbumTracks: function (album, artist, year) {\r\n            this.clearAPIErrors();\r\n            spieldoseAPI.track.getAlbumTracks(album || null, artist || null, year || null).then(response => {\r\n                this.$audioplayer.currentPlaylist.empty();\r\n                if (response.data.tracks && response.data.tracks.length > 0) {\r\n                    this.$audioplayer.tracks = response.data.tracks;\r\n                    this.$audioplayer.playback.play();\r\n                }\r\n            }).catch(error => {\r\n                this.setAPIError(error.getApiErrorData());\r\n            });\r\n        },\r\n        enqueueAlbumTracks: function (album, artist, year) {\r\n            this.clearAPIErrors();\r\n            spieldoseAPI.track.getAlbumTracks(album || null, artist || null, year || null).then(response => {\r\n                if (response.data.tracks && response.data.tracks.length > 0) {\r\n                    this.$audioplayer.currentPlaylist.enqueue(response.data.tracks);\r\n                }\r\n            }).catch(error => {\r\n                this.setAPIError(error.getApiErrorData());\r\n            });\r\n        },\r\n        playPlaylistTracks: function (id) {\r\n            this.clearAPIErrors();\r\n            if (id) {\r\n                spieldoseAPI.playlist.get(id).then(response => {\r\n                    this.$audioplayer.currentPlaylist.replace(response.data.playlist.tracks);\r\n                    this.$audioplayer.currentPlaylist.set(id, response.data.playlist.name);\r\n                }).catch(error => {\r\n                    this.setAPIError(error.getApiErrorData());\r\n                });\r\n            } else {\r\n                spieldoseAPI.track.searchTracks(\"\", \"\", \"\", true, 1, 0, \"random\").then(response => {\r\n                }).catch(error => {\r\n                    this.$audioplayer.currentPlaylist.replace(response.data.tracks);\r\n                    this.$audioplayer.currentPlaylist.unset();\r\n                    this.setAPIError(error.getApiErrorData());\r\n                });\r\n            }\r\n        },\r\n        enqueuePlaylistTracks: function (id) {\r\n            this.clearAPIErrors();\r\n            if (id) {\r\n                spieldoseAPI.playlist.get(id).then(response => {\r\n                    this.$audioplayer.currentPlaylist.enqueue(response.data.playlist.tracks);\r\n                }).catch(error => {\r\n                    this.setAPIError(error.getApiErrorData());\r\n                });\r\n            } else {\r\n                spieldoseAPI.track.searchTracks(\"\", \"\", \"\", true, 1, 0, \"random\").then(response => {\r\n                    this.$audioplayer.currentPlaylist.enqueue(response.data.tracks);\r\n                }).catch(error => {\r\n                    this.setAPIError(error.getApiErrorData());\r\n                });\r\n            }\r\n        },\r\n        playTrack: function (track) {\r\n            this.$audioplayer.currentPlaylist.replace([track]);\r\n        },\r\n        enqueueTrack: function (track) {\r\n            this.$audioplayer.currentPlaylist.enqueue([track]);\r\n        },\r\n        playRadioStation: function (id) {\r\n            this.clearAPIErrors();\r\n            spieldoseAPI.radioStation.get(id).then(response => {\r\n                let track = {\r\n                    title: response.data.radioStation.name,\r\n                    artist: this.$t(\"commonLabels.remoteRadioStation\"),\r\n                    radioStation: response.data.radioStation\r\n                };\r\n                this.$audioplayer.currentPlaylist.replace([track]);\r\n            }).catch(error => {\r\n                this.setAPIError(error.getApiErrorData());\r\n            });\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * validator common mixins\r\n */\r\nconst mixinValidations = {\r\n    data: function () {\r\n        return ({\r\n            validator: _validator_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]\r\n        });\r\n    }\r\n};\r\n\r\n/**\r\n * api error common mixins\r\n */\r\nconst mixinAPIError = {\r\n    data: function () {\r\n        return ({\r\n            apiError: null\r\n        });\r\n    }, computed: {\r\n        hasAPIErrors() {\r\n            return (this.apiError != null);\r\n        }\r\n    }, methods: {\r\n        clearAPIErrors() {\r\n            this.apiError = null;\r\n        },\r\n        setAPIError(err) {\r\n            this.apiError = err;\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * pagination common mixins\r\n */\r\nconst mixinPagination = {\r\n    data: function () {\r\n        return ({\r\n            pager: {\r\n                actualPage: 1,\r\n                previousPage: 1,\r\n                nextPage: 1,\r\n                totalPages: 0,\r\n                resultsPage: initialState.defaultResultsPage\r\n            }\r\n        });\r\n    },\r\n    created: function () {\r\n        if (this.$route.params.page) {\r\n            this.pager.actualPage = parseInt(this.$route.params.page);\r\n        }\r\n        if (typeof this.search === \"function\") {\r\n            this.search();\r\n        }\r\n    },\r\n    watch: {\r\n        '$route'(to, from) {\r\n            if (to.params.page) {\r\n                this.pager.actualPage = parseInt(to.params.page);\r\n                if (typeof this.search === \"function\") {\r\n                    this.search();\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * top & recent dashboard charts mixins\r\n */\r\nconst mixinTopRecentCharts = {\r\n    data: function () {\r\n        return ({\r\n            items: []\r\n        });\r\n    },\r\n    created: function () {\r\n        this.load();\r\n    },\r\n    computed: {\r\n        hasItems: function () {\r\n            return (this.items && this.items.length > 0);\r\n        }\r\n    },\r\n    methods: {\r\n        playTrack: function (track) {\r\n            this.$audioplayer.currentPlaylist.replace([track]);\r\n        },\r\n        enqueueTrack: function (track) {\r\n            this.$audioplayer.currentPlaylist.enqueue([track]);\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * navigation mixins\r\n */\r\nconst mixinNavigation = {\r\n    methods: {\r\n        isSectionActive: function (section) {\r\n            return (this.$route.name == section);\r\n        },\r\n        changeSection: function (routeName) {\r\n            this.$router.push({ name: routeName }).catch(err => { });\r\n        },\r\n        navigateToArtistPage: function (artist) {\r\n            if (artist) {\r\n                this.$router.push({ name: 'artist', params: { artist: artist } });\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * session mixins\r\n */\r\nconst mixinSession = {\r\n    methods: {\r\n        signout: function () {\r\n            this.$bus.emit(\"signOut\");\r\n        }\r\n    }\r\n};\n\n//# sourceURL=webpack://spieldose/./src-frontend/scripts/mixins.js?");

/***/ }),

/***/ "./src-frontend/scripts/pages/currentPlaylist.js":
/*!*******************************************************!*\
  !*** ./src-frontend/scripts/pages/currentPlaylist.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _plugins_bus__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../plugins/bus */ \"./src-frontend/scripts/plugins/bus.js\");\n\r\n\r\nconst template = function () {\r\n    return `\r\n        <div class=\"field has-addons\">\r\n            <div class=\"control has-icons-left is-expanded is-small\" :class=\"{ 'is-loading': loading}\">\r\n                <input class=\"input is-small\" type=\"text\" placeholder=\"Search\" v-model.trim=\"searchQuery\"\r\n                    v-on:keyup.enter=\"onSearch\">\r\n                <span class=\"icon is-small is-left\">\r\n                    <i class=\"fas fa-search\"></i>\r\n                </span>\r\n                <span class=\"icon is-small is-right\">\r\n                    <i class=\"fas fa-loading\"></i>\r\n                </span>\r\n            </div>\r\n            <div class=\"control\">\r\n                <a class=\"button is-small\" style=\"background: #d30320; color: #fafafa;\"\r\n                    @click.prevent=\"onSearch\" :disabled=\"loading\">\r\n                    Search\r\n                </a>\r\n            </div>\r\n        </div>\r\n        <table class=\"table is-bordered is-striped is-narrow is-hoverable is-fullwidth\" style=\"font-size: 1rem;\">\r\n            <thead>\r\n                <tr>\r\n                    <th class=\"has-text-right\">Index</th>\r\n                    <th>Title</th>\r\n                    <th>Artist</th>\r\n                    <th>Album Artist</th>\r\n                    <th>Album</th>\r\n                    <th class=\"has-text-right\">Album Track nº</th>\r\n                    <th>Year</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr v-for=\"track,index in tracks\" :key=\"index\" class=\"is-clickable\" @click.prevent=\"currentTrackIndex = index;\"\r\n                    :class=\"{ 'is-selected': currentTrack.id == track.id } \">\r\n                    <td class=\"has-text-right\"><i class=\"fa-solid fa-play mr-2\" v-if=\"currentTrack.id == track.id\"></i>{{ index + 1 }}/{{ tracks.length }}</td>\r\n                    <td>{{ track.title }}</td>\r\n                    <td>{{ track.artist }} <span class=\"is-clickable\" v-if=\"track.artist\" @click.prevent=\"loadTracks('', track.artist, '', '');\"><i class=\"fas fa-link ml-1\"></i></span></td>\r\n                    <td>{{ track.albumArtist }} <span class=\"is-clickable\" v-if=\"track.albumArtist\" @click.prevent=\"loadTracks('', '', track.albumArtist, '');\"><i class=\"fas fa-link ml-1\"></i></span></td>\r\n                    <td>{{ track.album }}<span class=\"is-clickable\" v-if=\"track.album\" @click.prevent=\"loadTracks('', '', track.albumArtist, track.album);\"><i class=\"fas fa-link ml-1\"></i></span></td>\r\n                    <td class=\"has-text-right\">{{ track.trackNumber }}</td>\r\n                    <td>{{ track.year }}</td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    `;\r\n};\r\n\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\r\n    name: 'spieldose-page-current-playlist',\r\n    template: template(),\r\n    data: function () {\r\n        return ({\r\n            loading: false,\r\n            tracks: [],\r\n            currentTrackIndex: -1,\r\n            searchQuery: null,\r\n        });\r\n    },\r\n    computed: {\r\n        currentTrack: function () {\r\n            if (this.tracks && this.tracks.length > 0 && this.currentTrackIndex >= 0) {\r\n                return (this.tracks[this.currentTrackIndex]);\r\n            } else {\r\n                return ({});\r\n            }\r\n        },\r\n        isPlaying: function () {\r\n            return (true);\r\n            //return (this.audio && this.audio.currentAudio && this.audio.currentAudio.currentTime > 0 && !this.audio.currentAudio.paused && !this.audio.currentAudio.ended && this.audio.currentAudio.readyState > 2);\r\n        }\r\n    },\r\n    watch: {\r\n        currentTrackIndex: function (newValue, oldValue) {\r\n            /*\r\n            if (!this.audio) {\r\n                this.audio = document.getElementById('audio');\r\n                this.audio.volume = this.volume / 100;\r\n            } else {\r\n                if (this.audio.currentAudio && this.audio.currentAudio.currentTime > 0 && !this.audio.currentAudio.paused && !this.audio.currentAudio.ended && this.audio.currentAudio.readyState > 2) {\r\n                    this.audio.stop();\r\n                }\r\n            }\r\n            this.audio.src = \"/api2/file/\" + this.tracks[this.currentTrackIndex].id;\r\n            this.audio.load();\r\n            if (oldValue != -1) {\r\n                this.onPlay();\r\n            }\r\n            */\r\n            this.$bus.emit('onTrackChanged', { track: this.currentTrack });\r\n        }\r\n    },\r\n    created: function () {\r\n        this.loadTracks();\r\n    },\r\n    methods: {\r\n        loadTracks: function (query, artist, albumArtist, album) {\r\n            if (artist || album) {\r\n                this.searchQuery = null;\r\n            }\r\n            this.loading = true;\r\n            this.$api.track.search(this.searchQuery, artist, albumArtist, album).then(success => {\r\n                this.tracks = success.data.tracks;\r\n                this.currentTrackIndex = 0;\r\n                this.loading = false;\r\n            }).catch(error => {\r\n                switch (error.response.status) {\r\n                    case 400:\r\n                        if (error.isFieldInvalid('email')) {\r\n                            this.validator.setInvalid('signUpEmail', this.$t('commonErrors.invalidAPIParam'));\r\n                            this.$nextTick(() => this.$refs.signUpEmail.focus());\r\n                        } else if (error.isFieldInvalid('password')) {\r\n                            this.validator.setInvalid('signUpPassword', this.$t('commonErrors.invalidAPIParam'));\r\n                            this.$nextTick(() => this.$refs.signUpPassword.focus());\r\n                        } else {\r\n                            this.setAPIError(error.getApiErrorData());\r\n                        }\r\n                        break;\r\n                    case 409:\r\n                        this.validator.setInvalid('signUpEmail', this.$t('signUp.errorMessages.emailAlreadyUsed'));\r\n                        this.$nextTick(() => this.$refs.signUpEmail.focus());\r\n                        break;\r\n                    default:\r\n                        this.setAPIError(error.getApiErrorData());\r\n                        break;\r\n                }\r\n                this.loading = false;\r\n            });\r\n            /*\r\n            const url = '/api2/track/search?q=' + (query ? encodeURIComponent(query) : '') + '&artist=' + (artist ? encodeURIComponent(artist) : '') + '&albumArtist=' + (albumArtist ? encodeURIComponent(albumArtist) : '') + '&album=' + (album ? encodeURIComponent(album) : '');\r\n            this.axios.get(url).then(\r\n                (response) => {\r\n                    // handle success\r\n                    this.tracks = response.data.tracks;\r\n                    this.currentTrackIndex = 0;\r\n                }).catch((error) => {\r\n                    // handle error\r\n                    console.log(error);\r\n                }).then(() => {\r\n                    // always executed\r\n                    this.loading = false;\r\n                });\r\n            */\r\n        },\r\n        onSearch: function () {\r\n            this.loadTracks(this.searchQuery);\r\n        },\r\n        onPreviousTrack: function () {\r\n            if (this.currentTrackIndex > 0) {\r\n                this.currentTrackIndex--;\r\n            }\r\n        },\r\n        onNextTrack: function () {\r\n            if (this.tracks && this.tracks.length > 0 && this.currentTrackIndex < this.tracks.length) {\r\n                this.currentTrackIndex++;\r\n            }\r\n        }\r\n    }\r\n});\n\n//# sourceURL=webpack://spieldose/./src-frontend/scripts/pages/currentPlaylist.js?");

/***/ }),

/***/ "./src-frontend/scripts/pages/signin.js":
/*!**********************************************!*\
  !*** ./src-frontend/scripts/pages/signin.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../api.js */ \"./src-frontend/scripts/api.js\");\n/* harmony import */ var _api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_api_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _mixins_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../mixins.js */ \"./src-frontend/scripts/mixins.js\");\n/* harmony import */ var _vue_components_tiles_album_images_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../vue-components/tiles-album-images.js */ \"./src-frontend/scripts/vue-components/tiles-album-images.js\");\n\r\n\r\n\r\n\r\nconst template = function () {\r\n    return `\r\n        <!-- template credits: daniel (https://github.com/dansup) -->\r\n        <div class=\"columns is-vcentered is-centered\">\r\n            <div class=\"column is-4-widescreen is-6-desktop is-8-tablet is-12-mobile\">\r\n                <section class=\"section\">\r\n                    <!-- Apple Music Sound Equalizer in SVG by Geoff Graham (https://codepen.io/geoffgraham/pen/XmMJqj) -->\r\n                    <div class=\"columns is-centered\">\r\n                        <div class=\"column is-half\">\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"equilizer\" viewBox=\"0 0 128 128\">\r\n                                <g>\r\n                                    <title>Audio Equalizer</title>\r\n                                    <rect class=\"bar\" transform=\"translate(0,0)\" y=\"15\"></rect>\r\n                                    <rect class=\"bar\" transform=\"translate(25,0)\" y=\"15\"></rect>\r\n                                    <rect class=\"bar\" transform=\"translate(50,0)\" y=\"15\"></rect>\r\n                                    <rect class=\"bar\" transform=\"translate(75,0)\" y=\"15\"></rect>\r\n                                    <rect class=\"bar\" transform=\"translate(100,0)\" y=\"15\"></rect>\r\n                                </g>\r\n                            </svg>\r\n                        </div>\r\n                    </div>\r\n                    <h1 class=\"title has-text-centered\"><span class=\"icon is-medium\"><i class=\"fas fa-music\" aria-hidden=\"true\"></i></span> Spieldose <span class=\"icon is-medium\"><i class=\"fas fa-music\" aria-hidden=\"true\"></i></span></h1>\r\n                    <h2 class=\"subtitle is-6 has-text-centered\"><cite>{{ $t(\"commonLabels.slogan\") }}</cite></h2>\r\n                    <div class=\"box \">\r\n                        <div class=\"tabs is-toggle is-radiusless ml-4 mb-2\" v-if=\"allowSignUp\">\r\n                            <ul>\r\n                                <li v-bind:class=\"{ 'is-active': isSignInTabActive }\">\r\n                                    <a v-on:click.prevent=\"changeTab('signin');\">\r\n                                        <span class=\"icon is-small\"><i class=\"fas fa-user\"></i></span>\r\n                                        <span>{{ $t(\"signIn.labels.tabLink\") }}</span>\r\n                                    </a>\r\n                                </li>\r\n                                <li v-bind:class=\"{ 'is-active': isSignUpTabActive }\">\r\n                                    <a v-on:click.prevent=\"changeTab('signup');\">\r\n                                        <span class=\"icon is-small\"><i class=\"fas fa-user-plus\"></i></span>\r\n                                        <span>{{ $t(\"signUp.labels.tabLink\") }}</span>\r\n                                    </a>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                        <form v-on:submit.prevent=\"submitSignIn\" v-show=\"isSignInTabActive\">\r\n                            <div class=\"box is-radiusless is-shadowless pt-0\">\r\n                                <div class=\"field\">\r\n                                    <label class=\"label is-hidden-mobile\">{{ $t(\"signIn.labels.email\") }}</label>\r\n                                    <p class=\"block control has-icons-left\" v-bind:class=\"{ 'has-icons-right' : validator.hasInvalidField('signInEmail') }\">\r\n                                        <input class=\"input is-rounded\" type=\"email\" ref=\"signInEmail\" maxlength=\"255\" required v-bind:class=\"{ 'is-danger': validator.hasInvalidField('signInEmail') }\" v-bind:disabled=\"loading\" v-model=\"signInEmail\" :placeholder=\"$t('signIn.labels.email')\">\r\n                                        <span class=\"icon is-small is-left\"><i class=\"fas fa-envelope\"></i></span>\r\n                                        <span class=\"icon is-small is-right\" v-show=\"validator.hasInvalidField('signInEmail')\"><i class=\"fas fa-warning\"></i></span>\r\n                                        <p class=\"help is-danger\" v-show=\"validator.hasInvalidField('signInEmail')\">{{ validator.getInvalidFieldMessage('signInEmail') }}</p>\r\n                                    </p>\r\n                                </div>\r\n                                <div class=\"field\">\r\n                                    <label class=\"label is-hidden-mobile\">{{ $t(\"signIn.labels.password\") }}</label>\r\n                                    <p class=\"block control has-icons-left\" v-bind:class=\"{ 'has-icons-right' : validator.hasInvalidField('signInPassword') }\">\r\n                                        <input class=\"input is-rounded\" type=\"password\" ref=\"signInPassword\" required v-bind:class=\"{ 'is-danger': validator.hasInvalidField('signInPassword') }\" v-bind:disabled=\"loading\" v-model=\"signInPassword\" :placeholder=\"$t('signIn.labels.password')\">\r\n                                        <span class=\"icon is-small is-left\"><i class=\"fas fa-key\"></i></span>\r\n                                        <span class=\"icon is-small is-right\" v-show=\"validator.hasInvalidField('signInPassword')\"><i class=\"fas fa-warning\"></i></span>\r\n                                        <p class=\"help is-danger\" v-show=\"validator.hasInvalidField('signInPassword')\">{{ validator.getInvalidFieldMessage('signInPassword') }}</p>\r\n                                    </p>\r\n                                </div>\r\n                                <p class=\"control\">\r\n                                    <button type=\"submit\" class=\"button is-black\" v-bind:class=\"{ 'is-loading': loading }\" v-bind:disabled=\"loading\">\r\n                                        <span class=\"icon\"><i class=\"fas fa-lock\"></i></span>\r\n                                        <span>{{ $t(\"signIn.buttons.submit\") }}</span>\r\n                                    </button>\r\n                                </p>\r\n                            </div>\r\n                        </form>\r\n                        <form v-on:submit.prevent=\"submitSignUp\" v-show=\"isSignUpTabActive\">\r\n                            <div class=\"box is-radiusless is-shadowless pt-0\">\r\n                                <div class=\"field\">\r\n                                    <label class=\"label is-hidden-mobile\">{{ $t(\"signUp.labels.email\") }}</label>\r\n                                    <p class=\"block control has-icons-left\" v-bind:class=\"{ 'has-icons-right' : validator.hasInvalidField('signUpEmail') }\">\r\n                                        <input class=\"input is-rounded\" type=\"email\" ref=\"signUpEmail\" maxlength=\"255\" required v-bind:class=\"{ 'is-danger': validator.hasInvalidField('signUpEmail') }\" v-bind:disabled=\"loading\" v-model=\"signUpEmail\" :placeholder=\"$t('signIn.labels.email')\">\r\n                                        <span class=\"icon is-small is-left\"><i class=\"fas fa-envelope\"></i></span>\r\n                                        <span class=\"icon is-small is-right\" v-show=\"validator.hasInvalidField('signUpEmail')\"><i class=\"fas fa-warning\"></i></span>\r\n                                        <p class=\"help is-danger\" v-show=\"validator.hasInvalidField('signUpEmail')\">{{ validator.getInvalidFieldMessage('signUpEmail') }}</p>\r\n                                    </p>\r\n                                </div>\r\n                                <div class=\"field\">\r\n                                    <label class=\"label is-hidden-mobile\">{{ $t(\"signUp.labels.password\") }}</label>\r\n                                    <p class=\"block control has-icons-left\" v-bind:class=\"{ 'has-icons-right' : validator.hasInvalidField('signUpPassword') }\">\r\n                                        <input class=\"input is-rounded\" type=\"password\" ref=\"signUpPassword\" required v-bind:class=\"{ 'is-danger': validator.hasInvalidField('signUpPassword') }\" v-bind:disabled=\"loading\" v-model=\"signUpPassword\" :placeholder=\"$t('signIn.labels.password')\">\r\n                                        <span class=\"icon is-small is-left\"><i class=\"fas fa-key\"></i></span>\r\n                                        <span class=\"icon is-small is-right\" v-show=\"validator.hasInvalidField('signUpPassword')\"><i class=\"fas fa-warning\"></i></span>\r\n                                        <p class=\"help is-danger\" v-show=\"validator.hasInvalidField('signUpPassword')\">{{ validator.getInvalidFieldMessage('signUpPassword') }}</p>\r\n                                    </p>\r\n                                </div>\r\n                                <p class=\"control\">\r\n                                    <button type=\"submit\" class=\"button is-black\" v-bind:class=\"{ 'is-loading': loading }\" v-bind:disabled=\"loading\">\r\n                                        <span class=\"icon\"><i class=\"fas fa-plus-circle\"></i></span>\r\n                                        <span>{{ $t(\"signUp.buttons.submit\") }}</span>\r\n                                    </button>\r\n                                </p>\r\n                            </div>\r\n                        </form>\r\n                        <p class=\"has-text-centered\">\r\n                            <a href=\"https://github.com/aportela/spieldose\" target=\"_blank\"><span class=\"icon is-small mr-1\"><i class=\"fab fa-github\"></i></span>{{ $t(\"commonLabels.projectPageLinkLabel\") }}</a> | <a href=\"https://github.com/aportela\" target=\"_blank\">{{ $t(\"commonLabels.authorLinkLabel\") }}</a>\r\n                        </p>\r\n                    </div>\r\n                </section>\r\n            </div>\r\n            <div class=\"column is-8 is-hidden-mobile is-hidden-tablet-only is-hidden-desktop-only container_tiles\">\r\n                <spieldose-tiles-album-images></spieldose-tiles-album-images>\r\n            </div>\r\n        </div>\r\n    `;\r\n};\r\n\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\r\n    name: 'spieldose-signin-component',\r\n    template: template(),\r\n    mixins: [_mixins_js__WEBPACK_IMPORTED_MODULE_1__.mixinValidations],\r\n    data: function () {\r\n        return ({\r\n            loading: false,\r\n            signInEmail: null,\r\n            signInPassword: null,\r\n            allowSignUp: initialState.allowSignUp,\r\n            signUpEmail: null,\r\n            signUpPassword: null,\r\n            tab: 'signin'\r\n        });\r\n    },\r\n    mounted: function () {\r\n        this.$nextTick(() => this.$refs.signInEmail.focus());\r\n    },\r\n    computed: {\r\n        isSignInTabActive: function () {\r\n            return (this.tab == 'signin');\r\n        },\r\n        isSignUpTabActive: function () {\r\n            return (this.tab == 'signup');\r\n        }\r\n    },\r\n    watch: {\r\n        isSignInTabActive: function (newValue) {\r\n            if (newValue) {\r\n                this.$nextTick(() => this.$refs.signInEmail.focus());\r\n            }\r\n        },\r\n        isSignUpTabActive: function (newValue) {\r\n            if (newValue) {\r\n                this.$nextTick(() => this.$refs.signUpEmail.focus());\r\n            }\r\n        }\r\n    },\r\n    components: {\r\n        'spieldose-tiles-album-images': _vue_components_tiles_album_images_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]\r\n    },\r\n    methods: {\r\n        changeTab: function (tab) {\r\n            if (this.tab != tab) {\r\n                this.tab = tab;\r\n            }\r\n        },\r\n        submitSignIn: function () {\r\n            this.loading = true;\r\n            this.validator.clear();\r\n            this.$api.session.signIn(this.signInEmail, this.signInPassword).then(success => {\r\n                this.loading = false;\r\n                this.$router.push({ name: 'nowPlaying' });\r\n            }).catch(error => {\r\n                switch (error.response.status) {\r\n                    case 400:\r\n                        if (error.isFieldInvalid('email')) {\r\n                            this.validator.setInvalid('signInEmail', this.$t('commonErrors.invalidAPIParam'));\r\n                            this.$nextTick(() => this.$refs.signInEmail.focus());\r\n                        } else if (error.isFieldInvalid(\"password\")) {\r\n                            this.validator.setInvalid('signInPassword', this.$t('commonErrors.invalidAPIParam'));\r\n                            this.$nextTick(() => this.$refs.signInPassword.focus());\r\n                        } else {\r\n                            this.setAPIError(error.getApiErrorData());\r\n                        }\r\n                        break;\r\n                    case 404:\r\n                        this.validator.setInvalid('signInEmail', this.$t('signIn.errorMessages.userNotFound'));\r\n                        this.$nextTick(() => this.$refs.signInEmail.focus());\r\n                        break;\r\n                    case 401:\r\n                        this.validator.setInvalid('signInPassword', this.$t('signIn.errorMessages.incorrectPassword'));\r\n                        this.$nextTick(() => this.$refs.signInPassword.focus());\r\n                        break;\r\n                    default:\r\n                        this.setAPIError(error.getApiErrorData());\r\n                        break;\r\n                }\r\n                this.loading = false;\r\n            });\r\n        },\r\n        submitSignUp: function () {\r\n            this.invalidSignUpUsername = false;\r\n            this.invalidSignUpPassword = false;\r\n            this.loading = true;\r\n            this.$api.session.signUp(this.signUpEmail, this.signUpPassword).then(success => {\r\n                this.signInEmail = this.signUpEmail;\r\n                this.signInPassword = this.signUpPassword;\r\n                this.loading = false;\r\n                this.tab = 'signin';\r\n                this.submitSignIn();\r\n                this.loading = false;\r\n            }).catch(error => {\r\n                switch (error.response.status) {\r\n                    case 400:\r\n                        if (error.isFieldInvalid('email')) {\r\n                            this.validator.setInvalid('signUpEmail', this.$t('commonErrors.invalidAPIParam'));\r\n                            this.$nextTick(() => this.$refs.signUpEmail.focus());\r\n                        } else if (error.isFieldInvalid('password')) {\r\n                            this.validator.setInvalid('signUpPassword', this.$t('commonErrors.invalidAPIParam'));\r\n                            this.$nextTick(() => this.$refs.signUpPassword.focus());\r\n                        } else {\r\n                            this.setAPIError(error.getApiErrorData());\r\n                        }\r\n                        break;\r\n                    case 409:\r\n                        this.validator.setInvalid('signUpEmail', this.$t('signUp.errorMessages.emailAlreadyUsed'));\r\n                        this.$nextTick(() => this.$refs.signUpEmail.focus());\r\n                        break;\r\n                    default:\r\n                        this.setAPIError(error.getApiErrorData());\r\n                        break;\r\n                }\r\n                this.loading = false;\r\n            });\r\n        }\r\n    }\r\n});\n\n//# sourceURL=webpack://spieldose/./src-frontend/scripts/pages/signin.js?");

/***/ }),

/***/ "./src-frontend/scripts/playerData.js":
/*!********************************************!*\
  !*** ./src-frontend/scripts/playerData.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./api.js */ \"./src-frontend/scripts/api.js\");\n/* harmony import */ var _api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_api_js__WEBPACK_IMPORTED_MODULE_0__);\n\r\n\r\n/**\r\n * create & return a player data object\r\n */\r\nconst getPlayerData = (function () {\r\n    \"use strict\";\r\n\r\n    let playerData = {\r\n        loading: false,\r\n        isPlaying: false,\r\n        isPaused: false,\r\n        isStopped: true,\r\n        repeatTracksMode: 'none', // none | track | all\r\n        currentPlaylist: {\r\n            id: null,\r\n            name: null\r\n        },\r\n        currentTrack: {\r\n            index: 0,\r\n            track: null\r\n        },\r\n        playback: {},\r\n        tracks: []\r\n    };\r\n\r\n    /**\r\n     * shuffle array\r\n     * https://stackoverflow.com/a/6274381\r\n     * @param {*} a\r\n     */\r\n    function shuffle(a) {\r\n        var j, x, i;\r\n        for (i = a.length - 1; i > 0; i--) {\r\n            j = Math.floor(Math.random() * (i + 1));\r\n            x = a[i];\r\n            a[i] = a[j];\r\n            a[j] = x;\r\n        }\r\n        return a;\r\n    };\r\n\r\n    playerData.download = function (trackId) {\r\n        if (trackId) {\r\n            window.location = \"api/track/get/\" + trackId;\r\n        }\r\n    };\r\n    playerData.love = function (track) {\r\n        playerData.loading = true;\r\n        _api_js__WEBPACK_IMPORTED_MODULE_0___default().track.love(track.id, function (response) {\r\n            if (response.status == 200) {\r\n                playerData.loading = false;\r\n                track.loved = response.data.loved;\r\n            } else {\r\n                // TODO: ERRORS\r\n                playerData.loading = false;\r\n            }\r\n        });\r\n    };\r\n    playerData.unlove = function (track) {\r\n        playerData.loading = true;\r\n        _api_js__WEBPACK_IMPORTED_MODULE_0___default().track.unlove(track.id, function (response) {\r\n            if (response.status == 200) {\r\n                playerData.loading = false;\r\n                track.loved = response.data.loved;\r\n            } else {\r\n                // TODO: ERRORS\r\n                playerData.loading = false;\r\n            }\r\n        });\r\n    };\r\n\r\n    playerData.currentTrack.unset = () => {\r\n        playerData.currentTrack.index = 0;\r\n        playerData.currentTrack.track = null;\r\n    };\r\n    playerData.currentTrack.download = function () {\r\n        if (playerData.currentTrack.track) {\r\n            playerData.download(playerData.currentTrack.track.id);\r\n        }\r\n    };\r\n    playerData.currentTrack.setLoved = function () {\r\n        if (playerData.currentTrack.track) {\r\n            playerData.love(playerData.currentTrack.track);\r\n        }\r\n    };\r\n    playerData.currentTrack.unSetLoved = function () {\r\n        if (playerData.currentTrack.track) {\r\n            playerData.unlove(playerData.currentTrack.track);\r\n        }\r\n    };\r\n\r\n    playerData.currentPlaylist.unset = function () {\r\n        playerData.currentPlaylist.id = null;\r\n        playerData.currentPlaylist.name = null;\r\n    };\r\n    playerData.currentPlaylist.empty = function () {\r\n        playerData.currentTrack.unset();\r\n        playerData.tracks = [];\r\n    };\r\n    playerData.currentPlaylist.replace = function (tracks) {\r\n        playerData.currentPlaylist.empty();\r\n        playerData.tracks = tracks;\r\n        playerData.playback.play();\r\n    };\r\n    playerData.currentPlaylist.enqueue = function (tracks) {\r\n        if (tracks.length > 0) {\r\n            for (var i = 0; i < tracks.length; i++) {\r\n                playerData.tracks.push(tracks[i]);\r\n            }\r\n        }\r\n    };\r\n    playerData.currentPlaylist.isSet = function () {\r\n        return (playerData.currentPlaylist.id ? true : false);\r\n    };\r\n    playerData.currentPlaylist.set = function (id, name) {\r\n        playerData.currentPlaylist.id = id;\r\n        playerData.currentPlaylist.name = name;\r\n    };\r\n    playerData.currentPlaylist.unset = function () {\r\n        playerData.currentPlaylist.id = null;\r\n        playerData.currentPlaylist.name = null;\r\n    };\r\n    playerData.currentPlaylist.empty = function () {\r\n        playerData.isPaused = false;\r\n        playerData.isPlaying = false;\r\n        playerData.currentTrack.unset();\r\n        playerData.tracks = [];\r\n    };\r\n    playerData.currentPlaylist.loadRandomTracks = function (count, callback) {\r\n        playerData.playback.stop();\r\n        playerData.tracks = [];\r\n        playerData.loading = true;\r\n        playerData.currentTrack.unset();\r\n        _api_js__WEBPACK_IMPORTED_MODULE_0___default().track.searchTracks(\"\", \"\", \"\", false, 1, count, \"random\").then(response => {\r\n            if (response.data.tracks && response.data.tracks.length > 0) {\r\n                playerData.tracks = response.data.tracks;\r\n            }\r\n            playerData.loading = false;\r\n            playerData.playback.play();\r\n            if (callback && typeof callback === \"function\") {\r\n                callback();\r\n            }\r\n        }).catch(error => {\r\n            playerData.loading = false;\r\n            if (callback && typeof callback === \"function\") {\r\n                callback();\r\n            }\r\n        });\r\n    };\r\n    playerData.currentPlaylist.playAtIdx = function (idx) {\r\n        if (playerData.tracks.length > 0 && idx < playerData.tracks.length) {\r\n            playerData.currentTrack.index = idx;\r\n            playerData.currentTrack.track = playerData.tracks[playerData.currentTrack.index];\r\n            playerData.isPlaying = true;\r\n            playerData.isPaused = false;\r\n            playerData.isStopped = false;\r\n        }\r\n    };\r\n    playerData.currentPlaylist.shuffle = function () {\r\n        shuffle(playerData.tracks);\r\n        playerData.currentPlaylist.playAtIdx(0);\r\n    };\r\n    playerData.currentPlaylist.moveItemUp = function (idx) {\r\n        if (playerData.tracks.length > 0 && idx > 0) {\r\n            var tmpTrack = playerData.tracks[idx - 1];\r\n            playerData.tracks.splice(idx - 1, 1);\r\n            playerData.tracks.splice(idx, 0, tmpTrack);\r\n        }\r\n    };\r\n    playerData.currentPlaylist.moveItemDown = function (idx) {\r\n        if (playerData.tracks.length > 0 && idx < playerData.tracks.length - 1) {\r\n            var tmpTrack = playerData.tracks[idx];\r\n            playerData.tracks.splice(idx, 1);\r\n            playerData.tracks.splice(idx + 1, 0, tmpTrack);\r\n        }\r\n    };\r\n    playerData.currentPlaylist.removeItem = function (idx) {\r\n        if (playerData.tracks.length > 0 && idx < playerData.tracks.length) {\r\n            if (idx == playerData.currentTrack.index && (playerData.isPlaying || playerData.isPaused)) {\r\n                playerData.currentPlaylist.playNext();\r\n            }\r\n            playerData.tracks.splice(idx, 1);\r\n        }\r\n    };\r\n    playerData.currentPlaylist.playPrevious = function () {\r\n        if (playerData.currentTrack.index > 0) {\r\n            playerData.currentTrack.index--;\r\n            playerData.currentTrack.track = playerData.tracks[playerData.currentTrack.index];\r\n            if (playerData.isPaused) {\r\n                playerData.isPaused = false;\r\n                playerData.isPlaying = true;\r\n            }\r\n        }\r\n    };\r\n    playerData.currentPlaylist.playNext = function () {\r\n        if (playerData.tracks.length > 0) {\r\n            if (playerData.repeatTracksMode != \"track\") {\r\n                if (playerData.currentTrack.index < playerData.tracks.length - 1) {\r\n                    playerData.currentTrack.index++;\r\n                    playerData.currentTrack.track = playerData.tracks[playerData.currentTrack.index];\r\n                    if (playerData.isPaused) {\r\n                        playerData.isPaused = false;\r\n                        playerData.isPlaying = true;\r\n                    }\r\n                } else if (playerData.repeatTracksMode == \"all\") {\r\n                    playerData.currentTrack.index = 0;\r\n                    playerData.currentTrack.track = playerData.tracks[playerData.currentTrack.index];\r\n                    if (playerData.isPaused) {\r\n                        playerData.isPaused = false;\r\n                        playerData.isPlaying = true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    playerData.playback.play = function () {\r\n        if (playerData.tracks.length > 0) {\r\n            playerData.currentTrack.track = playerData.tracks[playerData.currentTrack.index];\r\n            playerData.isPlaying = true;\r\n            playerData.isPaused = false;\r\n            playerData.isStopped = false;\r\n        }\r\n    };\r\n    playerData.playback.stop = function () {\r\n        playerData.isPaused = false;\r\n        playerData.isPlaying = false;\r\n        playerData.isStopped = true;\r\n    };\r\n    playerData.playback.pause = function () {\r\n        if (playerData.isPlaying) {\r\n            playerData.isPaused = true;\r\n            playerData.isPlaying = false;\r\n            playerData.isStopped = false;\r\n        }\r\n    };\r\n    playerData.playback.resume = function () {\r\n        if (playerData.isPaused) {\r\n            playerData.isPaused = false;\r\n            playerData.isPlaying = true;\r\n            playerData.isStopped = false;\r\n        }\r\n    };\r\n    playerData.playback.toggleRepeatMode = function () {\r\n        switch (playerData.repeatTracksMode) {\r\n            case \"none\":\r\n                playerData.repeatTracksMode = \"track\";\r\n                break;\r\n            case \"track\":\r\n                playerData.repeatTracksMode = \"all\";\r\n                break;\r\n            default:\r\n                playerData.repeatTracksMode = \"none\";\r\n                break;\r\n        }\r\n    };\r\n\r\n    playerData.dispose = function () {\r\n        playerData.playback.stop();\r\n        playerData.currentPlaylist.unset();\r\n        playerData.currentPlaylist.empty();\r\n    };\r\n\r\n    return (playerData);\r\n});\r\n\r\nconst sharedPlayerData = getPlayerData();\r\n\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (sharedPlayerData);\n\n//# sourceURL=webpack://spieldose/./src-frontend/scripts/playerData.js?");

/***/ }),

/***/ "./src-frontend/scripts/plugins/api.js":
/*!*********************************************!*\
  !*** ./src-frontend/scripts/plugins/api.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\r\n    install: (app, options) => {\r\n        app.config.globalProperties.$api = {\r\n            session: {\r\n                signUp: (email, password) => {\r\n                    return new Promise((resolve, reject) => {\r\n                        var params = {\r\n                            email: email,\r\n                            password: password\r\n                        }\r\n                        app.config.globalProperties.$axios.post('api2/user/signup', params).then(response => {\r\n                            resolve(response);\r\n                        }).catch(error => {\r\n                            reject(error);\r\n                        });\r\n                    });\r\n                },\r\n                signIn: (email, password) => {\r\n                    return new Promise((resolve, reject) => {\r\n                        var params = {\r\n                            email: email,\r\n                            password: password\r\n                        }\r\n                        app.config.globalProperties.$axios.post('api2/user/signin', params).then(response => {\r\n                            resolve(response);\r\n                        }).catch(error => {\r\n                            reject(error);\r\n                        });\r\n                    });\r\n                },\r\n                signOut: () => {\r\n                    return new Promise((resolve, reject) => {\r\n                        app.config.globalProperties.$axios.get('api2/user/signout').then(response => {\r\n                            resolve(response);\r\n                        }).catch(error => {\r\n                            reject(error);\r\n                        });\r\n                    });\r\n                }\r\n            },\r\n            album: {\r\n                getRandomAlbumCoverThumbnails: () => {\r\n                    return new Promise((resolve, reject) => {\r\n                        app.config.globalProperties.$axios.get('api2/random_album_covers').then(response => {\r\n                            resolve(response);\r\n                        }).catch(error => {\r\n                            reject(error);\r\n                        });\r\n                    });\r\n                }\r\n            },\r\n            track: {\r\n                search: (query, artist, albumArtist, album) => {                    \r\n                    return new Promise((resolve, reject) => {\r\n                        app.config.globalProperties.$axios.get('/api2/track/search', { params: {\r\n                            q: query || null,\r\n                            artist: artist || null,\r\n                            albumArtist: albumArtist || null,\r\n                            album: album || null\r\n                        } }).then(response => {\r\n                            resolve(response);\r\n                        }).catch(error => {\r\n                            reject(error);\r\n                        });\r\n                    });\r\n                }                \r\n            }\r\n        };\r\n    }\r\n});\r\n\n\n//# sourceURL=webpack://spieldose/./src-frontend/scripts/plugins/api.js?");

/***/ }),

/***/ "./src-frontend/scripts/plugins/audio.js":
/*!***********************************************!*\
  !*** ./src-frontend/scripts/plugins/audio.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nlet audioInterface = {\r\n    element: null\r\n};\r\n\r\naudioInterface.getElement = () => {\r\n    if (!audioInterface.element) {\r\n        audioInterface.element = document.getElementById('audio');\r\n    }\r\n    return (audioInterface.element);\r\n}\r\naudioInterface.setVolume = (volume) => {\r\n    if (audioInterface) {\r\n        audioInterface.getElement().volume = volume;\r\n    }\r\n}\r\n\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\r\n    install: (app, options) => {\r\n        app.config.globalProperties.$audio = audioInterface;\r\n    }\r\n});\r\n\n\n//# sourceURL=webpack://spieldose/./src-frontend/scripts/plugins/audio.js?");

/***/ }),

/***/ "./src-frontend/scripts/plugins/axios.js":
/*!***********************************************!*\
  !*** ./src-frontend/scripts/plugins/axios.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! axios */ \"./node_modules/axios/index.js\");\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(axios__WEBPACK_IMPORTED_MODULE_0__);\n\r\n\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\r\n    install: (app, options) => {\r\n        let axiosInstance = axios__WEBPACK_IMPORTED_MODULE_0___default().create(options);\r\n        const jwt = app.config.globalProperties.$spieldoseLocalStorage.get('jwt');\r\n        axiosInstance.interceptors.request.use((config) => {            \r\n            if (jwt) {\r\n                config.headers[\"SPIELDOSE-JWT\"] = jwt;\r\n            }\r\n            return (config);\r\n        }, (error) => {\r\n            return Promise.reject(error);\r\n        });\r\n        axiosInstance.interceptors.response.use((response) => {\r\n            // warning: axios lowercase received header names\r\n            const apiResponseJWT = response.headers[\"spieldose-jwt\"] || null;\r\n            if (apiResponseJWT) {              \r\n                if (apiResponseJWT && apiResponseJWT != jwt) {\r\n                    app.config.globalProperties.$spieldoseLocalStorage.set(\"jwt\", apiResponseJWT);\r\n                }\r\n            }\r\n            return response;\r\n        }, (error) => {\r\n            // helper for checking invalid fields on api response\r\n            error.isFieldInvalid = function (fieldName) {\r\n                return (error.response.data.invalidOrMissingParams.indexOf(fieldName) > -1);\r\n            }\r\n            return Promise.reject(error);\r\n        });\r\n        app.config.globalProperties.$axios = axiosInstance;\r\n    }\r\n});\r\n\n\n//# sourceURL=webpack://spieldose/./src-frontend/scripts/plugins/axios.js?");

/***/ }),

/***/ "./src-frontend/scripts/plugins/bus.js":
/*!*********************************************!*\
  !*** ./src-frontend/scripts/plugins/bus.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var mitt__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mitt */ \"./node_modules/mitt/dist/mitt.mjs\");\n\r\n\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\r\n    install: (app, options) => {\r\n        app.config.globalProperties.$bus = (0,mitt__WEBPACK_IMPORTED_MODULE_0__[\"default\"])();\r\n    }\r\n});\r\n\n\n//# sourceURL=webpack://spieldose/./src-frontend/scripts/plugins/bus.js?");

/***/ }),

/***/ "./src-frontend/scripts/plugins/i18n.js":
/*!**********************************************!*\
  !*** ./src-frontend/scripts/plugins/i18n.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var vue_i18n__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! vue-i18n */ \"./node_modules/vue-i18n/dist/vue-i18n.esm-bundler.js\");\n/* harmony import */ var _locale_es_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../locale/es.js */ \"./src-frontend/scripts/locale/es.js\");\n/* harmony import */ var _locale_en_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../locale/en.js */ \"./src-frontend/scripts/locale/en.js\");\n/* harmony import */ var _locale_gl_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../locale/gl.js */ \"./src-frontend/scripts/locale/gl.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nlet messages = null;\r\nswitch (initialState.locale) {\r\n    case \"es\":\r\n        messages = _locale_es_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"];\r\n        break;\r\n    case \"gl\":\r\n        messages = _locale_gl_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"];\r\n        break;\r\n    default:\r\n        messages = _locale_en_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"];\r\n        break;\r\n}\r\n\r\n// create VueI18n instance with options\r\nconst i18n = (0,vue_i18n__WEBPACK_IMPORTED_MODULE_3__.createI18n)({\r\n    locale: initialState.locale, // set locale\r\n    messages // set locale messages\r\n});\r\n\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (i18n);\n\n//# sourceURL=webpack://spieldose/./src-frontend/scripts/plugins/i18n.js?");

/***/ }),

/***/ "./src-frontend/scripts/plugins/localStorage.js":
/*!******************************************************!*\
  !*** ./src-frontend/scripts/plugins/localStorage.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var Basil__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! Basil */ \"./node_modules/basil.js/build/basil.min.js\");\n/* harmony import */ var Basil__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(Basil__WEBPACK_IMPORTED_MODULE_0__);\n\r\n\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\r\n    install: (app, options) => {\r\n        app.config.globalProperties.$spieldoseLocalStorage = new (Basil__WEBPACK_IMPORTED_MODULE_0___default())(options);\r\n    }\r\n});\r\n\n\n//# sourceURL=webpack://spieldose/./src-frontend/scripts/plugins/localStorage.js?");

/***/ }),

/***/ "./src-frontend/scripts/plugins/router.js":
/*!************************************************!*\
  !*** ./src-frontend/scripts/plugins/router.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var vue_router__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! vue-router */ \"./node_modules/vue-router/dist/vue-router.mjs\");\n/* harmony import */ var _vue_components_upgrade_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../vue-components/upgrade.js */ \"./src-frontend/scripts/vue-components/upgrade.js\");\n/* harmony import */ var _pages_signin_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../pages/signin.js */ \"./src-frontend/scripts/pages/signin.js\");\n/* harmony import */ var _layouts_app_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../layouts/app.js */ \"./src-frontend/scripts/layouts/app.js\");\n/* harmony import */ var _vue_components_search_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../vue-components/search.js */ \"./src-frontend/scripts/vue-components/search.js\");\n/* harmony import */ var _vue_components_dashboard_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../vue-components/dashboard.js */ \"./src-frontend/scripts/vue-components/dashboard.js\");\n/* harmony import */ var _pages_currentPlaylist_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../pages/currentPlaylist.js */ \"./src-frontend/scripts/pages/currentPlaylist.js\");\n/* harmony import */ var _vue_components_browse_artists_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../vue-components/browse-artists.js */ \"./src-frontend/scripts/vue-components/browse-artists.js\");\n/* harmony import */ var _vue_components_browse_albums_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../vue-components/browse-albums.js */ \"./src-frontend/scripts/vue-components/browse-albums.js\");\n/* harmony import */ var _vue_components_browse_paths_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../vue-components/browse-paths.js */ \"./src-frontend/scripts/vue-components/browse-paths.js\");\n/* harmony import */ var _vue_components_browse_playlists_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../vue-components/browse-playlists.js */ \"./src-frontend/scripts/vue-components/browse-playlists.js\");\n/* harmony import */ var _vue_components_browse_radio_stations_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../vue-components/browse-radio-stations.js */ \"./src-frontend/scripts/vue-components/browse-radio-stations.js\");\n/* harmony import */ var _vue_components_browse_artist_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../vue-components/browse-artist.js */ \"./src-frontend/scripts/vue-components/browse-artist.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//import { default as nowPlaying } from '../vue-components/playlists.js';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * vue-router route definitions\r\n */\r\nconst routes = [\r\n    { path: '/upgrade', name: 'upgrade', component: _vue_components_upgrade_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"] },\r\n    { path: '/signin', name: 'signin', component: _pages_signin_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"] },\r\n    {\r\n        path: '/app',\r\n        component: _layouts_app_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"],\r\n        children: [\r\n            {\r\n                path: 'search',\r\n                name: 'search',\r\n                component: _vue_components_search_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"]\r\n            },\r\n            {\r\n                path: 'dashboard',\r\n                name: 'dashboard',\r\n                component: _vue_components_dashboard_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"]\r\n            },\r\n            {\r\n                path: 'now_playing',\r\n                name: 'nowPlaying',\r\n                component: _pages_currentPlaylist_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"]\r\n            },\r\n            {\r\n                path: 'artists',\r\n                name: 'artists',\r\n                component: _vue_components_browse_artists_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"],\r\n                children: [\r\n                    {\r\n                        path: 'page/:page',\r\n                        name: 'artistsPaged',\r\n                        component: _vue_components_browse_artists_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"]\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                path: 'albums',\r\n                name: 'albums',\r\n                component: _vue_components_browse_albums_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"],\r\n                children: [\r\n                    {\r\n                        path: 'page/:page',\r\n                        name: 'albumsPaged',\r\n                        component: _vue_components_browse_albums_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"]\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                path: 'paths',\r\n                name: 'paths',\r\n                component: _vue_components_browse_paths_js__WEBPACK_IMPORTED_MODULE_8__[\"default\"],\r\n                children: [\r\n                    {\r\n                        path: 'page/:page',\r\n                        name: 'pathsPaged',\r\n                        component: _vue_components_browse_paths_js__WEBPACK_IMPORTED_MODULE_8__[\"default\"]\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                path: 'playlists',\r\n                name: 'playlists',\r\n                component: _vue_components_browse_playlists_js__WEBPACK_IMPORTED_MODULE_9__[\"default\"],\r\n                children: [\r\n                    {\r\n                        path: 'page/:page',\r\n                        name: 'playlistsPaged',\r\n                        component: _vue_components_browse_playlists_js__WEBPACK_IMPORTED_MODULE_9__[\"default\"]\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                path: 'radio_stations',\r\n                name: 'radioStations',\r\n                component: _vue_components_browse_radio_stations_js__WEBPACK_IMPORTED_MODULE_10__[\"default\"],\r\n                children: [\r\n                    {\r\n                        path: 'page/:page',\r\n                        name: 'radioStationsPaged',\r\n                        component: _vue_components_browse_radio_stations_js__WEBPACK_IMPORTED_MODULE_10__[\"default\"]\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                path: 'artist/:artist',\r\n                name: 'artist',\r\n                component: _vue_components_browse_artist_js__WEBPACK_IMPORTED_MODULE_11__[\"default\"],\r\n                children: [\r\n                    {\r\n                        path: 'bio',\r\n                        name: 'artistBio',\r\n                        component: _vue_components_browse_artist_js__WEBPACK_IMPORTED_MODULE_11__[\"default\"]\r\n                    },\r\n                    {\r\n                        path: 'tracks',\r\n                        name: 'artistTracks',\r\n                        component: _vue_components_browse_artist_js__WEBPACK_IMPORTED_MODULE_11__[\"default\"],\r\n                        children: [\r\n                            {\r\n                                path: 'page/:page',\r\n                                name: 'artistTracksPaged',\r\n                                component: _vue_components_browse_artist_js__WEBPACK_IMPORTED_MODULE_11__[\"default\"]\r\n                            }\r\n                        ]\r\n                    },\r\n                    {\r\n                        path: 'albums',\r\n                        name: 'artistAlbums',\r\n                        component: _vue_components_browse_artist_js__WEBPACK_IMPORTED_MODULE_11__[\"default\"]\r\n                    },\r\n                    {\r\n                        path: 'update',\r\n                        name: 'artistUpdate',\r\n                        component: _vue_components_browse_artist_js__WEBPACK_IMPORTED_MODULE_11__[\"default\"]\r\n                    }\r\n                ]\r\n            }]\r\n    }\r\n];\r\n\r\n/**\r\n * main vue-router component inicialization\r\n */\r\nconst router = (0,vue_router__WEBPACK_IMPORTED_MODULE_12__.createRouter)({\r\n    history: (0,vue_router__WEBPACK_IMPORTED_MODULE_12__.createWebHashHistory)(),\r\n    routes\r\n});\r\n\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (router);\r\n\n\n//# sourceURL=webpack://spieldose/./src-frontend/scripts/plugins/router.js?");

/***/ }),

/***/ "./src-frontend/scripts/validator.js":
/*!*******************************************!*\
  !*** ./src-frontend/scripts/validator.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nlet module = {\r\n    invalidFields: []\r\n};\r\n\r\nmodule.clear = function () {\r\n    module.invalidFields = [];\r\n}\r\n\r\nmodule.setInvalid = function (field, message) {\r\n    module.invalidFields.push({ field: field, message: message });\r\n}\r\n\r\nmodule.hasInvalidFields = function () {\r\n    return (module.invalidFields.length > 0);\r\n}\r\n\r\nmodule.hasInvalidField = function (field) {\r\n    return (module.invalidFields.findIndex(e => e.field == field) > -1);\r\n}\r\n\r\nmodule.getInvalidFieldMessage = function (field) {\r\n    let idx = module.invalidFields.findIndex(e => e.field == field);\r\n    if (idx > -1) {\r\n        return (module.invalidFields[idx].message);\r\n    } else {\r\n        return (null);\r\n    }\r\n}\r\n\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (module);\r\n\n\n//# sourceURL=webpack://spieldose/./src-frontend/scripts/validator.js?");

/***/ }),

/***/ "./src-frontend/scripts/vue-components/api-error.js":
/*!**********************************************************!*\
  !*** ./src-frontend/scripts/vue-components/api-error.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nconst template = function () {\r\n    return `\r\n        <article class=\"message is-danger\">\r\n            <div class=\"message-header\">\r\n                <p><i class=\"fas fa-bomb\" aria-hidden=\"true\"></i> Error</p>\r\n            </div>\r\n            <div class=\"message-body\">\r\n                <div class=\"content\">\r\n                    <h1 class=\"has-text-centered\">“I'm sorry Dave. I'm afraid I can't do that”</h1>\r\n                    <h2 v-if=\"serverReturnError\">Uh oh! ...the server sent a <strong>invalid response</strong> ({{ apiError.response.status }} - {{ apiError.response.statusText }})</h2>\r\n                    <h2 v-else>Uh oh! ...can't connect, server unreachable</h2>\r\n                    <p v-show=\"! visibleDetails\"><a v-on:click.prevent=\"toggleDetails();\">Follow</a> for  the rabbit.</p>\r\n                    <div v-show=\"visibleDetails\">\r\n                        <hr>\r\n                        <div class=\"tabs is-medium is-toggle\">\r\n                            <ul>\r\n                                <li class=\"is-marginless\" v-bind:class=\"{ 'is-active' : isTabActive('request') }\">\r\n                                    <a class=\"no-text-decoration\" v-on:click.prevent=\"changeTab('request');\">\r\n                                        <span class=\"icon is-small\"><i class=\"fas fa-upload\"></i></span>\r\n                                        <span>Request</span>\r\n                                    </a>\r\n                                </li>\r\n                                <li class=\"is-marginless\" v-bind:class=\"{ 'is-active' : isTabActive('response') }\">\r\n                                    <a class=\"no-text-decoration\" v-on:click.prevent=\"changeTab('response');\">\r\n                                        <span class=\"icon is-small\"><i class=\"fas fa-download\"></i></span>\r\n                                        <span>Response</span>\r\n                                    </a>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                        <div class=\"panel\" v-show=\"isTabActive('request')\">\r\n                            <h2>Api request method & url:</h2>\r\n                            <pre>{{ apiError.request.method }} {{ apiError.request.url }}</pre>\r\n                            <div class=\"tabs is-small is-toggle\">\r\n                                <ul>\r\n                                    <li class=\"is-marginless\" v-bind:class=\"{ 'is-active' : isRequestTabActive('body') }\">\r\n                                        <a class=\"no-text-decoration\" v-on:click.prevent=\"changeRequestTab('body');\">\r\n                                            <span class=\"icon is-small\"><i class=\"fas fa-database\"></i></span>\r\n                                            <span>Body</span>\r\n                                        </a>\r\n                                    </li>\r\n                                    <li class=\"is-marginless\" v-bind:class=\"{ 'is-active' : isRequestTabActive('headers') }\">\r\n                                        <a class=\"no-text-decoration\" v-on:click.prevent=\"changeRequestTab('headers');\">\r\n                                            <span class=\"icon is-small\"><i class=\"fas fa-list\"></i></span>\r\n                                            <span>Headers</span>\r\n                                        </a>\r\n                                    </li>\r\n                                </ul>\r\n                            </div>\r\n                            <div v-show=\"isRequestTabActive('body')\">\r\n                                <h2>Api request body:</h2>\r\n                                <pre>{{ apiError.request.body }}</pre>\r\n                            </div>\r\n                            <div v-show=\"isRequestTabActive('headers')\">\r\n                                <h2>Api request headers:</h2>\r\n                                <pre>{{ apiError.request.headers }}</pre>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"panel\" v-show=\"isTabActive('response')\">\r\n                            <div class=\"tabs is-small is-toggle\">\r\n                                <ul>\r\n                                    <li class=\"is-marginless\" v-bind:class=\"{ 'is-active' : isResponseTabActive('text') }\">\r\n                                        <a class=\"no-text-decoration\" v-on:click.prevent=\"changeResponseTab('text');\">\r\n                                            <span class=\"icon is-small\"><i class=\"fas fa-file-text-o\"></i></span>\r\n                                            <span>Body</span>\r\n                                        </a>\r\n                                    </li>\r\n                                    <li class=\"is-marginless\" v-bind:class=\"{ 'is-active' : isResponseTabActive('headers') }\">\r\n                                        <a class=\"no-text-decoration\" v-on:click.prevent=\"changeResponseTab('headers');\">\r\n                                            <span class=\"icon is-small\"><i class=\"fas fa-list\"></i></span>\r\n                                            <span>Headers</span>\r\n                                        </a>\r\n                                    </li>\r\n                                </ul>\r\n                            </div>\r\n                            <div v-show=\"isResponseTabActive('text')\">\r\n                                <h2>Api response text:</h2>\r\n                                <pre>{{ apiError.response.text }}</pre>\r\n                            </div>\r\n                            <div v-show=\"isResponseTabActive('headers')\">\r\n                                <h2>Api response headers:</h2>\r\n                                <pre>{{ apiError.response.headers }}</pre>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </article>\r\n    `;\r\n};\r\n\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\r\n    name: 'spieldose-api-error-component',\r\n    template: template(),\r\n    data: function () {\r\n        return ({\r\n            visibleDetails: false,\r\n            activeTab: 'request',\r\n            activeRequestTab: 'body',\r\n            activeResponseTab: 'text'\r\n        });\r\n    },\r\n    props: [\r\n        'apiError'\r\n    ],\r\n    computed: {\r\n        serverReturnError: function () {\r\n            return (this.apiError.response.status != 0);\r\n        }\r\n    },\r\n    methods: {\r\n        toggleDetails() {\r\n            this.visibleDetails = !this.visibleDetails;\r\n        },\r\n        changeTab(tab) {\r\n            if (tab && tab != this.activeTab) {\r\n                this.activeTab = tab;\r\n            }\r\n        },\r\n        changeRequestTab(tab) {\r\n            if (tab && tab != this.activeRequestTab) {\r\n                this.activeRequestTab = tab;\r\n            }\r\n        },\r\n        changeResponseTab(tab) {\r\n            if (tab && tab != this.activeResponseTab) {\r\n                this.activeResponseTab = tab;\r\n            }\r\n        },\r\n        isTabActive(tab) {\r\n            return (this.activeTab == tab);\r\n        },\r\n        isRequestTabActive: function (tab) {\r\n            return (this.activeRequestTab == tab);\r\n        },\r\n        isResponseTabActive: function (tab) {\r\n            return (this.activeResponseTab == tab);\r\n        }\r\n    }\r\n});\n\n//# sourceURL=webpack://spieldose/./src-frontend/scripts/vue-components/api-error.js?");

/***/ }),

/***/ "./src-frontend/scripts/vue-components/browse-albums.js":
/*!**************************************************************!*\
  !*** ./src-frontend/scripts/vue-components/browse-albums.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../api.js */ \"./src-frontend/scripts/api.js\");\n/* harmony import */ var _api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_api_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _mixins_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../mixins.js */ \"./src-frontend/scripts/mixins.js\");\n/* harmony import */ var _input_typeahead_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./input-typeahead.js */ \"./src-frontend/scripts/vue-components/input-typeahead.js\");\n/* harmony import */ var _pagination__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./pagination */ \"./src-frontend/scripts/vue-components/pagination.js\");\n/* harmony import */ var _api_error_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./api-error.js */ \"./src-frontend/scripts/vue-components/api-error.js\");\n\r\n\r\n\r\n\r\n\r\n\r\nconst template = function () {\r\n    return `\r\n        <div class=\"container is-fluid box is-marginless\">\r\n        <p class=\"title is-1 has-text-centered\">{{ $t(\"browseAlbums.labels.sectionName\") }}</p>\r\n            <div v-if=\"! hasAPIErrors\">\r\n                <div class=\"field has-addons\">\r\n                    <div class=\"control is-expanded has-icons-left\" v-bind:class=\"{ 'is-loading': loading }\">\r\n                        <spieldose-input-typeahead v-if=\"liveSearch\" v-bind:loading=\"loading\" v-bind:placeholder=\"$t('browseAlbums.inputs.albumNamePlaceholder')\" v-on:on-value-change=\"onTypeahead\"></spieldose-input-typeahead>\r\n                        <input type=\"text\" class=\"input\" v-bind:placeholder=\"$t('browseAlbums.inputs.albumNamePlaceholder')\" v-else v-bind:disabled=\"loading\" v-model.trim=\"nameFilter\" v-on:keyup.enter=\"search();\">\r\n                        <span class=\"icon is-small is-left\">\r\n                            <i class=\"fas fa-search\"></i>\r\n                        </span>\r\n                    </div>\r\n                    <p class=\"control\">\r\n                        <a class=\"button is-default\" v-on:click.prevent=\"advancedSearch = ! advancedSearch;\">\r\n                            <span class=\"icon\">\r\n                                <i v-if=\"advancedSearch\" class=\"fas fa-search-minus\" aria-hidden=\"true\"></i>\r\n                                <i v-else=\"advancedSearch\" class=\"fas fa-search-plus\" aria-hidden=\"true\"></i>\r\n                            </span>\r\n                            <span>{{ $t(\"browseAlbums.buttons.toggleAdvancedSearch\") }}</span>\r\n                        </a>\r\n                    </p>\r\n                    <p class=\"control\" v-if=\"! liveSearch\">\r\n                        <a class=\"button is-info\" v-on:click.prevent=\"search();\">\r\n                            <span class=\"icon\">\r\n                                <i class=\"fas fa-search\" aria-hidden=\"true\"></i>\r\n                            </span>\r\n                            <span>{{ $t(\"browseAlbums.buttons.search\") }}</span>\r\n                        </a>\r\n                    </p>\r\n                </div>\r\n                <div class=\"field has-addons\" v-if=\"advancedSearch\">\r\n                    <p class=\"control has-icons-left\">\r\n                        <input class=\"input\" type=\"text\" pattern=\"[0-9]*\" v-bind:placeholder=\"$t('browseAlbums.inputs.yearPlaceholder')\" maxlength=\"4\" v-bind:disabled=\"loading\" v-on:keyup.enter=\"search(true);\" v-model.number=\"filterByYear\" >\r\n                        <span class=\"icon is-small is-left\">\r\n                            <i class=\"fas fa-calendar\"></i>\r\n                        </span>\r\n                    </p>\r\n                    <p class=\"control is-expanded has-icons-left\">\r\n                        <input class=\"input\" type=\"text\" v-bind:placeholder=\"$t('browseAlbums.inputs.artistNamePlaceholder')\" v-bind:disabled=\"loading\" v-on:keyup.enter=\"search(true);\" v-model.trim=\"filterByArtist\">\r\n                        <span class=\"icon is-small is-left\">\r\n                            <i class=\"fas fa-user\"></i>\r\n                        </span>\r\n                    </p>\r\n                    <p class=\"control\">\r\n                        <a class=\"button is-info\" v-on:click=\"search(true);\">\r\n                            <span class=\"icon\">\r\n                                <i class=\"fas fa-search\" aria-hidden=\"true\"></i>\r\n                            </span>\r\n                            <span>{{ $t(\"browseAlbums.buttons.search\") }}</span>\r\n                        </a>\r\n                    </p>\r\n                </div>\r\n                <spieldose-pagination v-bind:loading=\"loading\" v-bind:data=\"pager\" v-on:pagination-changed=\"onPaginationChanged\"></spieldose-pagination>\r\n                <div class=\"browse-album-item\" v-for=\"album in albums\" v-show=\"! loading\">\r\n                    <a class=\"play-album\" v-bind:title=\"$t('commonLabels.playThisAlbum')\" v-on:click.prevent=\"playAlbumTracks(album.name, album.artist, album.year);\">\r\n                        <img class=\"album-thumbnail\" v-bind:src=\"getAlbumImageUrl(album.image)\" v-on:error=\"album.image = null;\">\r\n                        <i class=\"fas fa-play fa-4x\"></i>\r\n                        <img class=\"vinyl no-cover\" src=\"images/vinyl.png\" />\r\n                    </a>\r\n                    <div class=\"album-info\">\r\n                        <p class=\"album-name\">{{ album.name }}</p>\r\n                        <p v-if=\"album.artist\" class=\"artist-name\">{{ $t(\"commonLabels.by\") }} <a v-bind:title=\"$t('commonLabels.navigateToArtistPage')\" v-on:click.prevent=\"navigateToArtistPage(album.artist);\">{{ album.artist }}</a><span v-show=\"album.year\"> ({{ album.year }})</span></p>\r\n                        <p v-else class=\"artist-name\">{{ $t(\"commonLabels.by\") }} {{ $t(\"browseAlbums.labels.unknownArtist\") }} <span v-show=\"album.year\"> ({{ album.year }})</span></p>\r\n                    </div>\r\n                </div>\r\n                <div class=\"is-clearfix\"></div>\r\n            </div>\r\n            <spieldose-api-error-component v-else v-bind:apiError=\"apiError\"></spieldose-api-error-component>\r\n        </div>\r\n    `;\r\n};\r\n\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\r\n    name: 'spieldose-browse-albums',\r\n    template: template(),\r\n    mixins: [\r\n        _mixins_js__WEBPACK_IMPORTED_MODULE_1__.mixinAPIError, _mixins_js__WEBPACK_IMPORTED_MODULE_1__.mixinPagination, _mixins_js__WEBPACK_IMPORTED_MODULE_1__.mixinLiveSearches, _mixins_js__WEBPACK_IMPORTED_MODULE_1__.mixinNavigation, _mixins_js__WEBPACK_IMPORTED_MODULE_1__.mixinAlbums, _mixins_js__WEBPACK_IMPORTED_MODULE_1__.mixinArtists\r\n    ],\r\n    data: function () {\r\n        return ({\r\n            loading: false,\r\n            nameFilter: null,\r\n            albums: [],\r\n            advancedSearch: false,\r\n            filterByArtist: null,\r\n            filterByYear: null\r\n        });\r\n    },\r\n    components: {\r\n        'spieldose-input-typeahead': _input_typeahead_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"],\r\n        'spieldose-pagination': _pagination__WEBPACK_IMPORTED_MODULE_3__[\"default\"],\r\n        'spieldose-api-error-component': _api_error_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"]\r\n    },\r\n    methods: {\r\n        onPaginationChanged: function (currentPage) {\r\n            this.$router.push({ name: 'albumsPaged', params: { page: currentPage } });\r\n        },\r\n        onTypeahead: function (text) {\r\n            this.nameFilter = text;\r\n            this.search();\r\n        },\r\n        search: function (resetPager) {\r\n            this.loading = true;\r\n            this.clearAPIErrors();\r\n            if (resetPager) {\r\n                this.pager.actualPage = 1;\r\n            }\r\n            _api_js__WEBPACK_IMPORTED_MODULE_0___default().album.search(this.nameFilter, this.filterByArtist, this.filterByYear, this.pager.actualPage, this.pager.resultsPage).then(response => {\r\n                this.pager.actualPage = response.data.pagination.actualPage;\r\n                this.pager.totalPages = response.data.pagination.totalPages;\r\n                this.pager.totalResults = response.data.pagination.totalResults;\r\n                if (response.data.albums && response.data.albums.length > 0) {\r\n                    this.albums = response.data.albums;\r\n                } else {\r\n                    this.albums = [];\r\n                }\r\n                this.loading = false;\r\n            }).catch(error => {\r\n                this.setAPIError(error.getApiErrorData());\r\n                this.loading = false;\r\n            });\r\n        }\r\n    }\r\n});\n\n//# sourceURL=webpack://spieldose/./src-frontend/scripts/vue-components/browse-albums.js?");

/***/ }),

/***/ "./src-frontend/scripts/vue-components/browse-artist.js":
/*!**************************************************************!*\
  !*** ./src-frontend/scripts/vue-components/browse-artist.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../api.js */ \"./src-frontend/scripts/api.js\");\n/* harmony import */ var _api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_api_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _mixins_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../mixins.js */ \"./src-frontend/scripts/mixins.js\");\n\r\n\r\n\r\nconst template = function () {\r\n    return `\r\n        <div class=\"container is-fluid box is-marginless\">\r\n            <p v-if=\"loading\" class=\"title is-1 has-text-centered\">Loading <i v-if=\"loading\" class=\"fas fa-cog fa-spin fa-fw\"></i></p>\r\n            <p v-else=\"! loading\" class=\"title is-1 has-text-centered\">{{ $t(\"browseArtist.labels.sectionName\") }}</p>\r\n            <div class=\"media\" v-if=\"! hasAPIErrors && ! loading\">\r\n                <figure class=\"image media-left\">\r\n                    <img class=\"artist_avatar\" v-bind:src=\"getArtistImageUrl(artist.image)\" v-on:error=\"artist.image = null;\">\r\n                </figure>\r\n                <div class=\"media-content is-light\">\r\n                    <p class=\"title is-1\">{{ artist.name }}</p>\r\n                    <p class=\"subtitle is-6\" v-if=\"artist.playCount > 0\">{{ artist.playCount }} {{ $t(\"browseArtist.labels.plays\") }}</p>\r\n                    <p class=\"subtitle is-6\" v-else>{{ $t(\"browseArtist.labels.notPlayedYet\") }}</p>\r\n                    <div class=\"tabs is-medium\">\r\n                        <ul>\r\n                            <li v-bind:class=\"{ 'is-active' : activeTab == 'overview' }\"><a v-on:click.prevent=\"$router.push({ name: 'artist', params: { 'artist': $route.params.artist } })\">{{ $t(\"browseArtist.tabs.overview\") }}</a></li>\r\n                            <li v-bind:class=\"{ 'is-active' : activeTab == 'bio' }\"><a v-on:click.prevent=\"$router.push({ name: 'artistBio' })\">{{ $t(\"browseArtist.tabs.bio\") }}</a></li>\r\n                            <li v-bind:class=\"{ 'is-active' : activeTab == 'tracks' }\"><a v-on:click.prevent=\"$router.push({ name: 'artistTracks' })\">{{ $t(\"browseArtist.tabs.tracks\") }}</a></li>\r\n                            <li v-bind:class=\"{ 'is-active' : activeTab == 'albums' }\"><a v-on:click.prevent=\"$router.push({ name: 'artistAlbums' })\">{{ $t(\"browseArtist.tabs.albums\") }}</a></li>\r\n                            <li v-bind:class=\"{ 'is-active' : activeTab == 'update' }\"><a v-on:click.prevent=\"$router.push({ name: 'artistUpdate' })\">{{ $t(\"browseArtist.tabs.updateArtist\") }}</a></li>\r\n                        </ul>\r\n                    </div>\r\n                    <div class=\"panel\" v-if=\"activeTab == 'overview'\">\r\n                        <div class=\"content is-clearfix\" id=\"bio\" v-if=\"artist.bio\" v-html=\"truncatedBio\"></div>\r\n                        <div class=\"content is-clearfix\" id=\"bio\" v-else>Artist biography not found / not scraped</div>\r\n                        <div class=\"columns\">\r\n                            <div class=\"column is-half is-full-mobile\">\r\n                                <spieldose-dashboard-toplist v-if=\"activeTab == 'overview' && artist.name\" v-bind:type=\"'topTracks'\" v-bind:title=\"$t('dashboard.labels.topPlayedTracks')\" v-bind:listItemCount=\"10\" v-bind:showPlayCount=\"true\" :key=\"$route.params.artist\" v-bind:artist=\"$route.params.artist\"></spieldose-dashboard-toplist>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"panel\" v-if=\"activeTab == 'bio'\">\r\n                        <div class=\"content is-clearfix\" id=\"bio\" v-html=\"artist.bio\"></div>\r\n                    </div>\r\n                    <div class=\"panel\" v-if=\"activeTab == 'tracks'\">\r\n                        <div class=\"field has-addons\">\r\n                            <div class=\"control is-expanded has-icons-left\" v-bind:class=\"loadingTracks ? 'is-loading': ''\">\r\n                                <input class=\"input\" :disabled=\"loadingTracks\" v-if=\"liveSearch\" v-model.trim=\"nameFilter\" type=\"text\" placeholder=\"search by text...\" v-on:keyup.esc=\"abortInstantSearch();\" v-on:keyup=\"instantSearch();\">\r\n                                <input class=\"input\" :disabled=\"loadingTracks\" v-else v-model.trim=\"nameFilter\" type=\"text\" placeholder=\"search by text...\" v-on:keyup.enter=\"searchTracks();\">\r\n                                <span class=\"icon is-small is-left\">\r\n                                    <i class=\"fas fa-search\"></i>\r\n                                </span>\r\n                            </div>\r\n                            <p class=\"control\" v-if=\"! liveSearch\">\r\n                                <a class=\"button is-info\" v-on:click.prevent=\"searchTracks();\">\r\n                                    <span class=\"icon\">\r\n                                        <i class=\"fas fa-search\" aria-hidden=\"true\"></i>\r\n                                    </span>\r\n                                    <span>{{ $t(\"browseArtist.buttons.search\") }}</span>\r\n                                </a>\r\n                            </p>\r\n                        </div>\r\n                        <spieldose-pagination v-bind:loading=\"loadingTracks\" v-bind:data=\"pager\" v-on:pagination-changed=\"onPaginationChanged\"></spieldose-pagination>\r\n                        <table class=\"table is-bordered is-striped is-narrow is-fullwidth\">\r\n                            <thead>\r\n                                    <tr class=\"is-unselectable\">\r\n                                        <th>{{ $t(\"browseArtist.labels.tracksAlbumTableHeader\") }}</th>\r\n                                        <th>{{ $t(\"browseArtist.labels.tracksSectionYearTableHeader\") }}</th>\r\n                                        <th>{{ $t(\"browseArtist.labels.tracksSectionNumberTableHeader\") }}</th>\r\n                                        <th>{{ $t(\"browseArtist.labels.tracksSectionTitleTableHeader\") }}</th>\r\n                                        <th>{{ $t(\"browseArtist.labels.tracksSectionActionTableHeader\") }}</th>\r\n                                    </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                <tr v-for=\"track, i in tracks\">\r\n                                    <td><span>{{ track.album }}</span></td>\r\n                                    <td><span>{{ track.year }}</span></td>\r\n                                    <td>{{ track.number }}</td>\r\n                                    <td>\r\n                                        <span> {{ track.title}}</span>\r\n                                    </td>\r\n                                    <td>\r\n                                        <i class=\"cursor-pointer fa-fw fa fa-play\" v-bind:title=\"$t('commonLabels.playThisTrack')\" v-on:click.prevent=\"$audioplayer.currentPlaylist.replace([track]);\"></i>\r\n                                        <i class=\"cursor-pointer fa-fw fa fa-plus-square\"  v-bind:title=\"$t('commonLabels.enqueueThisTrack')\" v-on:click.prevent=\"$audioplayer.currentPlaylist.enqueue([track]);\"></i>\r\n                                        <i class=\"cursor-pointer fa-fw fa fa-save\"  v-bind:title=\"$t('commonLabels.downloadThisTrack')\" v-on:click.prevent=\"$audioplayer.download(track.id);\"></i>\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                    <div class=\"panel\" v-if=\"activeTab == 'albums'\">\r\n                        <div class=\"browse-album-item\" v-show=\"! loading\" v-for=\"album, i in artist.albums\" v-bind:key=\"i\">\r\n                        <a class=\"play-album\" v-bind:title=\"$t('commonLabels.playThisAlbum')\" v-on:click.prevent=\"playAlbumTracks(album.name, album.artist, album.year);\">\r\n                                <img class=\"album-thumbnail\" v-bind:src=\"getAlbumImageUrl(album.image)\" v-on:error=\"album.image = null;\">\r\n                                <i class=\"fas fa-play fa-4x\"></i>\r\n                                <img class=\"vinyl no-cover\" src=\"images/vinyl.png\" />\r\n                            </a>\r\n                            <div class=\"album-info\">\r\n                                <p class=\"album-name\">{{ album.name }}</p>\r\n                                <p class=\"album-year\" v-show=\"album.year\">({{ album.year }})</p>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"is-clearfix\"></div>\r\n                    </div>\r\n                    <div class=\"panel\" v-if=\"activeTab == 'update'\">\r\n                        <div class=\"panel-block\">\r\n                            <div class=\"content is-clearfix\">\r\n                                <div class=\"field is-horizontal has-addons\">\r\n                                    <div class=\"field-label is-normal\">\r\n                                        <label class=\"label\">{{ $t(\"browseArtist.labels.musicBrainzSearchArtistName\") }}</label>\r\n                                    </div>\r\n                                    <div class=\"field-body\">\r\n                                        <div class=\"field is-expanded has-addons\">\r\n                                            <div class=\"control has-icons-left is-expanded\" v-bind:class=\"loading ? 'is-loading': ''\">\r\n                                                <input class=\"input\" :disabled=\"loading\" v-model.trim=\"artist.name\" type=\"text\" v-bind:placeholder=\"$t('browseArtist.labels.musicBrainzSearchArtistNamePlaceholder')\">\r\n                                                <span class=\"icon is-small is-left\">\r\n                                                    <i class=\"fas fa-search\"></i>\r\n                                                </span>\r\n                                            </div>\r\n                                            <div class=\"control\">\r\n                                                <a class=\"button is-info\" v-on:click.prevent=\"searchMusicBrainz();\">{{ $t(\"browseArtist.buttons.searchOnMusicBrainz\") }}</a>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"field is-horizontal has-addons\">\r\n                                    <div class=\"field-label is-normal\">\r\n                                        <label class=\"label\">{{ $t(\"browseArtist.labels.musicBrainzSearchArtistMBId\") }}</label>\r\n                                    </div>\r\n                                    <div class=\"field-body\">\r\n                                        <div class=\"field is-expanded has-addons\">\r\n                                            <div class=\"control has-icons-left is-expanded\" v-bind:class=\"loading ? 'is-loading': ''\">\r\n                                                <input class=\"input\" :disabled=\"loading\" v-model.trim=\"artist.mbid\" type=\"text\" v-bind:placeholder=\"$t('browseArtist.labels.musicBrainzSearchArtistMBIdPlaceholder')\">\r\n                                                <span class=\"icon is-small is-left\">\r\n                                                    <i class=\"fas fa-search\"></i>\r\n                                                </span>\r\n                                            </div>\r\n                                            <div class=\"control\">\r\n                                                <a class=\"button is-info\" :disabled=\"! (artist.name && artist.mbid)\" v-on:click.prevent=\"overwriteMusicBrainzArtist(artist.name, artist.mbid);\">{{ $t(\"browseArtist.buttons.save\") }}</a>\r\n                                            </div>\r\n                                            <div class=\"control\">\r\n                                                <a class=\"button is-danger\" v-on:click.prevent=\"clearMusicBrainzArtist(artist.name, artist.mbid);\">{{ $t(\"browseArtist.buttons.clear\") }}</a>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <spieldose-api-error-component v-if=\"hasAPIErrors\" v-bind:apiError=\"apiError\"></spieldose-api-error-component>\r\n        </div>\r\n    `;\r\n};\r\n\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\r\n    name: 'spieldose-browse-artist',\r\n    template: template(),\r\n    mixins: [\r\n        _mixins_js__WEBPACK_IMPORTED_MODULE_1__.mixinAPIError, _mixins_js__WEBPACK_IMPORTED_MODULE_1__.mixinPagination, _mixins_js__WEBPACK_IMPORTED_MODULE_1__.mixinLiveSearches, _mixins_js__WEBPACK_IMPORTED_MODULE_1__.mixinArtists, _mixins_js__WEBPACK_IMPORTED_MODULE_1__.mixinAlbums\r\n    ],\r\n    data: function () {\r\n        return ({\r\n            loading: false,\r\n            loadingTracks: false,\r\n            artist: {},\r\n            activeTab: 'overview',\r\n            truncatedBio: null,\r\n            detailedView: false,\r\n            tracks: [],\r\n            nameFilter: null,\r\n            timeout: null,\r\n            updateArtistName: null,\r\n            updateArtistMBId: null\r\n        });\r\n    },\r\n    watch: {\r\n        '$route'(to, from) {\r\n            switch (to.name) {\r\n                case 'artistBio':\r\n                    this.getArtist(to.params.artist);\r\n                    this.activeTab = 'bio';\r\n                    break;\r\n                case 'artistTracks':\r\n                case 'artistTracksPaged':\r\n                    this.pager.actualPage = parseInt(to.params.page);\r\n                    this.searchArtistTracks(to.params.artist);\r\n                    this.activeTab = 'tracks';\r\n                    break;\r\n                case 'artistAlbums':\r\n                    this.getArtist(to.params.artist);\r\n                    this.activeTab = 'albums';\r\n                    break;\r\n                case 'artist':\r\n                    this.getArtist(to.params.artist);\r\n                    this.activeTab = 'overview';\r\n                    break;\r\n                case 'artistUpdate':\r\n                    this.getArtist(to.params.artist);\r\n                    this.activeTab = 'update';\r\n                    break;\r\n            }\r\n        }\r\n    },\r\n    created: function () {\r\n        this.getArtist(this.$route.params.artist);\r\n        if (this.$route.name == 'artistTracks' || this.$route.name == 'artistTracksPaged') {\r\n            if (this.$route.params.page) {\r\n                this.pager.actualPage = parseInt(this.$route.params.page);\r\n            }\r\n            this.searchArtistTracks(this.$route.params.artist);\r\n            this.activeTab = 'tracks';\r\n        } else {\r\n            switch (this.$route.name) {\r\n                case 'artistBio':\r\n                    this.activeTab = 'bio';\r\n                    break;\r\n                case 'artistAlbums':\r\n                    this.activeTab = 'albums';\r\n                    break;\r\n                case 'artistUpdate':\r\n                    this.activeTab = 'update';\r\n                    break;\r\n                default:\r\n                    this.activeTab = 'overview';\r\n                    break;\r\n            }\r\n        }\r\n    },\r\n    methods: {\r\n        onPaginationChanged: function (currentPage) {\r\n            this.$router.push({ name: 'artistTracksPaged', params: { page: currentPage } });\r\n        },\r\n        getArtist: function (artist) {\r\n            this.loading = true;\r\n            this.errors = false;\r\n            _api_js__WEBPACK_IMPORTED_MODULE_0___default().artist.get(artist).then(response => {\r\n                this.artist = response.data.artist;\r\n                if (this.artist.bio) {\r\n                    this.artist.bio = this.artist.bio.replace(/(?:\\r\\n|\\r|\\n)/g, '<br />');\r\n                    this.truncatedBio = this.truncate(this.artist.bio);\r\n                    //this.activeTab = \"overview\";\r\n                }\r\n                this.loading = false;\r\n            }).catch(error => {\r\n                this.errors = true;\r\n                this.apiError = response.getApiErrorData();\r\n                this.loading = false;\r\n            });\r\n        },\r\n        abortInstantSearch: function () {\r\n            this.nameFilter = null;\r\n            clearTimeout(this.timeout);\r\n        },\r\n        instantSearch: function () {\r\n            if (this.timeout) {\r\n                clearTimeout(this.timeout);\r\n            }\r\n            this.timeout = setTimeout(function () {\r\n                this.pager.actualPage = 1;\r\n                this.searchArtistTracks(this.$route.params.artist);\r\n            }, 256);\r\n        },\r\n        searchTracks: function () {\r\n            this.searchArtistTracks(this.$route.params.artist);\r\n        },\r\n        searchArtistTracks: function (artist) {\r\n            this.loading = true;\r\n            this.loadingTracks = true;\r\n            this.clearAPIErrors();\r\n            let text = this.nameFilter ? this.nameFilter : '';\r\n            _api_js__WEBPACK_IMPORTED_MODULE_0___default().track.searchTracks(text, artist, '', false, this.pager.actualPage, this.pager.resultsPage, '').then(response => {\r\n                this.pager.actualPage = response.data.actualPage;\r\n                this.pager.totalPages = response.data.totalPages;\r\n                this.pager.totalResults = response.data.totalResults;\r\n                if (response.data.tracks && response.data.tracks.length > 0) {\r\n                    this.tracks = response.data.tracks;\r\n                } else {\r\n                    this.tracks = [];\r\n                }\r\n                this.loadingTracks = false;\r\n                this.loading = false;\r\n            }).catch(error => {\r\n                this.setAPIError(error.getApiErrorData());\r\n                this.loadingTracks = false;\r\n                this.loading = false;\r\n            });\r\n        },\r\n        changeTab: function (tab) {\r\n            this.activeTab = tab;\r\n        }, truncate: function (text) {\r\n            return (text.substring(0, 500));\r\n        },\r\n        enqueueAlbumTracks: function (album, artist, year) {\r\n            this.loading = true;\r\n            this.clearAPIErrors();\r\n            _api_js__WEBPACK_IMPORTED_MODULE_0___default().track.getAlbumTracks(album || null, artist || null, year || null).then(response => {\r\n                this.$audioplayer.currentPlaylist.empty();\r\n                if (response.data.tracks && response.data.tracks.length > 0) {\r\n                    this.$audioplayer.tracks = response.data.tracks;\r\n                    this.$audioplayer.playback.play();\r\n                }\r\n                this.loading = false;\r\n            }).catch(error => {\r\n                this.setAPIError(error.getApiErrorData());\r\n                this.loading = false;\r\n            });\r\n        },\r\n        searchMusicBrainz(artistName) {\r\n            window.open('https://musicbrainz.org/search?query=' + encodeURI(this.artist.name) + '&type=artist&limit=16&method=indexed');\r\n        },\r\n        overwriteMusicBrainzArtist(name, mbid) {\r\n            this.loading = true;\r\n            this.errors = false;\r\n            _api_js__WEBPACK_IMPORTED_MODULE_0___default().artist.overwriteMusicBrainz(name, mbid).then(response => {\r\n                this.loading = false;\r\n            }).catch(error => {\r\n                this.setAPIError(error.getApiErrorData());\r\n                this.loading = false;\r\n            });\r\n        },\r\n        clearMusicBrainzArtist: function (name, mbid) {\r\n            this.loading = true;\r\n            this.errors = false;\r\n            _api_js__WEBPACK_IMPORTED_MODULE_0___default().artist.clearMusicBrainz(name, mbid).then(response => {\r\n                this.loading = false;\r\n            }).catch(error => {\r\n                this.setAPIError(error.getApiErrorData());\r\n                this.loading = false;\r\n            });\r\n        }\r\n    }\r\n});\n\n//# sourceURL=webpack://spieldose/./src-frontend/scripts/vue-components/browse-artist.js?");

/***/ }),

/***/ "./src-frontend/scripts/vue-components/browse-artists.js":
/*!***************************************************************!*\
  !*** ./src-frontend/scripts/vue-components/browse-artists.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../api.js */ \"./src-frontend/scripts/api.js\");\n/* harmony import */ var _api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_api_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _mixins_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../mixins.js */ \"./src-frontend/scripts/mixins.js\");\n/* harmony import */ var _input_typeahead_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./input-typeahead.js */ \"./src-frontend/scripts/vue-components/input-typeahead.js\");\n/* harmony import */ var _pagination__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./pagination */ \"./src-frontend/scripts/vue-components/pagination.js\");\n/* harmony import */ var _api_error_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./api-error.js */ \"./src-frontend/scripts/vue-components/api-error.js\");\n\r\n\r\n\r\n\r\n\r\n\r\nconst template = function () {\r\n    return `\r\n        <div class=\"container is-fluid box is-marginless\">\r\n            <p class=\"title is-1 has-text-centered\">{{ $t(\"browseArtists.labels.sectionName\") }}</p>\r\n            <div v-if=\"! hasAPIErrors\">\r\n                <div class=\"field is-expanded has-addons\">\r\n                    <div class=\"control is-expanded has-icons-left\" v-bind:class=\"{ 'is-loading': loading }\">\r\n                        <spieldose-input-typeahead v-if=\"liveSearch\" v-bind:loading=\"loading\" v-bind:placeholder=\"$t('browseArtists.inputs.artistNamePlaceholder')\" v-on:on-value-change=\"onTypeahead\"></spieldose-input-typeahead>\r\n                        <input type=\"text\" class=\"input\" placeholder=\"$t('browseArtists.inputs.artistNamePlaceholder')\" v-else v-bind:disabled=\"loading\" v-model.trim=\"nameFilter\" v-on:keyup.enter=\"search();\">\r\n                        <span class=\"icon is-small is-left\">\r\n                            <i class=\"fas fa-search\"></i>\r\n                        </span>\r\n                    </div>\r\n                    <div class=\"control\">\r\n                        <div class=\"select\">\r\n                            <select v-model=\"filterNotScraped\">\r\n                                <option value=\"0\">{{ $t(\"browseArtists.dropdowns.filterAllArtists\") }}</option>\r\n                                <option value=\"1\">{{ $t(\"browseArtists.dropdowns.filterNotScrapedArtists\") }}</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <p class=\"control\" v-if=\"! liveSearch\">\r\n                        <a class=\"button is-info\" v-on:click.prevent=\"search();\">\r\n                            <span class=\"icon\">\r\n                                <i class=\"fas fa-search\" aria-hidden=\"true\"></i>\r\n                            </span>\r\n                            <span>{{ $t(\"browseArtists.buttons.search\") }}</span>\r\n                        </a>\r\n                    </p>\r\n                </div>\r\n                <spieldose-pagination v-bind:loading=\"loading\" v-bind:data=\"pager\" v-on:pagination-changed=\"onPaginationChanged\"></spieldose-pagination>\r\n                <div class=\"browse-artist-item is-pulled-left\" v-for=\"artist in artists\" v-show=\"! loading\">\r\n                    <a v-bind:title=\"$t('commonLabels.navigateToArtistPage')\" v-on:click.prevent=\"navigateToArtistPage(artist.name);\">\r\n                        <img v-bind:src=\"getArtistImageUrl(artist.image)\" v-on:error=\"artist.image = null;\">\r\n                        <i class=\"fas fa-search fa-4x\"></i>\r\n                    </a>\r\n                    <div class=\"artist-info is-clipped\">\r\n                        <p class=\"artist-name has-text-centered\">{{ artist.name }}</p>\r\n                    </div>\r\n                </div>\r\n                <div class=\"is-clearfix\"></div>\r\n            </div>\r\n            <spieldose-api-error-component v-else v-bind:apiError=\"apiError\"></spieldose-api-error-component>\r\n        </div>\r\n    `;\r\n};\r\n\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\r\n    name: 'spieldose-browse-artists',\r\n    template: template(),\r\n    mixins: [\r\n        _mixins_js__WEBPACK_IMPORTED_MODULE_1__.mixinAPIError, _mixins_js__WEBPACK_IMPORTED_MODULE_1__.mixinPagination, _mixins_js__WEBPACK_IMPORTED_MODULE_1__.mixinLiveSearches, _mixins_js__WEBPACK_IMPORTED_MODULE_1__.mixinNavigation, _mixins_js__WEBPACK_IMPORTED_MODULE_1__.mixinArtists\r\n    ],\r\n    data: function () {\r\n        return ({\r\n            loading: false,\r\n            nameFilter: null,\r\n            artists: [],\r\n            filterNotScraped: 0\r\n        });\r\n    },\r\n    watch: {\r\n        filterNotScraped: function (v) {\r\n            if (this.liveSearch) {\r\n                this.search();\r\n            }\r\n        }\r\n    },\r\n    components: {\r\n        'spieldose-input-typeahead': _input_typeahead_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"],\r\n        'spieldose-pagination': _pagination__WEBPACK_IMPORTED_MODULE_3__[\"default\"],\r\n        'spieldose-api-error-component': _api_error_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"]\r\n    },\r\n    methods: {\r\n        onPaginationChanged: function (currentPage) {\r\n            this.$router.push({ name: 'artistsPaged', params: { page: currentPage } });\r\n        },\r\n        onTypeahead: function (text) {\r\n            this.nameFilter = text;\r\n            this.search();\r\n        },\r\n        search: function () {\r\n            this.loading = true;\r\n            this.clearAPIErrors();\r\n            _api_js__WEBPACK_IMPORTED_MODULE_0___default().artist.search(this.nameFilter, this.filterNotScraped == 1, this.pager.actualPage, this.pager.resultsPage).then(response => {\r\n                this.pager.actualPage = response.data.pagination.actualPage;\r\n                this.pager.totalPages = response.data.pagination.totalPages;\r\n                this.pager.totalResults = response.data.pagination.totalResults;\r\n                if (response.data.artists && response.data.artists.length > 0) {\r\n                    this.artists = response.data.artists;\r\n                } else {\r\n                    this.artists = [];\r\n                }\r\n                this.loading = false;\r\n            }).catch(error => {\r\n                this.setAPIError(error.getApiErrorData());\r\n                this.loading = false;\r\n            });\r\n        }\r\n    }\r\n});\n\n//# sourceURL=webpack://spieldose/./src-frontend/scripts/vue-components/browse-artists.js?");

/***/ }),

/***/ "./src-frontend/scripts/vue-components/browse-paths.js":
/*!*************************************************************!*\
  !*** ./src-frontend/scripts/vue-components/browse-paths.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../api.js */ \"./src-frontend/scripts/api.js\");\n/* harmony import */ var _api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_api_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _mixins_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../mixins.js */ \"./src-frontend/scripts/mixins.js\");\n/* harmony import */ var _input_typeahead_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./input-typeahead.js */ \"./src-frontend/scripts/vue-components/input-typeahead.js\");\n/* harmony import */ var _pagination__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./pagination */ \"./src-frontend/scripts/vue-components/pagination.js\");\n/* harmony import */ var _api_error_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./api-error.js */ \"./src-frontend/scripts/vue-components/api-error.js\");\n\r\n\r\n\r\n\r\n\r\n\r\nconst template = function () {\r\n    return `\r\n        <div class=\"container is-fluid box is-marginless\">\r\n        <p class=\"title is-1 has-text-centered\">{{ $t(\"browsePaths.labels.sectionName\") }}</p>\r\n            <div v-if=\"! hasAPIErrors\">\r\n                <div class=\"field has-addons\">\r\n                    <div class=\"control is-expanded has-icons-left\" v-bind:class=\"{ 'is-loading': loading }\">\r\n                    <spieldose-input-typeahead v-if=\"liveSearch\" v-bind:loading=\"loading\" v-bind:placeholder=\"$t('browsePaths.inputs.pathNamePlaceholder')\" v-on:on-value-change=\"onTypeahead\"></spieldose-input-typeahead>\r\n                        <input type=\"text\" class=\"input\" v-bind:placeholder=\"$t('browsePaths.inputs.pathNamePlaceholder')\" v-else v-bind:disabled=\"loading\" v-model.trim=\"nameFilter\" v-on:keyup.enter=\"search();\">\r\n                        <span class=\"icon is-small is-left\">\r\n                            <i class=\"fas fa-search\"></i>\r\n                        </span>\r\n                    </div>\r\n                    <p class=\"control\" v-if=\"! liveSearch\">\r\n                        <a class=\"button is-info\" v-on:click.prevent=\"search();\">\r\n                            <span class=\"icon\">\r\n                                <i class=\"fas fa-search\" aria-hidden=\"true\"></i>\r\n                            </span>\r\n                            <span>{{ $t(\"browsePaths.buttons.search\") }}</span>\r\n                        </a>\r\n                    </p>\r\n                </div>\r\n                <spieldose-pagination v-bind:loading=\"loading\" v-bind:data=\"pager\" v-on:pagination-changed=\"onPaginationChanged\"></spieldose-pagination>\r\n                <table class=\"table is-bordered is-striped is-narrow is-fullwidth is-unselectable\" v-show=\"! loading\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>{{ $t(\"browsePaths.labels.pathNameTableHeader\") }}</th>\r\n                            <th>{{ $t(\"browsePaths.labels.trackCountTableHeader\") }}</th>\r\n                            <th>{{ $t(\"browsePaths.labels.actionsTableHeader\") }}</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr v-for=\"item in paths\" v-bind:key=\"item.path\">\r\n                            <td>{{ item.path }}</td>\r\n                            <td class=\"has-text-right\">{{ item.totalTracks }}</td>\r\n                            <td class=\"has-text-centered\">\r\n                                <div v-if=\"item.totalTracks > 0\">\r\n                                    <i class=\"cursor-pointer fa-fw fa fa-play\" v-bind:title=\"$t('browsePaths.labels.playThisPath')\" v-on:click.prevent=\"playPathTracks(item.path);\"></i>\r\n                                    <i class=\"cursor-pointer fa-fw fa fa-plus-square\" v-bind:title=\"$t('browsePaths.labels.enqueueThisPath')\" v-on:click.prevent=\"enqueuePathTracks(item.path);\"></i>\r\n                                </div>\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <spieldose-api-error-component v-else v-bind:apiError=\"apiError\"></spieldose-api-error-component>\r\n        </div>\r\n    `;\r\n};\r\n\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\r\n    name: 'spieldose-browse-paths',\r\n    template: template(),\r\n    mixins: [\r\n        _mixins_js__WEBPACK_IMPORTED_MODULE_1__.mixinAPIError, _mixins_js__WEBPACK_IMPORTED_MODULE_1__.mixinPagination, _mixins_js__WEBPACK_IMPORTED_MODULE_1__.mixinLiveSearches\r\n    ],\r\n    data: function () {\r\n        return ({\r\n            loading: false,\r\n            nameFilter: null,\r\n            paths: []\r\n        });\r\n    },\r\n    components: {\r\n        'spieldose-input-typeahead': _input_typeahead_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"],\r\n        'spieldose-pagination': _pagination__WEBPACK_IMPORTED_MODULE_3__[\"default\"],\r\n        'spieldose-api-error-component': _api_error_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"]\r\n    },\r\n    methods: {\r\n        onPaginationChanged: function (currentPage) {\r\n            this.$router.push({ name: 'pathsPaged', params: { page: currentPage } });\r\n        },\r\n        onTypeahead: function (text) {\r\n            this.nameFilter = text;\r\n            this.search();\r\n        },\r\n        search: function () {\r\n            this.loading = true;\r\n            this.clearAPIErrors();\r\n            _api_js__WEBPACK_IMPORTED_MODULE_0___default().searchPaths(this.nameFilter, this.pager.actualPage, this.pager.resultsPage).then(response => {\r\n                this.pager.actualPage = response.data.pagination.actualPage;\r\n                this.pager.totalPages = response.data.pagination.totalPages;\r\n                this.pager.totalResults = response.data.pagination.totalResults;\r\n                if (response.data.paths && response.data.paths.length > 0) {\r\n                    this.paths = response.data.paths;\r\n                } else {\r\n                    this.paths = [];\r\n                }\r\n                this.loading = false;\r\n            }).catch(error => {\r\n                this.setAPIError(error.getApiErrorData());\r\n                this.loading = false;\r\n            });\r\n        }\r\n    }\r\n});\n\n//# sourceURL=webpack://spieldose/./src-frontend/scripts/vue-components/browse-paths.js?");

/***/ }),

/***/ "./src-frontend/scripts/vue-components/browse-playlists.js":
/*!*****************************************************************!*\
  !*** ./src-frontend/scripts/vue-components/browse-playlists.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../api.js */ \"./src-frontend/scripts/api.js\");\n/* harmony import */ var _api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_api_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _mixins_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../mixins.js */ \"./src-frontend/scripts/mixins.js\");\n/* harmony import */ var _input_typeahead_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./input-typeahead.js */ \"./src-frontend/scripts/vue-components/input-typeahead.js\");\n/* harmony import */ var _pagination__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./pagination */ \"./src-frontend/scripts/vue-components/pagination.js\");\n/* harmony import */ var _api_error_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./api-error.js */ \"./src-frontend/scripts/vue-components/api-error.js\");\n/* harmony import */ var _delete_confirmation_modal_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./delete-confirmation-modal.js */ \"./src-frontend/scripts/vue-components/delete-confirmation-modal.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst template = function () {\r\n    return `\r\n        <div class=\"container is-fluid box is-marginless\">\r\n        <p class=\"title is-1 has-text-centered\">{{ $t(\"browsePlaylists.labels.sectionName\") }}</p>\r\n            <div v-if=\"! hasAPIErrors\">\r\n                <div class=\"field has-addons\">\r\n                    <div class=\"control is-expanded has-icons-left\" v-bind:class=\"{ 'is-loading': loading }\">\r\n                        <spieldose-input-typeahead v-if=\"liveSearch\" v-bind:loading=\"loading\" v-bind:placeholder=\"$t('browsePlaylists.inputs.playlistNamePlaceholder')\" v-on:on-value-change=\"onTypeahead\"></spieldose-input-typeahead>\r\n                        <input type=\"text\" class=\"input\" v-bind:placeholder=\"$t('browsePlaylists.inputs.playlistNamePlaceholder')\" v-else v-bind:disabled=\"loading\" v-model.trim=\"nameFilter\" v-on:keyup.enter=\"search();\">\r\n                        <span class=\"icon is-small is-left\">\r\n                            <i class=\"fas fa-search\"></i>\r\n                        </span>\r\n                    </div>\r\n                    <p class=\"control\" v-if=\"! liveSearch\">\r\n                        <a class=\"button is-info\" v-on:click.prevent=\"search();\">\r\n                            <span class=\"icon\">\r\n                                <i class=\"fas fa-search\" aria-hidden=\"true\"></i>\r\n                            </span>\r\n                            <span>{{ $t(\"browsePlaylists.buttons.search\") }}</span>\r\n                        </a>\r\n                    </p>\r\n                </div>\r\n                <spieldose-pagination v-bind:loading=\"loading\" v-bind:data=\"pager\" v-on:pagination-changed=\"onPaginationChanged\"></spieldose-pagination>\r\n                <div class=\"playlist-item box has-text-centered\" v-for=\"playlist in playlists\" v-show=\"! loading\">\r\n                    <p class=\"playlist-item-icon\">\r\n                        <span class=\"icon has-text-light\">\r\n                            <i class=\"fas fa-list-alt fa-5x\"></i>\r\n                        </span>\r\n                    </p>\r\n                    <p class=\"playlist-info\">\r\n                        <strong>“{{ playlist.name }}”</strong>\r\n                    </p>\r\n                    <p class=\"content is-small\">{{ playlist.trackCount }} tracks</p>\r\n                    <div class=\"field has-addons\">\r\n                        <p class=\"control\">\r\n                            <a class=\"button is-small is-link\" v-on:click.prevent=\"playPlaylistTracks(playlist.id);\">\r\n                                <span class=\"icon is-small\"><i class=\"fas fa-play\"></i></span>\r\n                                <span>{{ $t(\"browsePlaylists.buttons.play\") }}</span>\r\n                            </a>\r\n                        </p>\r\n                        <p class=\"control\">\r\n                            <a class=\"button is-small is-danger\" v-bind:disabled=\"! playlist.id\" v-on:click.prevent=\"onShowDeleteModal(playlist.id);\">\r\n                                <span class=\"icon is-small\"><i class=\"fas fa-times\"></i></span>\r\n                                <span>{{ $t(\"browsePlaylists.buttons.remove\") }}</span>\r\n                            </a>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n                <div class=\"is-clearfix\"></div>\r\n                <delete-confirmation-modal v-bind:id=\"deleteItemId\" v-if=\"showDeleteConfirmationModal\" v-on:confirm-delete=\"onConfirmDelete\" v-on:cancel-delete=\"onCancelDelete\"></delete-confirmation-modal>\r\n            </div>\r\n            <spieldose-api-error-component v-else v-bind:apiError=\"apiError\"></spieldose-api-error-component>\r\n        </div>\r\n    `;\r\n};\r\n\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\r\n    name: 'spieldose-browse-playlists',\r\n    template: template(),\r\n    mixins: [\r\n        _mixins_js__WEBPACK_IMPORTED_MODULE_1__.mixinAPIError, _mixins_js__WEBPACK_IMPORTED_MODULE_1__.mixinPagination, _mixins_js__WEBPACK_IMPORTED_MODULE_1__.mixinLiveSearches\r\n    ],\r\n    data: function () {\r\n        return ({\r\n            loading: false,\r\n            nameFilter: null,\r\n            playlists: [],\r\n            showDeleteConfirmationModal: false,\r\n            deleteItemId: null\r\n        });\r\n    },\r\n    components: {\r\n        'spieldose-input-typeahead': _input_typeahead_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"],\r\n        'spieldose-pagination': _pagination__WEBPACK_IMPORTED_MODULE_3__[\"default\"],\r\n        'spieldose-api-error-component': _api_error_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"],\r\n        'delete-confirmation-modal': _delete_confirmation_modal_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"]\r\n    },\r\n    methods: {\r\n        onPaginationChanged: function (currentPage) {\r\n            this.$router.push({ name: 'playlistsPaged', params: { page: currentPage } });\r\n        },\r\n        onTypeahead: function (text) {\r\n            this.nameFilter = text;\r\n            this.search();\r\n        },\r\n        onShowDeleteModal: function (id) {\r\n            if (id) {\r\n                this.deleteItemId = id;\r\n                this.showDeleteConfirmationModal = true;\r\n            }\r\n        },\r\n        onConfirmDelete: function (id) {\r\n            if (id) {\r\n                this.loading = true;\r\n                this.clearAPIErrors();\r\n                _api_js__WEBPACK_IMPORTED_MODULE_0___default().playlist.remove(id).then(response => {\r\n                    if (this.$audioplayer.currentPlaylist.id == id) {\r\n                        this.$audioplayer.currentPlaylist.unset();\r\n                    }\r\n                    this.search();\r\n                    this.showDeleteConfirmationModal = false;\r\n                    this.deleteItemId = null;\r\n                }).catch(error => {\r\n                    this.setAPIError(error.getApiErrorData());\r\n                    this.showDeleteConfirmationModal = false;\r\n                    this.deleteItemId = null;\r\n                });\r\n            }\r\n        },\r\n        onCancelDelete: function () {\r\n            this.showDeleteConfirmationModal = false;\r\n            this.deleteItemId = null;\r\n        },\r\n        search: function () {\r\n            this.loading = true;\r\n            this.clearAPIErrors();\r\n            _api_js__WEBPACK_IMPORTED_MODULE_0___default().playlist.search(this.nameFilter, this.pager.actualPage, this.pager.resultsPage).then(response => {\r\n                this.pager.actualPage = response.data.pagination.actualPage;\r\n                this.pager.totalPages = response.data.pagination.totalPages;\r\n                this.pager.totalResults = response.data.pagination.totalResults;\r\n                if (response.data.playlists && response.data.playlists.length > 0) {\r\n                    this.playlists = response.data.playlists;\r\n                } else {\r\n                    this.playlists = [];\r\n                }\r\n                this.loading = false;\r\n            }).catch(error => {\r\n                this.errors = true;\r\n                this.apiError = response.getApiErrorData();\r\n                this.loading = false;\r\n            });\r\n        }\r\n    }\r\n});\n\n//# sourceURL=webpack://spieldose/./src-frontend/scripts/vue-components/browse-playlists.js?");

/***/ }),

/***/ "./src-frontend/scripts/vue-components/browse-radio-stations.js":
/*!**********************************************************************!*\
  !*** ./src-frontend/scripts/vue-components/browse-radio-stations.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../api.js */ \"./src-frontend/scripts/api.js\");\n/* harmony import */ var _api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_api_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _mixins_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../mixins.js */ \"./src-frontend/scripts/mixins.js\");\n/* harmony import */ var _input_typeahead_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./input-typeahead.js */ \"./src-frontend/scripts/vue-components/input-typeahead.js\");\n/* harmony import */ var _pagination__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./pagination */ \"./src-frontend/scripts/vue-components/pagination.js\");\n/* harmony import */ var _api_error_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./api-error.js */ \"./src-frontend/scripts/vue-components/api-error.js\");\n/* harmony import */ var _delete_confirmation_modal_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./delete-confirmation-modal.js */ \"./src-frontend/scripts/vue-components/delete-confirmation-modal.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst template = function () {\r\n    return `\r\n        <div class=\"container is-fluid box is-marginless\">\r\n        <p class=\"title is-1 has-text-centered\">{{ $t(\"browseRadioStations.labels.sectionName\") }}</p>\r\n            <div v-if=\"! hasAPIErrors\">\r\n                <div class=\"field has-addons\">\r\n                    <div class=\"control is-expanded has-icons-left\" v-bind:class=\"{ 'is-loading': loading }\">\r\n                        <spieldose-input-typeahead v-if=\"liveSearch\" v-bind:loading=\"loading\" v-bind:placeholder=\"$t('browseRadioStations.inputs.radioStationSearchNamePlaceholder')\" v-on:on-value-change=\"onTypeahead\"></spieldose-input-typeahead>\r\n                        <input type=\"text\" class=\"input\" v-bind:placeholder=\"$t('browseRadioStations.inputs.radioStationSearchNamePlaceholder')\" v-else v-bind:disabled=\"loading\" v-model.trim=\"nameFilter\" v-on:keyup.enter=\"search();\">\r\n                        <span class=\"icon is-small is-left\">\r\n                            <i class=\"fas fa-search\"></i>\r\n                        </span>\r\n                    </div>\r\n                    <p class=\"control\" v-if=\"! liveSearch\">\r\n                        <a class=\"button is-info\" v-on:click.prevent=\"search();\">\r\n                            <span class=\"icon\">\r\n                                <i class=\"fas fa-search\" aria-hidden=\"true\"></i>\r\n                            </span>\r\n                            <span>{{ $t(\"browseRadioStations.buttons.search\") }}</span>\r\n                        </a>\r\n                    </p>\r\n                    <p class=\"control\">\r\n                        <a class=\"button is-info\" v-bind:disabled=\"showForm\" v-on:click.prevent=\"showAddRadioStationForm();\">\r\n                            <span class=\"icon\">\r\n                                <i class=\"fas fa-plus\" aria-hidden=\"true\"></i>\r\n                            </span>\r\n                            <span>{{ $t(\"browseRadioStations.buttons.add\") }}</span>\r\n                        </a>\r\n                    </p>\r\n                </div>\r\n                <div v-if=\"showForm\">\r\n                    <div class=\"field is-horizontal\">\r\n                        <div class=\"field-label\">\r\n                            <label class=\"label\">{{ $t(\"browseRadioStations.labels.radioStationName\") }}</label>\r\n                        </div>\r\n                        <div class=\"field-body\">\r\n                            <div class=\"field\">\r\n                                <div class=\"control\">\r\n                                    <input class=\"input\" type=\"text\" v-bind:placeholder=\"$t('browseRadioStations.inputs.radioStationNamePlaceholder')\" v-model.trim=\"formRadioStationName\">\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"field\">\r\n                                <div class=\"control\">\r\n                                    <div class=\"select\">\r\n                                        <select v-model.number=\"formRadioStationType\">\r\n                                            <option value=\"0\">{{ $t(\"browseRadioStations.selects.optionDirectStream\") }}</option>\r\n                                            <option value=\"1\">{{ $t(\"browseRadioStations.selects.optionM3U\") }}</option>\r\n                                            <option value=\"2\">{{ $t(\"browseRadioStations.selects.optionPLS\") }}</option>\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"field is-horizontal\">\r\n                        <div class=\"field-label\">\r\n                            <label class=\"label\">{{ $t(\"browseRadioStations.labels.radioStationUrl\") }}</label>\r\n                        </div>\r\n                        <div class=\"field-body\">\r\n                            <div class=\"field\">\r\n                                <div class=\"control\">\r\n                                    <input class=\"input\" type=\"text\" v-bind:placeholder=\"$t('browseRadioStations.inputs.radioStationPlaceholderUrl')\" v-model.trim=\"formRadioStationUrl\">\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"field is-horizontal\">\r\n                        <div class=\"field-label\">\r\n                            <label class=\"label\">{{ $t(\"browseRadioStations.labels.radioStationImage\") }}</label>\r\n                        </div>\r\n                        <div class=\"field-body\">\r\n                            <div class=\"field\">\r\n                                <div class=\"control\">\r\n                                    <input class=\"input\" type=\"text\" v-bind:placeholder=\"$t('browseRadioStations.inputs.radioStationPlaceholderImage')\" v-model.trim=\"formRadioStationImage\">\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"field is-horizontal\">\r\n                        <div class=\"field-label\">\r\n                        </div>\r\n                        <div class=\"field-body\">\r\n                            <div class=\"field is-grouped\">\r\n                                <div class=\"control\">\r\n                                    <a class=\"button is-link\" v-on:click.prevent=\"save();\" v-bind:disabled=\"! allowSave\">\r\n                                        <span class=\"icon\">\r\n                                            <i class=\"fas fa-save\" aria-hidden=\"true\"></i>\r\n                                        </span>\r\n                                        <span>{{ $t(\"browseRadioStations.buttons.save\") }}</span>\r\n                                    </a>\r\n                                </div>\r\n                                <div class=\"control\">\r\n                                    <a class=\"button is-info\" v-on:click.prevent=\"hideAddRadioStationForm();\">\r\n                                        <span class=\"icon\">\r\n                                            <i class=\"fas fa-ban\" aria-hidden=\"true\"></i>\r\n                                        </span>\r\n                                        <span>{{ $t(\"browseRadioStations.buttons.cancel\") }}</span>\r\n                                    </a>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div v-else>\r\n                    <spieldose-pagination v-bind:loading=\"loading\" v-bind:data=\"pager\" v-on:pagination-changed=\"onPaginationChanged\"></spieldose-pagination>\r\n                    <div class=\"radio-station-item browse-radio-station-item box has-text-centered\" v-for=\"radioStation in radioStations\" v-show=\"! loading\">\r\n                        <img class=\"radio-station-thumbnail\" v-bind:src=\"getAlbumImageUrl(radioStation.image)\" v-on:error=\"radioStation.image = null;\">\r\n                        <p class=\"radio-station-info\">\r\n                            <strong>“{{ radioStation.name }}”</strong>\r\n                        </p>\r\n                        <div class=\"field has-addons\">\r\n                            <p class=\"control\">\r\n                                <a class=\"button is-small is-link\" v-on:click.prevent=\"playRadioStation(radioStation.id);\">\r\n                                    <span class=\"icon is-small\"><i class=\"fas fa-play\"></i></span>\r\n                                    <span>{{ $t(\"browseRadioStations.buttons.play\") }}</span>\r\n                                </a>\r\n                            </p>\r\n                            <p class=\"control\">\r\n                                <a class=\"button is-small is-info\" v-on:click.prevent=\"showUpdateRadioStationForm(radioStation.id);\">\r\n                                    <span class=\"icon is-small\"><i class=\"fas fa-edit\"></i></span>\r\n                                    <span>{{ $t(\"browseRadioStations.buttons.update\") }}</span>\r\n                                </a>\r\n                            </p>\r\n                            <p class=\"control\">\r\n                                <a class=\"button is-small is-danger\" v-on:click.prevent=\"onShowDeleteModal(radioStation.id);\">\r\n                                    <span class=\"icon is-small\"><i class=\"fas fa-times\"></i></span>\r\n                                    <span>{{ $t(\"browseRadioStations.buttons.remove\") }}</span>\r\n                                </a>\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"is-clearfix\"></div>\r\n                </div>\r\n                <delete-confirmation-modal v-bind:id=\"deleteItemId\" v-if=\"showDeleteConfirmationModal\" v-on:confirm-delete=\"onConfirmDelete\" v-on:cancel-delete=\"onCancelDelete\"></delete-confirmation-modal>\r\n            </div>\r\n            <spieldose-api-error-component v-else v-bind:apiError=\"apiError\"></spieldose-api-error-component>\r\n        </div>\r\n    `;\r\n};\r\n\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\r\n    name: 'spieldose-browse-radio-stations',\r\n    template: template(),\r\n    mixins: [\r\n        _mixins_js__WEBPACK_IMPORTED_MODULE_1__.mixinAPIError, _mixins_js__WEBPACK_IMPORTED_MODULE_1__.mixinPagination, _mixins_js__WEBPACK_IMPORTED_MODULE_1__.mixinLiveSearches, _mixins_js__WEBPACK_IMPORTED_MODULE_1__.mixinAlbums\r\n    ],\r\n    data: function () {\r\n        return ({\r\n            loading: false,\r\n            nameFilter: null,\r\n            radioStations: [],\r\n            showDeleteConfirmationModal: false,\r\n            deleteItemId: null,\r\n            showForm: false,\r\n            formRadioStationId: null,\r\n            formRadioStationName: null,\r\n            formRadioStationUrl: null,\r\n            formRadioStationType: 0,\r\n            formRadioStationImage: null\r\n        });\r\n    },\r\n    computed: {\r\n        allowSave: function () {\r\n            return (this.formRadioStationName && this.formRadioStationUrl);\r\n        }\r\n    },\r\n    components: {\r\n        'spieldose-input-typeahead': _input_typeahead_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"],\r\n        'spieldose-pagination': _pagination__WEBPACK_IMPORTED_MODULE_3__[\"default\"],\r\n        'spieldose-api-error-component': _api_error_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"],\r\n        'delete-confirmation-modal': _delete_confirmation_modal_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"]\r\n    },\r\n    methods: {\r\n        onPaginationChanged: function (currentPage) {\r\n            this.$router.push({ name: 'radioStationsPaged', params: { page: currentPage } });\r\n        },\r\n        onTypeahead: function (text) {\r\n            this.nameFilter = text;\r\n            this.search();\r\n        },\r\n        onShowDeleteModal: function (id) {\r\n            if (id) {\r\n                this.deleteItemId = id;\r\n                this.showDeleteConfirmationModal = true;\r\n            }\r\n        },\r\n        onConfirmDelete: function (id) {\r\n            if (id) {\r\n                this.loading = true;\r\n                this.clearAPIErrors();\r\n                _api_js__WEBPACK_IMPORTED_MODULE_0___default().radioStation.remove(id).then(response => {\r\n                    this.search();\r\n                    this.showDeleteConfirmationModal = false;\r\n                    this.deleteItemId = null;\r\n                }).catch(error => {\r\n                    this.setAPIError(error.getApiErrorData());\r\n                    this.showDeleteConfirmationModal = false;\r\n                    this.deleteItemId = null;\r\n                });\r\n            }\r\n        },\r\n        onCancelDelete: function () {\r\n            this.showDeleteConfirmationModal = false;\r\n            this.deleteItemId = null;\r\n        },\r\n        showAddRadioStationForm: function () {\r\n            this.showForm = true;\r\n            this.formRadioStationId = null;\r\n            this.formRadioStationName = null;\r\n            this.formRadioStationUrl = null;\r\n            this.formRadioStationType = 0;\r\n            this.formRadioStationImage = null;\r\n        },\r\n        hideAddRadioStationForm: function () {\r\n            this.showForm = false;\r\n        },\r\n        showUpdateRadioStationForm: function (id) {\r\n            _api_js__WEBPACK_IMPORTED_MODULE_0___default().radioStation.get(id).then(response => {\r\n\r\n                this.formRadioStationId = response.data.radioStation.id;\r\n                this.formRadioStationName = response.data.radioStation.name;\r\n                this.formRadioStationUrl = response.data.radioStation.url;\r\n                this.formRadioStationType = response.data.radioStation.urlType;\r\n                this.formRadioStationImage = response.data.radioStation.image;\r\n                this.showForm = true;\r\n\r\n            }).catch(error => {\r\n                this.setAPIError(error.getApiErrorData());\r\n            });\r\n        },\r\n        save: function () {\r\n            if (this.formRadioStationId) {\r\n                this.update();\r\n            } else {\r\n                this.add();\r\n            }\r\n        },\r\n        add: function () {\r\n            this.loading = true;\r\n            this.clearAPIErrors();\r\n            _api_js__WEBPACK_IMPORTED_MODULE_0___default().radioStation.add(this.formRadioStationName, this.formRadioStationUrl, this.formRadioStationType, this.formRadioStationImage).then(response => {\r\n                this.showForm = false;\r\n                this.search();\r\n            }).catch(error => {\r\n                this.setAPIError(error.getApiErrorData());\r\n            });\r\n        },\r\n        update: function () {\r\n            this.loading = true;\r\n            this.clearAPIErrors();\r\n            _api_js__WEBPACK_IMPORTED_MODULE_0___default().radioStation.update(this.formRadioStationId, this.formRadioStationName, this.formRadioStationUrl, this.formRadioStationType, this.formRadioStationImage).then(response => {\r\n                this.showForm = false;\r\n                this.search();\r\n            }).catch(error => {\r\n                this.setAPIError(error.getApiErrorData());\r\n            });\r\n        },\r\n        search: function () {\r\n            this.loading = true;\r\n            this.clearAPIErrors();\r\n            _api_js__WEBPACK_IMPORTED_MODULE_0___default().radioStation.search(this.nameFilter, this.pager.actualPage, this.pager.resultsPage).then(response => {\r\n                this.pager.actualPage = response.data.pagination.actualPage;\r\n                this.pager.totalPages = response.data.pagination.totalPages;\r\n                this.pager.totalResults = response.data.pagination.totalResults;\r\n                if (response.data.radioStations && response.data.radioStations.length > 0) {\r\n                    this.radioStations = response.data.radioStations;\r\n                } else {\r\n                    this.radioStations = [];\r\n                }\r\n                this.loading = false;\r\n            }).catch(error => {\r\n                this.errors = true;\r\n                this.apiError = response.getApiErrorData();\r\n                this.loading = false;\r\n            });\r\n        }\r\n    }\r\n});\n\n//# sourceURL=webpack://spieldose/./src-frontend/scripts/vue-components/browse-radio-stations.js?");

/***/ }),

/***/ "./src-frontend/scripts/vue-components/dashboard-play-stats.js":
/*!*********************************************************************!*\
  !*** ./src-frontend/scripts/vue-components/dashboard-play-stats.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var Chart__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! Chart */ \"./node_modules/chart.js/dist/chart.esm.js\");\n/* harmony import */ var _api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../api.js */ \"./src-frontend/scripts/api.js\");\n/* harmony import */ var _api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_api_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _mixins_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../mixins.js */ \"./src-frontend/scripts/mixins.js\");\n\r\n\r\n\r\n\r\nconst template = function () {\r\n    return `\r\n        <section class=\"panel\">\r\n            <p class=\"panel-heading\">\r\n                <span class=\"icon\">\r\n                    <i class=\"fas fa-cog fa-spin fa-fw\" v-if=\"loading\"></i>\r\n                    <i class=\"fas fa-exclamation-triangle\" v-else-if=\"hasAPIErrors\"></i>\r\n                    <i class=\"fas fa-chart-line\" v-else></i>\r\n                </span>\r\n                <span>{{ $t(\"dashboard.labels.playStatistics\") }}</span>\r\n                <a class=\"icon is-pulled-right\" v-bind:title=\"$t('commonMessages.refreshData')\" v-on:click.prevent=\"loadChart();\"><i class=\"fas fa-redo fa-fw\"></i></a>\r\n            </p>\r\n            <p class=\"panel-tabs\">\r\n                <a v-bind:class=\"{ 'is-active': isHourInterval }\" v-on:click.prevent=\"changeInterval('hour');\">{{ $t(\"dashboard.labels.byHour\") }}</a>\r\n                <a v-bind:class=\"{ 'is-active': isWeekDayInterval }\" v-on:click.prevent=\"changeInterval('weekDay');\">{{ $t(\"dashboard.labels.byWeekday\") }}</a>\r\n                <a v-bind:class=\"{ 'is-active': isMonthInterval }\" v-on:click.prevent=\"changeInterval('month');\">{{ $t(\"dashboard.labels.byMonth\") }}</a>\r\n                <a v-bind:class=\"{ 'is-active': isYearInterval }\" v-on:click.prevent=\"changeInterval('year');\">{{ $t(\"dashboard.labels.byYear\") }}</a>\r\n            </p>\r\n            <div class=\"panel-block\" v-if=\"! hasAPIErrors\">\r\n                <canvas v-if=\"isHourInterval\" class=\"play-stats-metrics-graph\" id=\"playcount-metrics-chart-hour\" height=\"200\"></canvas>\r\n                <canvas v-else-if=\"isWeekDayInterval\" class=\"play-stats-metrics-graph\" id=\"playcount-metrics-chart-weekday\" height=\"200\"></canvas>\r\n                <canvas v-else-if=\"isMonthInterval\" class=\"play-stats-metrics-graph\" id=\"playcount-metrics-chart-month\" height=\"200\"></canvas>\r\n                <canvas v-else-if=\"isYearInterval\" class=\"play-stats-metrics-graph\" id=\"playcount-metrics-chart-year\" height=\"200\"></canvas>\r\n            </div>\r\n            <div class=\"panel-block\" v-else>{{ $t(\"commonErrors.invalidAPIResponse\") }}</div>\r\n        </section>\r\n    `;\r\n};\r\n\r\nconst commonChartOptions = {\r\n    maintainAspectRatio: false,\r\n    legend: {\r\n        display: false\r\n    },\r\n    // https://stackoverflow.com/a/71239566\r\n    scales: {\r\n        y: {\r\n            ticks: {\r\n                precision: 0\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\r\n    name: 'spieldose-dashboard-play-stats',\r\n    template: template(),\r\n    mixins: [_mixins_js__WEBPACK_IMPORTED_MODULE_2__.mixinAPIError],\r\n    data: function () {\r\n        return ({\r\n            chart: null,\r\n            loading: false,\r\n            activeInterval: 'hour',\r\n            items: []\r\n        });\r\n    },\r\n    created: function () {\r\n        this.loadChart();\r\n    },\r\n    computed: {\r\n        isHourInterval: function () {\r\n            return (this.activeInterval == 'hour');\r\n        },\r\n        isWeekDayInterval: function () {\r\n            return (this.activeInterval == 'weekDay');\r\n        },\r\n        isMonthInterval: function () {\r\n            return (this.activeInterval == 'month');\r\n        },\r\n        isYearInterval: function () {\r\n            return (this.activeInterval == 'year');\r\n        }\r\n    },\r\n    methods: {\r\n        loadMetricsByHourChart: function () {\r\n            _api_js__WEBPACK_IMPORTED_MODULE_1___default().metrics.getPlayStatMetricsByHour().then(response => {\r\n                const hourNames = ['00', '01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23'];\r\n                let data = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\r\n                for (let i = 0; i < response.data.metrics.length; i++) {\r\n                    data[response.data.metrics[i].hour] = response.data.metrics[i].total;\r\n                }\r\n                if (this.chart) {\r\n                    this.chart.destroy();\r\n                }\r\n                let el = document.getElementById('playcount-metrics-chart-hour');\r\n                if (el) {\r\n                    /*\r\n                    this.chart = new Chart(el, {\r\n                        type: 'line',\r\n                        data: {\r\n                            labels: hourNames,\r\n                            datasets: [\r\n                                {\r\n                                    'label': 'play stats by hour',\r\n                                    'data': data,\r\n                                    'fill': true,\r\n                                    'borderColor': '#3273dc',\r\n                                    'lineTension': 0.1\r\n                                }\r\n                            ]\r\n                            datasets: [{\r\n                                label: 'My First dataset',\r\n                                backgroundColor: 'rgb(255, 99, 132)',\r\n                                borderColor: 'rgb(255, 99, 132)',\r\n                                data: [0, 10, 5, 2, 20, 30, 45],\r\n                              }]\r\n                        }\r\n                        , options: commonChartOptions\r\n                    });\r\n                    */\r\n                }\r\n                this.loading = false;\r\n            }).catch(error => {\r\n                console.log(\"error\");\r\n                this.setAPIError(error.getApiErrorData());\r\n                this.loading = false;\r\n            });\r\n        },\r\n        loadMetricsByWeekDayChart: function () {\r\n            _api_js__WEBPACK_IMPORTED_MODULE_1___default().metrics.getPlayStatMetricsByWeekDay().then(response => {\r\n                const weekDayNames = [\r\n                    this.$t('dashboard.labels.sunday'),\r\n                    this.$t('dashboard.labels.monday'),\r\n                    this.$t('dashboard.labels.tuesday'),\r\n                    this.$t('dashboard.labels.wednesday'),\r\n                    this.$t('dashboard.labels.thursday'),\r\n                    this.$t('dashboard.labels.friday'),\r\n                    this.$t('dashboard.labels.saturday')\r\n                ];\r\n                let weekDays = [];\r\n                let data = [];\r\n                for (let i = 0; i < response.data.metrics.length; i++) {\r\n                    data.push(response.data.metrics[i].total);\r\n                    weekDays.push(weekDayNames[response.data.metrics[i].weekDay]);\r\n                }\r\n                if (this.chart) {\r\n                    this.chart.destroy();\r\n                }\r\n                /*\r\n                this.chart = new Chart(document.getElementById('playcount-metrics-chart-weekday'), {\r\n                    type: 'bar',\r\n                    data: {\r\n                        labels: weekDays,\r\n                        datasets: [\r\n                            {\r\n                                'label': this.$t('dashboard.labels.playStatsByWeekday'),\r\n                                'data': data,\r\n                                'backgroundColor': '#3273dc'\r\n                            }\r\n                        ]\r\n                    }, options: commonChartOptions\r\n                });\r\n                */\r\n                this.loading = false;\r\n            }).catch(error => {\r\n                console.log(error);\r\n                this.setAPIError(error.getApiErrorData());\r\n                this.loading = false;\r\n            });\r\n        },\r\n        loadMetricsByMonthChart: function () {\r\n            _api_js__WEBPACK_IMPORTED_MODULE_1___default().metrics.getPlayStatMetricsByMonth().then(response => {\r\n                const monthNames = [\r\n                    this.$t('dashboard.labels.january'),\r\n                    this.$t('dashboard.labels.february'),\r\n                    this.$t('dashboard.labels.march'),\r\n                    this.$t('dashboard.labels.april'),\r\n                    this.$t('dashboard.labels.may'),\r\n                    this.$t('dashboard.labels.june'),\r\n                    this.$t('dashboard.labels.july'),\r\n                    this.$t('dashboard.labels.august'),\r\n                    this.$t('dashboard.labels.september'),\r\n                    this.$t('dashboard.labels.october'),\r\n                    this.$t('dashboard.labels.november'),\r\n                    this.$t('dashboard.labels.december')\r\n                ];\r\n                let months = [];\r\n                let data = [];\r\n                for (let i = 0; i < response.data.metrics.length; i++) {\r\n                    data.push(response.data.metrics[i].total);\r\n                    months.push(monthNames[response.data.metrics[i].month - 1]);\r\n                }\r\n                if (this.chart) {\r\n                    this.chart.destroy();\r\n                }\r\n                /*\r\n                this.chart = new Chart(document.getElementById('playcount-metrics-chart-month'), {\r\n                    type: 'bar',\r\n                    data: {\r\n                        labels: months,\r\n                        datasets: [\r\n                            {\r\n                                'label': this.$t('dashboard.labels.playStatsByMonth'),\r\n                                'data': data,\r\n                                'backgroundColor': '#3273dc'\r\n                            }\r\n                        ]\r\n                    }, options: commonChartOptions\r\n                });\r\n                */\r\n                this.loading = false;\r\n            }).catch(error => {\r\n                this.setAPIError(error.getApiErrorData());\r\n                this.loading = false;\r\n            });\r\n        },\r\n        loadMetricsByYearChart: function () {\r\n            _api_js__WEBPACK_IMPORTED_MODULE_1___default().metrics.getPlayStatMetricsByYear().then(response => {\r\n                let years = [];\r\n                let data = [];\r\n                for (let i = 0; i < response.data.metrics.length; i++) {\r\n                    data.push(response.data.metrics[i].total);\r\n                    years.push(response.data.metrics[i].year);\r\n                }\r\n                if (this.chart) {\r\n                    this.chart.destroy();\r\n                }\r\n                /*\r\n                this.chart = new Chart(document.getElementById('playcount-metrics-chart-year'), {\r\n                    type: 'bar',\r\n                    data: {\r\n                        labels: years,\r\n                        datasets: [\r\n                            {\r\n                                'label': this.$t('dashboard.labels.playStatsByYear'),\r\n                                'data': data,\r\n                                'backgroundColor': '#3273dc'\r\n                            }\r\n                        ]\r\n                    }, options: commonChartOptions\r\n                });\r\n                */\r\n                this.loading = false;\r\n            }).catch(error => {\r\n                this.setAPIError(error.getApiErrorData());\r\n                this.loading = false;\r\n            });\r\n        },\r\n        loadChart: function () {\r\n            this.clearAPIErrors();\r\n            this.loading = true;\r\n            switch (this.activeInterval) {\r\n                case 'hour':\r\n                    this.loadMetricsByHourChart();\r\n                    break;\r\n                case 'weekDay':\r\n                    this.loadMetricsByWeekDayChart();\r\n                    break;\r\n                case 'month':\r\n                    this.loadMetricsByMonthChart();\r\n                    break;\r\n                case 'year':\r\n                    this.loadMetricsByYearChart();\r\n                    break;\r\n                default:\r\n                    this.loading = false;\r\n                    break;\r\n            }\r\n        },\r\n        changeInterval: function (interval) {\r\n            if (!this.loading) {\r\n                if (interval && interval != this.activeInterval) {\r\n                    this.activeInterval = interval;\r\n                    this.loadChart();\r\n                }\r\n            }\r\n        }\r\n    }\r\n});\n\n//# sourceURL=webpack://spieldose/./src-frontend/scripts/vue-components/dashboard-play-stats.js?");

/***/ }),

/***/ "./src-frontend/scripts/vue-components/dashboard-recent.js":
/*!*****************************************************************!*\
  !*** ./src-frontend/scripts/vue-components/dashboard-recent.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../api.js */ \"./src-frontend/scripts/api.js\");\n/* harmony import */ var _api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_api_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _mixins_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../mixins.js */ \"./src-frontend/scripts/mixins.js\");\n\r\n\r\n\r\nconst template = function () {\r\n    return `\r\n        <section class=\"panel chart height-100\">\r\n            <p class=\"panel-heading\">\r\n                <span class=\"icon\">\r\n                    <i class=\"fas fa-cog fa-spin fa-fw\" v-if=\"loading\"></i>\r\n                    <i class=\"fas fa-exclamation-triangle\" v-else-if=\"hasAPIErrors\"></i>\r\n                    <i class=\"far fa-clock\" v-else></i>\r\n                </span>\r\n                <span>{{ title }}</span>\r\n                <a class=\"icon is-pulled-right\" v-bind:title=\"$t('commonMessages.refreshData')\" v-on:click.prevent=\"load();\"><i class=\"fas fa-redo fa-fw\"></i></a>\r\n            </p>\r\n            <p class=\"panel-tabs\">\r\n                <a v-bind:class=\"{ 'is-active' : isTrackEntity }\" v-on:click.prevent=\"changeEntity('tracks');\">{{ $t(\"dashboard.labels.entityTracks\") }}</a>\r\n                <a v-bind:class=\"{ 'is-active' : isArtistEntity }\" v-on:click.prevent=\"changeEntity('artists');\">{{ $t(\"dashboard.labels.entityArtists\") }}</a>\r\n                <a v-bind:class=\"{ 'is-active' : isAlbumEntity }\" v-on:click.prevent=\"changeEntity('albums');\">{{ $t(\"dashboard.labels.entityAlbums\") }}</a>\r\n            </p>\r\n            <div class=\"panel-block cut-text\">\r\n                <ol v-if=\"hasItems\">\r\n                    <li class=\"is-small\" v-if=\"isTrackEntity\" v-for=\"item, i in items\" v-bind:key=\"i\">\r\n                        <i class=\"cursor-pointer fa-fw fa fa-play\" v-on:click=\"playTrack(item);\" v-bind:title=\"$t('commonLabels.playThisTrack')\"></i>\r\n                        <i class=\"cursor-pointer fa-fw fa fa-plus-square\" v-on:click=\"enqueueTrack(item);\" v-bind:title=\"$t('commonLabels.enqueueThisTrack')\"></i>\r\n                        <span>{{ item.title }}</span>\r\n                        <span v-if=\"item.artist\"> / <a v-bind:title=\"$t('commonLabels.navigateToArtistPage')\" v-on:click.prevent=\"navigateToArtistPage(item.artist);\">{{ item.artist }}</a></span>\r\n                    </li>\r\n                    <li class=\"is-small\" v-if=\"isArtistEntity\" v-for=\"item in items\">\r\n                        <a v-bind:title=\"$t('commonLabels.navigateToArtistPage')\" v-on:click.prevent=\"navigateToArtistPage(item.artist);\">{{ item.artist }}</a>\r\n                    </li>\r\n                    <li class=\"is-small\" v-if=\"isAlbumEntity\" v-for=\"item in items\">\r\n                        <i class=\"cursor-pointer fa fa-play\" v-bind:title=\"$t('commonLabels.playThisAlbum')\" v-on:click=\"playAlbum(item);\" ></i>\r\n                        <i class=\"cursor-pointer fa fa-plus-square\" v-bind:title=\"$t('commonLabels.enqueueThisAlbum')\" v-on:click=\"enqueueAlbum(item);\"></i>\r\n                        <span>{{ item.album }}</span>\r\n                        <span v-if=\"item.artist\"> / <a v-bind:title=\"$t('commonLabels.navigateToArtistPage')\" v-on:click.prevent=\"navigateToArtistPage(item.artist);\">{{ item.artist }}</a></span>\r\n                    </li>\r\n                </ol>\r\n                <p v-else-if=\"! hasItems && ! loading && ! hasAPIErrors\">{{ $t(\"dashboard.errors.notEnoughData\") }}</p>\r\n                <p v-else-if=\"hasAPIErrors\">{{ $t(\"commonErrors.invalidAPIResponse\") }}</p>\r\n            </div>\r\n        </section>\r\n    `;\r\n};\r\n\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\r\n    name: 'spieldose-dashboard-recent',\r\n    template: template(),\r\n    mixins: [\r\n        _mixins_js__WEBPACK_IMPORTED_MODULE_1__.mixinAPIError, _mixins_js__WEBPACK_IMPORTED_MODULE_1__.mixinTopRecentCharts, _mixins_js__WEBPACK_IMPORTED_MODULE_1__.mixinNavigation\r\n    ],\r\n    data: function () {\r\n        return ({\r\n            loading: false,\r\n            actualEntity: 'tracks'\r\n        });\r\n    },\r\n    props: [\r\n        'type', 'title', 'listItemCount'\r\n    ],\r\n    computed: {\r\n        isTrackEntity: function () {\r\n            return (this.actualEntity == 'tracks');\r\n        },\r\n        isArtistEntity: function () {\r\n            return (this.actualEntity == 'artists');\r\n        },\r\n        isAlbumEntity: function () {\r\n            return (this.actualEntity == 'albums');\r\n        },\r\n    },\r\n    methods: {\r\n        loadRecentAddedTracks: function () {\r\n            _api_js__WEBPACK_IMPORTED_MODULE_0___default().metrics.getRecentAddedTracks(this.interval).then(response => {\r\n                if (response.data.metrics && response.data.metrics.length > 0) {\r\n                    this.items = response.data.metrics;\r\n                }\r\n                this.loading = false;\r\n            }).catch(error => {\r\n                this.setAPIError(error.getApiErrorData());\r\n                this.loading = false;\r\n            });\r\n        },\r\n        loadRecentAddedArtists: function () {\r\n            _api_js__WEBPACK_IMPORTED_MODULE_0___default().metrics.getRecentAddedArtists(this.interval).then(response => {\r\n                if (response.data.metrics && response.data.metrics.length > 0) {\r\n                    this.items = response.data.metrics;\r\n                }\r\n                this.loading = false;\r\n            }).catch(error => {\r\n                this.setAPIError(error.getApiErrorData());\r\n                this.loading = false;\r\n            });\r\n        },\r\n        loadRecentAddedAlbums: function () {\r\n            _api_js__WEBPACK_IMPORTED_MODULE_0___default().metrics.getRecentAddedAlbums(this.interval).then(response => {\r\n                if (response.data.metrics && response.data.metrics.length > 0) {\r\n                    this.items = response.data.metrics;\r\n                }\r\n                this.loading = false;\r\n            }).catch(error => {\r\n                this.setAPIError(error.getApiErrorData());\r\n                this.loading = false;\r\n            });\r\n        },\r\n        loadRecentPlayedTracks: function () {\r\n            _api_js__WEBPACK_IMPORTED_MODULE_0___default().metrics.getRecentPlayedTracks(this.interval).then(response => {\r\n                if (response.data.metrics && response.data.metrics.length > 0) {\r\n                    this.items = response.data.metrics;\r\n                }\r\n                this.loading = false;\r\n            }).catch(error => {\r\n                this.setAPIError(error.getApiErrorData());\r\n                this.loading = false;\r\n            });\r\n        },\r\n        loadRecentPlayedArtists: function () {\r\n            _api_js__WEBPACK_IMPORTED_MODULE_0___default().metrics.getRecentPlayedArtists(this.interval).then(response => {\r\n                if (response.data.metrics && response.data.metrics.length > 0) {\r\n                    this.items = response.data.metrics;\r\n                }\r\n                this.loading = false;\r\n            }).catch(error => {\r\n                this.setAPIError(error.getApiErrorData());\r\n                this.loading = false;\r\n            });\r\n        },\r\n        loadRecentPlayedAlbums: function () {\r\n            _api_js__WEBPACK_IMPORTED_MODULE_0___default().metrics.getRecentPlayedAlbums(this.interval).then(response => {\r\n                if (response.data.metrics && response.data.metrics.length > 0) {\r\n                    this.items = response.data.metrics;\r\n                }\r\n                this.loading = false;\r\n            }).catch(error => {\r\n                this.setAPIError(error.getApiErrorData());\r\n                this.loading = false;\r\n            });\r\n        },\r\n        load: function () {\r\n            this.clearAPIErrors();\r\n            this.loading = true;\r\n            this.items = [];\r\n            switch (this.type) {\r\n                case 'recentlyAdded':\r\n                    this.loadRecentAdded();\r\n                    break;\r\n                case 'recentlyPlayed':\r\n                    this.loadRecentPlayed();\r\n                    break;\r\n                default:\r\n                    this.loading = false;\r\n                    break;\r\n            }\r\n        },\r\n        loadRecentAdded: function () {\r\n            switch (this.actualEntity) {\r\n                case 'tracks':\r\n                    this.loadRecentAddedTracks();\r\n                    break;\r\n                case 'artists':\r\n                    this.loadRecentAddedArtists();\r\n                    break;\r\n                case 'albums':\r\n                    this.loadRecentAddedAlbums();\r\n                    break;\r\n                default:\r\n                    this.loading = false;\r\n                    break;\r\n            }\r\n        },\r\n        loadRecentPlayed: function () {\r\n            switch (this.actualEntity) {\r\n                case 'tracks':\r\n                    this.loadRecentPlayedTracks();\r\n                    break;\r\n                case 'artists':\r\n                    this.loadRecentPlayedArtists();\r\n                    break;\r\n                case 'albums':\r\n                    this.loadRecentPlayedAlbums();\r\n                    break;\r\n                default:\r\n                    this.loading = false;\r\n                    break;\r\n            }\r\n        },\r\n        changeEntity: function (entity) {\r\n            if (!this.loading) {\r\n                if (entity && entity != this.actualEntity) {\r\n                    this.actualEntity = entity;\r\n                    this.load();\r\n                }\r\n            }\r\n        },\r\n        playAlbum: function (album) {\r\n            // TODO\r\n        },\r\n        enqueueAlbum: function (album) {\r\n            // TODO\r\n        }\r\n    }\r\n});\n\n//# sourceURL=webpack://spieldose/./src-frontend/scripts/vue-components/dashboard-recent.js?");

/***/ }),

/***/ "./src-frontend/scripts/vue-components/dashboard-toplist.js":
/*!******************************************************************!*\
  !*** ./src-frontend/scripts/vue-components/dashboard-toplist.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../api.js */ \"./src-frontend/scripts/api.js\");\n/* harmony import */ var _api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_api_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _mixins_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../mixins.js */ \"./src-frontend/scripts/mixins.js\");\n\r\n\r\n\r\nconst template = function () {\r\n    return `\r\n        <section class=\"panel chart height-100\">\r\n            <p class=\"panel-heading\">\r\n                <span class=\"icon\">\r\n                    <i class=\"fas fa-cog fa-spin fa-fw\" v-if=\"loading\"></i>\r\n                    <i class=\"fas fa-exclamation-triangle\" v-else-if=\"hasAPIErrors\"></i>\r\n                    <i class=\"fas fa-list\" v-else></i>\r\n                </span>\r\n                <span>{{ title }}</span>\r\n                <a class=\"icon is-pulled-right\" v-bind:title=\"$t('commonMessages.refreshData')\" v-on:click.prevent=\"load();\"><i class=\"fas fa-redo fa-fw2\"></i></a>\r\n            </p>\r\n            <p class=\"panel-tabs\">\r\n                <a v-bind:class=\"{ 'is-active' : isAllTimeInterval }\" v-on:click.prevent=\"changeInterval(0);\">{{ $t(\"dashboard.labels.allTimeInterval\") }}</a>\r\n                <a v-bind:class=\"{ 'is-active' : isPastWeekInterval }\" v-on:click.prevent=\"changeInterval(1);\">{{ $t(\"dashboard.labels.pastWeekInterval\") }}</a>\r\n                <a v-bind:class=\"{ 'is-active' : isPastMonthInterval }\" v-on:click.prevent=\"changeInterval(2);\">{{ $t(\"dashboard.labels.pastMonthInterval\") }}</a>\r\n                <a v-bind:class=\"{ 'is-active' : isPastSemesterInterval }\" v-on:click.prevent=\"changeInterval(3);\">{{ $t(\"dashboard.labels.pastSemesterInterval\") }}</a>\r\n                <a v-bind:class=\"{ 'is-active' : isPastYearInterval }\" v-on:click.prevent=\"changeInterval(4);\">{{ $t(\"dashboard.labels.pastYearInterval\") }}</a>\r\n            </p>\r\n            <div class=\"panel-block cut-text\">\r\n                <ol v-if=\"items.length > 0\">\r\n                    <li class=\"is-small\" v-if=\"isTopTracksType\" v-for=\"item, i in items\" v-bind:key=\"i\">\r\n                        <i class=\"cursor-pointer fa-fw fa fa-play mr-1\" v-on:click=\"playTrack(item);\" v-bind:title=\"$t('commonLabels.playThisTrack')\"></i>\r\n                        <i class=\"cursor-pointer fa-fw fa fa-plus-square mr-1\" v-on:click=\"enqueueTrack(item);\" v-bind:title=\"$t('commonLabels.enqueueThisTrack')\"></i>\r\n                        <span>{{ item.title }}</span>\r\n                        <span v-if=\"item.artist\"> / <a v-bind:title=\"$t('commonLabels.navigateToArtistPage')\" v-on:click.prevent=\"navigateToArtistPage(item.artist);\">{{ item.artist }}</a></span>\r\n                        <span v-if=\"showPlayCount\"> ({{ item.total }} {{ $t('dashboard.labels.playCount') }})</span>\r\n                    </li>\r\n                    <li class=\"is-small\" v-if=\"isTopArtistsType\" v-for=\"item in items\">\r\n                        <a v-bind:title=\"$t('commonLabels.navigateToArtistPage')\" v-on:click.prevent=\"navigateToArtistPage(item.artist);\">{{ item.artist }}</a>\r\n                        <span v-if=\"showPlayCount\"> ({{ item.total }} {{ $t('dashboard.labels.playCount') }})</span>\r\n                    </li>\r\n                    <li class=\"is-small\" v-if=\"isTopGenresType\" v-for=\"item in items\">\r\n                        <span>{{ item.genre }}</span>\r\n                        <span v-if=\"showPlayCount\"> ({{ item.total }} {{ $t('dashboard.labels.playCount') }})</span>\r\n                    </li>\r\n                </ol>\r\n                <p v-else-if=\"! hasItems && ! loading && ! hasAPIErrors\">{{ $t(\"dashboard.errors.notEnoughData\") }}</p>\r\n                <p v-else-if=\"hasAPIErrors\">{{ $t(\"commonErrors.invalidAPIResponse\") }}</p>\r\n            </div>\r\n        </section>\r\n    `;\r\n};\r\n\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\r\n    name: 'spieldose-dashboard-toplist',\r\n    template: template(),\r\n    mixins: [\r\n        _mixins_js__WEBPACK_IMPORTED_MODULE_1__.mixinAPIError, _mixins_js__WEBPACK_IMPORTED_MODULE_1__.mixinTopRecentCharts, _mixins_js__WEBPACK_IMPORTED_MODULE_1__.mixinNavigation\r\n    ],\r\n    data: function () {\r\n        return ({\r\n            loading: false,\r\n            activeInterval: 0\r\n        });\r\n    },\r\n    props: [\r\n        'type', 'title', 'listItemCount', 'showPlayCount', 'artist'\r\n    ],\r\n    computed: {\r\n        isAllTimeInterval: function () {\r\n            return (this.activeInterval == 0);\r\n        },\r\n        isPastWeekInterval: function () {\r\n            return (this.activeInterval == 1);\r\n        },\r\n        isPastMonthInterval: function () {\r\n            return (this.activeInterval == 2);\r\n        },\r\n        isPastSemesterInterval: function () {\r\n            return (this.activeInterval == 3);\r\n        },\r\n        isPastYearInterval: function () {\r\n            return (this.activeInterval == 4);\r\n        },\r\n        isTopTracksType: function () {\r\n            return (this.type == 'topTracks');\r\n        },\r\n        isTopArtistsType: function () {\r\n            return (this.type == 'topArtists');\r\n        },\r\n        isTopGenresType: function () {\r\n            return (this.type == 'topGenres');\r\n        }\r\n    },\r\n    methods: {\r\n        loadTopPlayedTracks: function () {\r\n            _api_js__WEBPACK_IMPORTED_MODULE_0___default().metrics.getTopPlayedTracks(this.activeInterval, this.artist).then(response => {\r\n                if (response.data.metrics && response.data.metrics.length > 0) {\r\n                    this.items = response.data.metrics;\r\n                }\r\n                this.loading = false;\r\n            }).catch(error => {\r\n                this.setAPIError(error.getApiErrorData());\r\n                this.loading = false;\r\n            });\r\n        }, loadTopPlayedArtists: function () {\r\n            _api_js__WEBPACK_IMPORTED_MODULE_0___default().metrics.getTopPlayedArtists(this.activeInterval).then(response => {\r\n                if (response.data.metrics && response.data.metrics.length > 0) {\r\n                    this.items = response.data.metrics;\r\n                }\r\n                this.loading = false;\r\n            }).catch(error => {\r\n                this.setAPIError(error.getApiErrorData());\r\n                this.loading = false;\r\n            });\r\n        }, loadTopPlayedGenres: function () {\r\n            _api_js__WEBPACK_IMPORTED_MODULE_0___default().metrics.getTopPlayedGenres(this.activeInterval).then(response => {\r\n                if (response.data.metrics && response.data.metrics.length > 0) {\r\n                    this.items = response.data.metrics;\r\n                }\r\n                this.loading = false;\r\n            }).catch(error => {\r\n                this.setAPIError(error.getApiErrorData());\r\n                this.loading = false;\r\n            });\r\n        }, changeInterval: function (interval) {\r\n            if (!this.loading) {\r\n                if (this.activeInterval != interval) {\r\n                    this.activeInterval = interval;\r\n                    this.load();\r\n                }\r\n            }\r\n        }, load: function () {\r\n            this.clearAPIErrors();\r\n            this.loading = true;\r\n            this.items = [];\r\n            switch (this.type) {\r\n                case 'topTracks':\r\n                    this.loadTopPlayedTracks();\r\n                    break;\r\n                case 'topArtists':\r\n                    this.loadTopPlayedArtists();\r\n                    break;\r\n                case 'topGenres':\r\n                    this.loadTopPlayedGenres();\r\n                    break;\r\n                default:\r\n                    this.loading = false;\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n});\n\n//# sourceURL=webpack://spieldose/./src-frontend/scripts/vue-components/dashboard-toplist.js?");

/***/ }),

/***/ "./src-frontend/scripts/vue-components/dashboard.js":
/*!**********************************************************!*\
  !*** ./src-frontend/scripts/vue-components/dashboard.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _dashboard_toplist_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dashboard-toplist.js */ \"./src-frontend/scripts/vue-components/dashboard-toplist.js\");\n/* harmony import */ var _dashboard_recent_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dashboard-recent.js */ \"./src-frontend/scripts/vue-components/dashboard-recent.js\");\n/* harmony import */ var _dashboard_play_stats_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dashboard-play-stats.js */ \"./src-frontend/scripts/vue-components/dashboard-play-stats.js\");\n\r\n\r\n\r\n\r\nconst template = function () {\r\n    return `\r\n        <!-- dashboard template inspired by daniel (https://github.com/dansup) -->\r\n        <div class=\"container is-fluid box is-marginless is-unselectable\">\r\n            <p class=\"title is-1 has-text-centered\">{{ $t(\"menu.labels.dashboard\") }}</p>\r\n            <div class=\"columns is-mobile is-multiline\">\r\n                <div class=\"column is-one-third-desktop is-full-mobile\">\r\n                    <spieldose-dashboard-toplist v-bind:type=\"'topTracks'\" v-bind:title=\"$t('dashboard.labels.topPlayedTracks')\" v-bind:listItemCount=\"5\" v-bind:showPlayCount=\"false\"></spieldose-dashboard-toplist>\r\n                </div>\r\n                <div class=\"column is-one-third-desktop is-full-mobile\">\r\n                    <spieldose-dashboard-toplist v-bind:type=\"'topArtists'\" v-bind:title=\"$t('dashboard.labels.topPlayedArtists')\" v-bind:listItemCount=\"5\" v-bind:showPlayCount=\"false\"></spieldose-dashboard-toplist>\r\n                </div>\r\n                <div class=\"column is-one-third-desktop is-full-mobile\">\r\n                    <spieldose-dashboard-toplist v-bind:type=\"'topGenres'\" v-bind:title=\"$t('dashboard.labels.topPlayedGenres')\" v-bind:listItemCount=\"5\" v-bind:showPlayCount=\"false\"></spieldose-dashboard-toplist>\r\n                </div>\r\n            </div>\r\n            <div class=\"columns is-mobile is-multiline\">\r\n                <div class=\"column is-one-third-desktop is-full-mobile\">\r\n                    <spieldose-dashboard-recent v-bind:type=\"'recentlyAdded'\" v-bind:title=\"$t('dashboard.labels.recentlyAdded')\" v-bind:listItemCount=\"5\"></spieldose-dashboard-recent>\r\n                </div>\r\n                <div class=\"column is-one-third-desktop is-full-mobile\">\r\n                    <spieldose-dashboard-recent v-bind:type=\"'recentlyPlayed'\" v-bind:title=\"$t('dashboard.labels.recentlyPlayed')\" v-bind:listItemCount=\"5\"></spieldose-dashboard-recent>\r\n                </div>\r\n            </div>\r\n            <div class=\"columns is-mobile is-multiline\">\r\n                <div class=\"column is-full-mobile\">\r\n                    <spieldose-dashboard-play-stats></spieldose-dashboard-play-stats>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    `;\r\n};\r\n\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\r\n    name: 'spieldose-dashboard',\r\n    template: template(),\r\n    components: {\r\n    'spieldose-dashboard-toplist': _dashboard_toplist_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"],\r\n    'spieldose-dashboard-recent': _dashboard_recent_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"],\r\n    'spieldose-dashboard-play-stats': _dashboard_play_stats_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]\r\n    }\r\n});\n\n//# sourceURL=webpack://spieldose/./src-frontend/scripts/vue-components/dashboard.js?");

/***/ }),

/***/ "./src-frontend/scripts/vue-components/delete-confirmation-modal.js":
/*!**************************************************************************!*\
  !*** ./src-frontend/scripts/vue-components/delete-confirmation-modal.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nconst template = function () {\r\n    return `\r\n        <div class=\"modal is-active\">\r\n            <div class=\"modal-background\"></div>\r\n            <div class=\"modal-card\">\r\n            <header class=\"modal-card-head\">\r\n                <p class=\"modal-card-title\"><span class=\"icon\"><i class=\"fa fa-exclamation-triangle\"></i></span> {{ $t(\"deleteConfirmationModal.labels.modalTitle\") }}</p>\r\n                <button class=\"delete\" aria-label=\"close\" v-on:click.prevent=\"cancelDelete();\"></button>\r\n            </header>\r\n            <section class=\"modal-card-body\">\r\n            {{ $t(\"deleteConfirmationModal.labels.modalBody\") }}\r\n            </section>\r\n            <footer class=\"modal-card-foot\">\r\n                <button class=\"button is-danger\" v-on:click.prevent=\"confirmDelete();\"><span class=\"icon\"><i class=\"fa fa-check-circle\"></i></span><span>{{ $t(\"deleteConfirmationModal.buttons.ok\") }}</span></button>\r\n                <button class=\"button\" v-on:click.prevent=\"cancelDelete();\"><span class=\"icon\"><i class=\"fa fa-ban\"></i></span><span>{{ $t(\"deleteConfirmationModal.buttons.cancel\") }}</span></button>\r\n            </footer>\r\n            </div>\r\n        </div>\r\n    `;\r\n};\r\n\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\r\n    name: 'delete-confirmation-modal',\r\n\r\n    template: template(),\r\n    props: ['id'],\r\n    methods: {\r\n        confirmDelete: function () {\r\n            this.$emit('confirm-delete', this.id);\r\n        },\r\n        cancelDelete: function () {\r\n            this.$emit('cancel-delete');\r\n        }\r\n    }\r\n});\n\n//# sourceURL=webpack://spieldose/./src-frontend/scripts/vue-components/delete-confirmation-modal.js?");

/***/ }),

/***/ "./src-frontend/scripts/vue-components/input-typeahead.js":
/*!****************************************************************!*\
  !*** ./src-frontend/scripts/vue-components/input-typeahead.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nconst template = function () {\r\n    return `\r\n        <input class=\"input\" type=\"text\" v-bind:placeholder=\"placeholder\" v-bind:disabled=\"loading\" v-model.trim=\"text\" v-on:keyup.esc=\"onClear\" v-on:keyup=\"onChange\">\r\n    `;\r\n};\r\n\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\r\n    name: 'spieldose-input-typeahead',\r\n    template: template(),\r\n    data: function () {\r\n        return ({\r\n            text: null,\r\n            timeout: null\r\n        });\r\n    },\r\n    props: [\r\n        'placeholder', 'loading'\r\n    ],\r\n    methods: {\r\n        onClear: function () {\r\n            this.text = null;\r\n        },\r\n        onChange: function (e) {\r\n            if (e.key != 'Alt' && e.key != 'Tab' && e.key != 'Control' && e.key != 'Shift' && e.key != 'CapsLock' && e.key != 'AltGraph' && e.key != 'Enter' && e.key != 'ArrowLeft' && e.key != 'ArrowRight' && e.key != 'ArrowUp' && e.key != 'ArrowDown') {\r\n                if (this.timeout) {\r\n                    clearTimeout(this.timeout);\r\n                }\r\n                this.timeout = setTimeout(() => {\r\n                    this.$emit('on-value-change', this.text);\r\n                }, 256);\r\n            }\r\n        }\r\n    }\r\n});\n\n//# sourceURL=webpack://spieldose/./src-frontend/scripts/vue-components/input-typeahead.js?");

/***/ }),

/***/ "./src-frontend/scripts/vue-components/menu.js":
/*!*****************************************************!*\
  !*** ./src-frontend/scripts/vue-components/menu.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nconst template = function () {\r\n    return `\r\n        <nav id=\"menu\" class=\"panel is-unselectable\">\r\n            <p class=\"panel-heading\">{{ $t(\"menu.labels.header\") }}</p>\r\n            <!--\r\n            <a class=\"panel-block\" v-bind:class=\"{ 'is-active': isSectionActive('dashboard') }\" v-on:click.prevent=\"changeSection('dashboard');\">\r\n                <span class=\"panel-icon\"><i class=\"fas fa-chart-line\"></i></span>\r\n                <span>{{ $t(\"menu.labels.dashboard\") }}</span>\r\n            </a>\r\n            <a class=\"panel-block\" v-bind:class=\"{ 'is-active': isSectionActive('nowPlaying') }\" v-on:click.prevent=\"changeSection('nowPlaying');\">\r\n                <span class=\"panel-icon\"><i class=\"fas fa-headphones\"></i></span>\r\n                <span>{{ $t(\"menu.labels.currentPlaylist\") }}</span>\r\n            </a>\r\n            <a class=\"panel-block\" v-bind:class=\"{ 'is-active': isSectionActive('search') }\" v-on:click.prevent=\"changeSection('search');\">\r\n                <span class=\"panel-icon\"><i class=\"fas fa-search\"></i></span>\r\n                <span>{{ $t(\"menu.labels.search\") }}</span>\r\n            </a>\r\n            <a class=\"panel-block\" v-bind:class=\"{ 'is-active': isSectionActive('artists') }\" v-on:click.prevent=\"changeSection('artists');\">\r\n                <span class=\"panel-icon\"><i class=\"fas fa-user\"></i></span>\r\n                <span>{{ $t(\"menu.labels.browseArtists\") }}</span>\r\n            </a>\r\n            <a class=\"panel-block\" v-bind:class=\"{ 'is-active': isSectionActive('albums') }\" v-on:click.prevent=\"changeSection('albums');\">\r\n                <span class=\"panel-icon\"><i class=\"fas fa-circle\"></i></span>\r\n                <span>{{ $t(\"menu.labels.browseAlbums\") }}</span>\r\n            </a>\r\n            <a class=\"panel-block\" v-bind:class=\"{ 'is-active': isSectionActive('paths') }\" v-on:click.prevent=\"changeSection('paths');\">\r\n                <span class=\"panel-icon\"><i class=\"fas fa-folder-open\"></i></span>\r\n                <span>{{ $t(\"menu.labels.browsePaths\") }}</span>\r\n            </a>\r\n            <a class=\"panel-block\" v-bind:class=\"{ 'is-active': isSectionActive('playlists') }\" v-on:click.prevent=\"changeSection('playlists');\">\r\n                <span class=\"panel-icon\"><i class=\"fas fa-list-alt\"></i></span>\r\n                <span>{{ $t(\"menu.labels.browsePlaylists\") }}</span>\r\n            </a>\r\n            <a class=\"panel-block\" v-bind:class=\"{ 'is-active': isSectionActive('radioStations') }\" v-on:click.prevent=\"changeSection('radioStations');\">\r\n                <span class=\"panel-icon\"><i class=\"fas fa-broadcast-tower\"></i></span>\r\n                <span>{{ $t(\"menu.labels.browseRadioStations\") }}</span>\r\n            </a>\r\n            -->\r\n            <a class=\"panel-block\" v-on:click.prevent=\"signOut();\">\r\n                <span class=\"panel-icon\"><i class=\"fas fa-sign-out-alt\"></i></span>\r\n                <span>{{ $t(\"menu.labels.signOut\") }}</span>\r\n            </a>\r\n        </nav>\r\n    `;\r\n};\r\n\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\r\n    name: 'spieldose-menu-component',\r\n    template: template(),\r\n    methods: {\r\n        signOut: function (e) {\r\n            this.$api.session.signOut().then(response => {\r\n                this.$spieldoseLocalStorage.remove(\"jwt\");\r\n                this.$router.push({ name: 'signin' });\r\n            }).catch(error => { console.log(error); });\r\n        }\r\n    }\r\n});\n\n//# sourceURL=webpack://spieldose/./src-frontend/scripts/vue-components/menu.js?");

/***/ }),

/***/ "./src-frontend/scripts/vue-components/pagination.js":
/*!***********************************************************!*\
  !*** ./src-frontend/scripts/vue-components/pagination.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nconst template = function () {\r\n    return `\r\n        <div>\r\n            <nav class=\"pagination is-centered level\" v-if=\"visible\">\r\n                <a class=\"button is-link pagination-previous\" v-bind:disabled=\"loading\" v-on:click.prevent=\"previous();\">\r\n                    <span class=\"icon is-small\"><i class=\"fas fa-caret-left\" aria-hidden=\"true\"></i></span>\r\n                    <span>{{ $t(\"pagination.buttons.previousPage\") }}</span>\r\n                    </a>\r\n                <a class=\"button is-link pagination-next\" v-bind:disabled=\"loading\" v-on:click.prevent=\"next();\">\r\n                    <span>{{ $t(\"pagination.buttons.nextPage\") }}</span>\r\n                    <span class=\"icon is-small\"><i class=\"fas fa-caret-right\" aria-hidden=\"true\"></i></span>\r\n                </a>\r\n                <ul class=\"pagination-list\">\r\n                    <!-- vuejs pagination inspired by Jeff (https://stackoverflow.com/a/35706926) -->\r\n                    <li v-for=\"pageNumber in data.totalPages\" v-if=\"showIntermediatePage(pageNumber)\">\r\n                        <a class=\"pagination-link\" :class=\"{'is-current': isCurrentPage(pageNumber) }\" v-bind:disabled=\"loading\" v-on:click.prevent=\"navigateTo(pageNumber);\">{{ pageNumber }}</a>\r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n            <div class=\"notification is-warning\" v-if=\"invalidPage\">{{ $t(\"pagination.labels.invalidPageOrNoResults\") }}</div>\r\n            <div class=\"is-clearfix\" v-else></div>\r\n        </div>\r\n    `;\r\n};\r\n\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\r\n    name: 'spieldose-pagination',\r\n    template: template(),\r\n    props: [\r\n        'data', 'loading'\r\n    ],\r\n    computed: {\r\n        visible: function () {\r\n            return (this.data && this.data.totalPages > 1);\r\n        },\r\n        invalidPage: function () {\r\n            return (this.data.totalPages > 0 && (this.data.actualPage < 1 || this.data.actualPage > this.data.totalPages));\r\n        }\r\n    },\r\n    methods: {\r\n        previous: function () {\r\n            if (!this.loading) {\r\n                if (this.data.actualPage > 1) {\r\n                    this.data.actualPage--;\r\n                    this.$emit('pagination-changed', this.data.actualPage);\r\n                }\r\n            }\r\n        },\r\n        next: function () {\r\n            if (!this.loading) {\r\n                if (this.data.actualPage < this.data.totalPages) {\r\n                    this.data.actualPage++;\r\n                    this.$emit('pagination-changed', this.data.actualPage);\r\n                }\r\n            }\r\n        },\r\n        navigateTo: function (pageIdx) {\r\n            if (!this.loading) {\r\n                if (pageIdx > 0 && pageIdx <= this.data.totalPages) {\r\n                    this.data.actualPage = pageIdx;\r\n                    this.$emit('pagination-changed', this.data.actualPage);\r\n                }\r\n            }\r\n        },\r\n        showIntermediatePage: function (pageNumber) {\r\n            return (pageNumber < 3 || Math.abs(pageNumber - this.data.actualPage) < 3 || this.data.totalPages - 2 < pageNumber);\r\n        },\r\n        isCurrentPage: function (pageNumber) {\r\n            return (this.data.actualPage === pageNumber);\r\n        }\r\n    }\r\n});\n\n//# sourceURL=webpack://spieldose/./src-frontend/scripts/vue-components/pagination.js?");

/***/ }),

/***/ "./src-frontend/scripts/vue-components/player-navbar.js":
/*!**************************************************************!*\
  !*** ./src-frontend/scripts/vue-components/player-navbar.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nconst template = function () {\r\n    return `\r\n        <nav class=\"navbar is-light is-fixed-bottom is-unselectable\" role=\"navigation\" aria-label=\"main navigation\" v-show=\"showPlayerNavBar\">\r\n            <div class=\"navbar-menu\">\r\n                <div class=\"navbar-start\">\r\n                    <div class=\"navbar-item has-dropdown has-dropdown-up is-hoverable\">\r\n                        <a class=\"navbar-link\">\r\n                            <span class=\"icon\"><i class=\"fas fa-bars\"></i></span>\r\n                            <span>{{ $t('menu.labels.header') }}</span>\r\n                        </a>\r\n                        <div class=\"navbar-dropdown\">\r\n                            <a v-on:click.prevent=\"$router.push({ name: 'dashboard' })\" class=\"navbar-item\" v-bind:class=\"{ 'is-active': $route.name == 'dashboard'}\">\r\n                            <span class=\"panel-icon\"><i class=\"fas fa-chart-line\"></i></span>\r\n                            {{ $t('menu.labels.dashboard') }}\r\n                            </a>\r\n                            <a v-on:click.prevent=\"$router.push({ name: 'nowPlaying' })\" class=\"navbar-item\" v-bind:class=\"{ 'is-active': $route.name == 'nowPlaying'}\">\r\n                            <span class=\"panel-icon\"><i class=\"fas fa-headphones\"></i></span>\r\n                            {{ $t('menu.labels.currentPlaylist') }}\r\n                            </a>\r\n                            <a v-on:click.prevent=\"$router.push({ name: 'search' })\" class=\"navbar-item\" v-bind:class=\"{ 'is-active': $route.name == 'search'}\">\r\n                            <span class=\"panel-icon\"><i class=\"fas fa-search\"></i></span>\r\n                            {{ $t('menu.labels.search') }}\r\n                            </a>\r\n                            <a v-on:click.prevent=\"$router.push({ name: 'artists' })\" class=\"navbar-item\" v-bind:class=\"{ 'is-active': $route.name == 'artists'}\">\r\n                            <span class=\"panel-icon\"><i class=\"fas fa-user\"></i></span>\r\n                            {{ $t('menu.labels.browseArtists') }}\r\n                            </a>\r\n                            <a v-on:click.prevent=\"$router.push({ name: 'albums' })\" class=\"navbar-item\" v-bind:class=\"{ 'is-active': $route.name == 'albums'}\">\r\n                            <span class=\"panel-icon\"><i class=\"fas fa-circle\"></i></span>\r\n                            {{ $t('menu.labels.browseAlbums') }}\r\n                            </a>\r\n                            <a v-on:click.prevent=\"$router.push({ name: 'paths' })\" class=\"navbar-item\" v-bind:class=\"{ 'is-active': $route.name == 'paths'}\">\r\n                            <span class=\"panel-icon\"><i class=\"fas fa-folder-open\"></i></span>\r\n                            {{ $t('menu.labels.browsePaths') }}\r\n                            </a>\r\n                            <a v-on:click.prevent=\"$router.push({ name: 'playlists' })\" class=\"navbar-item\" v-bind:class=\"{ 'is-active': $route.name == 'playlists'}\">\r\n                            <span class=\"panel-icon\"><i class=\"fas fa-list-alt\"></i></span>\r\n                            {{ $t('menu.labels.browsePlaylists') }}\r\n                            </a>\r\n                            <a v-on:click.prevent=\"signOut();\" class=\"navbar-item\">\r\n                            <span class=\"panel-icon\"><i class=\"fas fa-sign-out-alt\"></i></span>\r\n                            {{ $t('menu.labels.signOut') }}\r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"navbar-item\">\r\n                        <img v-bind:src=\"coverSrc\" style=\"width: 64px; max-height: 64px;\">\r\n                    </div>\r\n                    <div class=\"navbar-item player-buttons\">\r\n                        <span v-bind:title=\"$t('player.buttons.previousTrackHint')\" id=\"btn-previous\" v-on:click.prevent=\"$audioplayer.currentPlaylist.playPrevious();\" class=\"icon\"><i class=\"fas fa-2x fa-step-backward\"></i></span>\r\n                        <span v-bind:title=\"$t('player.buttons.pauseTrackHint')\" id=\"btn-pause\" v-on:click.prevent=\"$audioplayer.playback.pause();\" v-if=\"$audioplayer.isPlaying\" class=\"icon\"><i class=\"fas fa-2x fa-pause\"></i></span>\r\n                        <span v-bind:title=\"$t('player.buttons.playTrackHint')\" id=\"btn-play\" v-on:click.prevent=\"$audioplayer.playback.play();\" v-else class=\"icon\"><i class=\"fas fa-2x fa-play\"></i></span>\r\n                        <span v-bind:title=\"$t('player.buttons.nextTrackHint')\" id=\"btn-next\" v-on:click.prevent=\"$audioplayer.currentPlaylist.playNext();\" class=\"icon\"><i class=\"fas fa-2x fa-step-forward\"></i></span>\r\n                    </div>\r\n                    <div class=\"navbar-item\">\r\n                        <div>\r\n                            <p class=\"title is-3\">{{ nowPlayingTitle }}</p>\r\n                            <p class=\"subtitle is-5\">{{nowPlayingArtist }}</p>\r\n                        </div>\r\n                    </div>\r\n                    <!--\r\n                    <div class=\"navbar-item\">\r\n                        <nav class=\"level is-marginless\">\r\n                            <div class=\"level-left\">\r\n                                <span id=\"song-current-time\" class=\"level-item has-text-grey\">{{ currentPlayedSeconds }}</span>\r\n                            </div>\r\n                            <div class=\"level-item\">\r\n                                <input id=\"song-played-progress\" class=\"is-pulled-left\" type=\"range\" v-model=\"songProgress\" min=\"0\" max=\"1\" step=\"0.01\" />\r\n                            </div>\r\n                            <div class=\"level-right\">\r\n                                <span id=\"song-duration\" class=\"level-item has-text-grey\">{{ nowPlayingLength }}</span>\r\n                            </div>\r\n                        </nav>\r\n                    </div>\r\n                    -->\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    `;\r\n};\r\n\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\r\n    name: 'player-navbar',\r\n    template: template(),\r\n    data: function () {\r\n        return ({\r\n            showPlayerNavBar: false,\r\n            playerVisibilityObserver: null\r\n        });\r\n    },\r\n    created: function () {\r\n        /*\r\n        bus.on('showPlayerNavBar', () => {\r\n            const rootEl = document.documentElement;\r\n            rootEl.classList.add('has-navbar-fixed-bottom');\r\n            this.showPlayerNavBar = true;\r\n        });\r\n        bus.on('hidePlayerNavbar', () => {\r\n            const rootEl = document.documentElement;\r\n            rootEl.classList.remove('has-navbar-fixed-bottom');\r\n            this.showPlayerNavBar = false;\r\n        });\r\n        */\r\n    },\r\n    computed: {\r\n        coverSrc: function () {\r\n            if (this.$audioplayer.currentTrack.track && this.$audioplayer.currentTrack.track.image) {\r\n                if (this.$audioplayer.currentTrack.track.image.indexOf('http') == 0) {\r\n                    return ('api/thumbnail?url=' + encodeURIComponent(this.$audioplayer.currentTrack.track.image));\r\n                } else {\r\n                    return ('api/thumbnail?hash=' + this.$audioplayer.currentTrack.track.image);\r\n                }\r\n            } else {\r\n                return ('images/vinyl.png');\r\n            }\r\n        }\r\n    },\r\n    methods: {\r\n        signOut: function (e) {\r\n            console.log(e);\r\n            this.$api.session.signOut().then(response => {\r\n                this.$spieldoseLocalStorage.remove(\"jwt\");\r\n                this.$router.push({ name: 'signin' });\r\n            }).catch(error => { console.log(error); });\r\n        }\r\n    }\r\n});\n\n//# sourceURL=webpack://spieldose/./src-frontend/scripts/vue-components/player-navbar.js?");

/***/ }),

/***/ "./src-frontend/scripts/vue-components/player.js":
/*!*******************************************************!*\
  !*** ./src-frontend/scripts/vue-components/player.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var audiomotion_analyzer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! audiomotion-analyzer */ \"./node_modules/audiomotion-analyzer/src/audioMotion-analyzer.js\");\n\r\n\r\nconst template = function () {\r\n    return `\r\n        <div class=\"\">\r\n            <audio id=\"audio\" class=\"is-hidden\"></audio>\r\n            <div class=\"player__body\" style=\"max-width: 400px;\">\r\n            <div class=\"body__cover\">\r\n                <ul class=\"list list--cover\">\r\n                    <li>\r\n                        <slot name=\"top-left-icon\"></slot>\r\n                    </li>\r\n                    <li>\r\n                        <a class=\"list__link\" href=\"\"></a>\r\n                    </li>\r\n                    <li>\r\n                        <slot name=\"top-right-icon\"></slot>\r\n                    </li>\r\n                </ul>\r\n                <div v-if=\"rotateVinyl\" @click.prevent=\"rotateVinyl =! rotateVinyl\">\r\n                    <div id=\"rotating_album_cover\" :class=\"{'is_rotating_album_cover': true }\">\r\n                        <img v-if=\"coverURL\" :src=\"coverURL\" alt=\"Album cover\" @error=\"coverURL = null\"/>\r\n                    </div>\r\n                </div>\r\n                <div v-else @click.prevent=\"rotateVinyl =! rotateVinyl\">\r\n                    <img v-if=\"coverURL\" :src=\"coverURL\" alt=\"Album cover\" @error=\"coverURL = null\"/>\r\n                    <img v-else src=\"images/vinyl.png\" alt=\"Vinyl\" />\r\n                </div>\r\n                <!--\r\n                <div class=\"range\"></div>\r\n                -->\r\n            </div>\r\n\r\n            <div id=\"container\" v-if=\"showAnalyzer\" @click=\"onChangeaudioElementMotionAnalyzerMode\" style=\"opacity: 0.9\"></div>\r\n\r\n            <div class=\"body__info\">\r\n                <div class=\"info__album\">{{ track.title }}</div>\r\n\r\n                <div class=\"info__song\">{{ track.album }}</div>\r\n\r\n                <div class=\"info__artist\">{{ track.artist }}</div>\r\n            </div>\r\n\r\n                        <!--\r\n\r\n            <div class=\"field\">\r\n                <div class=\"control has-icons-left has-icons-right\">\r\n                    <span class=\"icon is-left\" style=\"height: 1em;\">\r\n                        <small>{{ currentTime }}</small>\r\n\r\n                    </span>\r\n                    <input style=\"padding-left: 3.5em; padding-right: 3.5em;\"\r\n                        class=\"slider is-fullwidth is-small is-circle\" min=\"0\" max=\"1\" step=\"0.01\" type=\"range\"\r\n                        v-model.number=\"position\">\r\n                    <span class=\"icon is-right\" style=\"height: 1em;\">\r\n                        <small>{{ duration }}</small>\r\n                    </span>\r\n                </div>\r\n            </div>\r\n            -->\r\n\r\n            <div class=\"body__buttons\">\r\n                <ul class=\"list list--buttons\">\r\n                    <li><a href=\"#\" class=\"list__link\" @click.prevent=\"onPreviousTrack\"><i\r\n                                class=\"fa fa-step-backward\"></i></a></li>\r\n\r\n                    <li><a href=\"#\" class=\"list__link\" @click.prevent=\"onPlay\"><i class=\"fa fa-play\"></i></a>\r\n                    </li>\r\n\r\n                    <li><a href=\"#\" class=\"list__link\" @click.prevent=\"onNextTrack\"><i\r\n                                class=\"fa fa-step-forward\"></i></a></li>\r\n                </ul>\r\n                </div>\r\n            </div>\r\n\r\n                        <div class=\"field\">\r\n                <div class=\"control has-icons-left has-icons-right\">\r\n                    <span class=\"icon is-left\" style=\"height: 1em;\">\r\n                        <i class=\"fa-solid fa-volume-high\" style=\"color: #d30320;\" :style=\"'opacity: ' + ((volume / 100)+0.4)\"></i>\r\n                    </span>\r\n                    <input style=\"padding-left: 3.5em; padding-right: 3.5em;\"\r\n                        class=\"slider is-fullwidth is-small is-circle\" step=\"1\" min=\"0\" max=\"100\" type=\"range\"\r\n                        v-model.number=\"volume\">\r\n                        <span class=\"icon is-right\" style=\"height: 1em;\">\r\n                        <small>{{ volume }}%</small>\r\n                    </span>\r\n                </div>\r\n            </div>\r\n\r\n\r\n            <div class=\"player__footer\">\r\n                <ul class=\"list list--footer\">\r\n                    <li><a href=\"#\" class=\"list__link\" title=\"Toggle navigation menu\"><i class=\"fa fa-navicon\"></i></a>\r\n                    </li>\r\n\r\n                    <li><a href=\"#\" class=\"list__link\" title=\"Love/unlove track\"><i class=\"fa fa-heart\"></i></a>\r\n                    </li>\r\n\r\n                    <li><a href=\"#\" class=\"list__link\" title=\"Toggle random sort\"><i class=\"fa fa-random\"></i></a>\r\n                    </li>\r\n\r\n                    <li><a href=\"#\" class=\"list__link\" title=\"Toggle repeat mode\"><i class=\"fa fa-undo\"></i></a>\r\n                    </li>\r\n\r\n                    <li><a href=\"#\" class=\"list__link\" title=\"Download track\"><i class=\"fa-solid fa-download\"></i></a>\r\n                    </li>\r\n\r\n                    <li><a href=\"#\" class=\"list__link\" title=\"Toggle details\"><i\r\n                                class=\"fa-regular fa-rectangle-list\"></i></a></li>\r\n\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    `;\r\n}\r\n\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\r\n    name: 'spieldose-component-player',\r\n    template: template(),\r\n    data: function () {\r\n        return ({\r\n            volume: 8,\r\n            position: 0,\r\n            audioElementMotion: null,\r\n            currentTime: \"00:00\",\r\n            duration: \"00:00\",\r\n            audioElementMotionMode: 3,\r\n            coverURL: null,\r\n            allowStartPlaying: false,\r\n            showAnalyzer: false,\r\n            rotateVinyl: true\r\n\r\n        });\r\n    },\r\n    props: [\r\n        'track'\r\n    ],\r\n    computed: {\r\n        trackId: function () {\r\n            return (this.track ? this.track.id : null);\r\n        },\r\n        isPlaying: function () {\r\n            return (this.audioElement && this.audioElement.currentTime > 0 && !this.audioElement.paused && !this.audioElement.ended && this.audioElement.readyState > 2);\r\n        },\r\n        audioInstance: function () {\r\n            return (this.$audio);\r\n        },\r\n        audioElement: function () {\r\n            return (this.$audio.getElement());\r\n        }\r\n    },\r\n    watch: {\r\n        trackId: function (newValue, oldValue) {\r\n            this.allowStartPlaying = false;\r\n            if (newValue) {\r\n                if (this.audioElement && this.audioElement.currentTime > 0 && !this.audioElement.paused && !this.audioElement.ended && this.audioElement.readyState > 2) {\r\n                    //this.audioElement.stop();\r\n                }\r\n                this.coverURL = null;\r\n                if (this.audioElement) {\r\n                    this.audioElement.src = \"/api2/file/\" + this.track.id;\r\n                    //const url = this.track.thumbnailURL;\r\n                    const url = \"/api2/track/thumbnail/400/400/\" + this.track.id;\r\n                    let img = new Image();\r\n                    img.src = url\r\n                    img.onload = () => {\r\n                        this.coverURL = url;\r\n                    }\r\n                    img.onerror = () => {\r\n                        this.coverURL = null;\r\n                    }\r\n                    this.audioElement.load();\r\n                    //if (newValue && oldValue) {\r\n                    this.onPlay();\r\n                }\r\n                //}\r\n            }\r\n        },\r\n        allowStartPlaying: function (newValue) {\r\n            if (newValue) {\r\n                this.onPlay();\r\n            }\r\n        },\r\n        volume: function (newValue) {\r\n            if (this.audioElement) {\r\n                this.audioInstance.setVolume(this.volume / 100);\r\n            }\r\n        }\r\n    },\r\n    created: function () {\r\n    },\r\n    mounted: function () {\r\n        this.audioElement.addEventListener('canplay', (event) => {\r\n            this.allowStartPlaying = true;\r\n        });\r\n        this.audioInstance.setVolume(this.volume / 100);\r\n        if (this.showAnalyzer) {\r\n            this.audioElementMotion = new audiomotion_analyzer__WEBPACK_IMPORTED_MODULE_0__[\"default\"](\r\n                document.getElementById('container'),\r\n                {\r\n                    source: this.audioElement,\r\n                    mode: this.audioElementMotionMode,\r\n                    height: 40,\r\n                    ledBars: false,\r\n                    showScaleX: false,\r\n                    showScaleY: false,\r\n                    stereo: false,\r\n                    splitGradient: false\r\n                }\r\n            );\r\n        }\r\n    },\r\n    methods: {\r\n        onPreviousTrack: function () {\r\n            this.$emit(\"previous\", true)\r\n        },\r\n        onNextTrack: function () {\r\n            this.$emit(\"next\", true)\r\n        },\r\n        onPlay: function () {\r\n            if (this.isPlaying) {\r\n                this.audioElement.stop();\r\n            }\r\n            let playPromise = this.audioElement.play();\r\n            this.audioElement.addEventListener('timeupdate', (track) => {\r\n                const currentProgress = this.audioElement.currentTime / this.audioElement.duration;\r\n                this.duration = this.formatSecondsAsTime(Math.floor(this.audioElement.duration).toString());\r\n                this.currentTime = this.formatSecondsAsTime(Math.floor(this.audioElement.currentTime).toString());\r\n                if (!isNaN(currentProgress)) {\r\n                    this.position = currentProgress.toFixed(2);\r\n                } else {\r\n                    this.position = 0;\r\n                }\r\n                //this.currentPlayedSeconds = Math.floor(aa.currentTime).toString();\r\n            });\r\n            if (playPromise !== undefined) {\r\n                //console.log(playPromise);\r\n                playPromise.then(() => {\r\n                }).catch((error) => {\r\n                    //this.audioElementplayer.playback.pause();\r\n                    this.audioElement.currentTime = 0;\r\n                });\r\n            }\r\n        },\r\n        formatSecondsAsTime: function (secs, format) {\r\n            var hr = Math.floor(secs / 3600);\r\n            var min = Math.floor((secs - (hr * 3600)) / 60);\r\n            var sec = Math.floor(secs - (hr * 3600) - (min * 60));\r\n\r\n            if (min < 10) {\r\n                min = \"0\" + min;\r\n            }\r\n            if (sec < 10) {\r\n                sec = \"0\" + sec;\r\n            }\r\n\r\n            return min + ':' + sec;\r\n        },\r\n        onChangeaudioElementMotionAnalyzerMode: function () {\r\n            if (this.showAnalyzer) {\r\n                this.audioElementMotionMode++;\r\n                if (this.audioElementMotionMode > 8) {\r\n                    this.audioElementMotionMode = 0;\r\n                }\r\n                this.audioElementMotion.setOptions({ mode: this.audioElementMotionMode });\r\n            }\r\n        }\r\n    }\r\n});\r\n\n\n//# sourceURL=webpack://spieldose/./src-frontend/scripts/vue-components/player.js?");

/***/ }),

/***/ "./src-frontend/scripts/vue-components/search.js":
/*!*******************************************************!*\
  !*** ./src-frontend/scripts/vue-components/search.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../api.js */ \"./src-frontend/scripts/api.js\");\n/* harmony import */ var _api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_api_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _mixins_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../mixins.js */ \"./src-frontend/scripts/mixins.js\");\n/* harmony import */ var _input_typeahead_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./input-typeahead.js */ \"./src-frontend/scripts/vue-components/input-typeahead.js\");\n\r\n\r\n\r\n\r\nconst template = function () {\r\n    return `\r\n        <div class=\"container is-fluid box is-marginless\">\r\n            <p class=\"title is-1 has-text-centered\">{{ $t(\"search.labels.sectionName\") }}</p>\r\n            <div v-if=\"! hasAPIErrors\">\r\n                <div class=\"field has-addons\">\r\n                    <div class=\"control is-expanded has-icons-left\" v-bind:class=\"loading ? 'is-loading': ''\">\r\n                        <spieldose-input-typeahead v-if=\"liveSearch\" v-bind:loading=\"loading\" v-bind:placeholder=\"$t('search.inputs.searchTextPlaceholder')\" v-on:on-value-change=\"onTypeahead\"></spieldose-input-typeahead>\r\n                        <input type=\"text\" class=\"input\" v-bind:placeholder=\"$t('search.inputs.searchTextPlaceholder')\" v-else v-bind:disabled=\"loading\" v-model.trim=\"textFilter\" v-on:keyup.enter=\"search();\">\r\n                        <span class=\"icon is-small is-left\">\r\n                            <i class=\"fas fa-search\"></i>\r\n                        </span>\r\n                    </div>\r\n                    <p class=\"control\" v-if=\"! liveSearch\">\r\n                        <a class=\"button is-info\" v-on:click.prevent=\"search();\">\r\n                            <span class=\"icon\">\r\n                                <i class=\"fas fa-search\" aria-hidden=\"true\"></i>\r\n                            </span>\r\n                            <span>{{ $t(\"search.buttons.search\") }}</span>\r\n                        </a>\r\n                    </p>\r\n                </div>\r\n                <div class=\"columns is-desktop\">\r\n                    <div class=\"column is-one-quarter is-clipped\">\r\n                        <h1 class=\"title is-6 has-text-centered\">{{ $t(\"search.tabs.artists\") }}</h1>\r\n                        <hr class=\"dropdown-divider\">\r\n                        <article class=\"media\" v-for=\"artist, i in artists\" v-bind:key=\"i\">\r\n                            <div class=\"media-left\">\r\n                                <figure class=\"image is-48x48\">\r\n                                    <img class=\"border-radius-50\" v-bind:src=\"getArtistImageUrl(artist.image)\" v-on:error=\"artist.image = null;\">\r\n                                </figure>\r\n                            </div>\r\n                            <div class=\"media-content\">\r\n                                <div class=\"content\">\r\n                                    <p class=\"subtitle is-6\"><a v-bind:title=\"$t('commonLabels.navigateToArtistPage')\" v-on:click.prevent=\"navigateToArtistPage(artist.name);\">{{ artist.name }}</a></p>\r\n                                </div>\r\n                            </div>\r\n                        </article>\r\n                    </div>\r\n                    <div class=\"column is-one-quarter is-clipped\">\r\n                        <h1 class=\"title is-6 has-text-centered\">{{ $t(\"search.tabs.albums\") }}</h1>\r\n                        <hr class=\"dropdown-divider\">\r\n                        <article class=\"media\" v-for=\"album, i in albums\" v-bind:key=\"i\">\r\n                            <div class=\"media-left\">\r\n                                <figure class=\"image is-48x48\">\r\n                                    <img class=\"border-radius-50\" v-bind:src=\"getAlbumImageUrl(album.image)\" v-on:error=\"album.image = null;\"/>\r\n                                </figure>\r\n                            </div>\r\n                            <div class=\"media-content\">\r\n                                <div class=\"content cut-text\">\r\n                                    <p class=\"subtitle is-6\">\r\n                                        <i class=\"cursor-pointer fa-fw fa fa-play\" v-bind:title=\"$t('commonLabels.playThisAlbum')\" v-on:click.prevent=\"playAlbumTracks(album.name, album.artist, album.year);\"></i>\r\n                                        <i class=\"cursor-pointer fa-fw fa fa-plus-square\" v-bind:title=\"$t('commonLabels.enqueueThisAlbum')\" v-on:click.prevent=\"enqueueAlbumTracks(album.name, album.artist, album.year);\"></i>\r\n                                        <span>{{ album.name }}</span>\r\n                                        <br>\r\n                                        <span v-if=\"album.artist\">{{ $t(\"commonLabels.by\" )}} <a v-bind:title=\"$t('commonLabels.navigateToArtistPage')\" v-on:click.prevent=\"navigateToArtistPage(album.artist);\">{{ album.artist }}</a></span>\r\n                                    </p>\r\n                                </div>\r\n                            </div>\r\n                        </article>\r\n                    </div>\r\n                    <div class=\"column is-one-quarter is-clipped\">\r\n                        <h1 class=\"title is-6 has-text-centered\">{{ $t(\"search.tabs.tracks\") }}</h1>\r\n                        <hr class=\"dropdown-divider\">\r\n                        <article class=\"media\" v-for=\"track, i in tracks\" v-bind:key=\"track.id\">\r\n                            <div class=\"media-left\">\r\n                            </div>\r\n                            <div class=\"media-content\">\r\n                                <div class=\"content cut-text\">\r\n                                    <i class=\"cursor-pointer fa-fw fa fa-play\" v-bind:title=\"$t('commonLabels.playThisTrack')\" v-on:click.prevent=\"playTrack(track);\"></i>\r\n                                    <i class=\"cursor-pointer fa-fw fa fa-plus-square\" v-bind:title=\"$t('commonLabels.enqueueThisTrack')\" v-on:click.prevent=\"enqueueTrack(track);\"></i>\r\n                                    <span>{{ track.title }}</span>\r\n                                    <br >\r\n                                    <span v-if=\"track.artist\">{{ $t(\"commonLabels.by\" )}} <a v-bind:title=\"$t('commonLabels.navigateToArtistPage')\" v-on:click.prevent=\"navigateToArtistPage(track.artist);\">{{ track.artist }}</a></span> <span v-if=\"track.album\"> / {{ track.album }}</span>\r\n                                </div>\r\n                            </div>\r\n                        </article>\r\n                    </div>\r\n                    <div class=\"column is-one-quarter is-clipped\">\r\n                        <h1 class=\"title is-6 has-text-centered\">{{ $t(\"search.tabs.playlists\") }}</h1>\r\n                        <hr class=\"dropdown-divider\">\r\n                        <article class=\"media\" v-for=\"playlist in playlists\" v-bind:key=\"playlist.id\">\r\n                            <div class=\"media-left\">\r\n                            </div>\r\n                            <div class=\"media-content\">\r\n                                <div class=\"content cut-text\">\r\n                                    <p class=\"subtitle is-6\">\r\n                                    <i v-on:click=\"playPlaylistTracks(playlist.id);\" class=\"cursor-pointer fa-fw fa fa-play\" v-bind:title=\"$t('commonLabels.playThisPlaylist')\"></i>\r\n                                    <i v-on:click=\"enqueuePlaylistTracks(playlist.id);\" class=\"cursor-pointer fa-fw fa fa-plus-square\" v-bind:title=\"$t('commonLabels.enqueueThisPlaylist')\"></i>\r\n                                    {{ playlist.name }} ({{ playlist.trackCount}} {{$t(\"commonLabels.tracksCount\")}})\r\n                                    </p>\r\n                                </div>\r\n                            </div>\r\n                        </article>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <spieldose-api-error-component v-else v-bind:apiError=\"apiError\"></spieldose-api-error-component>\r\n        </div>\r\n    `;\r\n};\r\n\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\r\n    name: 'spieldose-search',\r\n    template: template(),\r\n    mixins: [\r\n        _mixins_js__WEBPACK_IMPORTED_MODULE_1__.mixinAPIError, _mixins_js__WEBPACK_IMPORTED_MODULE_1__.mixinNavigation, _mixins_js__WEBPACK_IMPORTED_MODULE_1__.mixinLiveSearches, _mixins_js__WEBPACK_IMPORTED_MODULE_1__.mixinAlbums, _mixins_js__WEBPACK_IMPORTED_MODULE_1__.mixinArtists\r\n    ],\r\n    data: function () {\r\n        return ({\r\n            loading: false,\r\n            textFilter: null,\r\n            artists: [],\r\n            albums: [],\r\n            tracks: [],\r\n            playlists: []\r\n        });\r\n    },\r\n    components: {\r\n        'spieldose-input-typeahead': _input_typeahead_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]\r\n    },\r\n    methods: {\r\n        onTypeahead: function (text) {\r\n            this.textFilter = text;\r\n            this.search();\r\n        },\r\n        search: function () {\r\n            this.loading = true;\r\n            this.clearAPIErrors();\r\n            _api_js__WEBPACK_IMPORTED_MODULE_0___default().globalSearch(this.textFilter, 1, 8).then(response => {\r\n                if (response.data.artists && response.data.artists.length > 0) {\r\n                    this.artists = response.data.artists;\r\n                } else {\r\n                    this.artists = [];\r\n                }\r\n                if (response.data.albums && response.data.albums.length > 0) {\r\n                    this.albums = response.data.albums;\r\n                } else {\r\n                    this.albums = [];\r\n                }\r\n                if (response.data.tracks && response.data.tracks.length > 0) {\r\n                    this.tracks = response.data.tracks;\r\n                } else {\r\n                    this.tracks = [];\r\n                }\r\n                if (response.data.playlists && response.data.playlists.length > 0) {\r\n                    this.playlists = response.data.playlists;\r\n                } else {\r\n                    this.playlists = [];\r\n                }\r\n                this.loading = false;\r\n            }).catch(error => {\r\n                this.setAPIError(error.getApiErrorData());\r\n                this.loading = false;\r\n            });\r\n        }\r\n    }\r\n});\n\n//# sourceURL=webpack://spieldose/./src-frontend/scripts/vue-components/search.js?");

/***/ }),

/***/ "./src-frontend/scripts/vue-components/tiles-album-images.js":
/*!*******************************************************************!*\
  !*** ./src-frontend/scripts/vue-components/tiles-album-images.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nconst template = function () {\r\n    return `\r\n        <div class=\"tile is-ancestor\" id=\"container_tiles\">\r\n            <div class=\"tile is-2 is-vertical\" v-for=\"column in [0,1,2,3,4,5]\">\r\n                <div class=\"tile\" v-for=\"row in [0,1,2,3,4,5]\">\r\n                    <img v-if=\"imageURLs.length > 0\" :src=\"getImgSource((5 * column) + row)\" style=\"width: 100%\" class=\"blur\" @error=\"onImageError($event)\">\r\n                    <img src=\"/images/vinyl.png\" v-else>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    `;\r\n};\r\n\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\r\n    name: 'spieldose-tiles-album-images',\r\n    template: template(),\r\n    data: function () {\r\n        return ({\r\n            imageURLs: []\r\n        })\r\n    },\r\n    created: function () {\r\n        this.loadRandomAlbumImages();\r\n    },\r\n    mounted: function () {\r\n    },\r\n    methods: {\r\n        getImgSource: function (index) {\r\n            if (index < this.imageURLs.length) {\r\n                return (this.imageURLs[index]);\r\n            } else {\r\n                return ('/images/vinyl.png');\r\n            }\r\n        },\r\n        loadRandomAlbumImages: function () {\r\n            this.$api.album.getRandomAlbumCoverThumbnails().then(response => {\r\n                this.imageURLs = response.data.coverURLs;\r\n            }).catch(error => {\r\n            });\r\n        },\r\n        onImageError: function (event) {\r\n            event.target.src = '/images/vinyl.png';\r\n        }\r\n    }\r\n});\n\n//# sourceURL=webpack://spieldose/./src-frontend/scripts/vue-components/tiles-album-images.js?");

/***/ }),

/***/ "./src-frontend/scripts/vue-components/upgrade.js":
/*!********************************************************!*\
  !*** ./src-frontend/scripts/vue-components/upgrade.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nconst template = function () {\r\n    return `\r\n        <!-- template credits: daniel (https://github.com/dansup) -->\r\n        <section class=\"hero is-fullheight is-light is-bold\">\r\n            <div class=\"hero-body\">\r\n                <div class=\"container\">\r\n                    <div class=\"columns is-vcentered\">\r\n                        <div class=\"column is-4 is-offset-4\">\r\n                            <h1 class=\"title has-text-centered\"><span class=\"icon is-medium\"><i class=\"fas fa-music\" aria-hidden=\"true\"></i></span> Spieldose <span class=\"icon is-medium\"><i class=\"fas fa-music\" aria-hidden=\"true\"></i></span></h1>\r\n                            <h2 class=\"subtitle is-6 has-text-centered\"><cite>{{ $t(\"commonLabels.slogan\") }}</cite></h2>\r\n                            <div class=\"notification is-warning\" v-if=\"upgradeAvailable\">\r\n                                <p class=\"title is-5\"><span class=\"icon\"><i class=\"fa fa-exclamation-triangle\"></i></span> {{ $t(\"upgrade.labels.newDatabaseVersionAvailable\") }}</p>\r\n                                <hr class=\"has-background-grey-light\">\r\n                                <p class=\"subtitle is-5\">{{ $t(\"upgrade.labels.upgradeRequired\") }}</p>\r\n                                <p>{{ $t(\"upgrade.labels.executeThisCommandline\") }}</p>\r\n                                <p class=\"has-text-weight-bold\">php tools/install-upgrade-db.php</p>\r\n                            </div>\r\n                            <div class=\"notification is-success\" v-else>\r\n                                <p class=\"title is-5\"><span class=\"icon\"><i class=\"fas fa-check\"></i></span> {{ $t(\"upgrade.labels.updateNotRequired\") }}</p>\r\n                            </div>\r\n                            <p class=\"has-text-centered\">\r\n                            <a href=\"https://github.com/aportela/spieldose\" target=\"_blank\"><span class=\"icon is-small\"><i class=\"fab fa-github\"></i></span>{{ $t(\"commonLabels.projectPageLinkLabel\") }}</a> | <a href=\"https://github.com/aportela\" target=\"_blank\">{{ $t(\"commonLabels.authorLinkLabel\") }}</a>\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    `;\r\n};\r\n\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\r\n    name: 'spieldose-upgrade-component',\r\n    template: template(),\r\n    computed: {\r\n        upgradeAvailable: function () {\r\n            return (initialState.version.upgradeAvailable);\r\n        }\r\n    }\r\n});\n\n//# sourceURL=webpack://spieldose/./src-frontend/scripts/vue-components/upgrade.js?");

/***/ })

},
/******/ __webpack_require__ => { // webpackRuntimeModules
/******/ var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
/******/ var __webpack_exports__ = (__webpack_exec__("./src-frontend/scripts/app.js"));
/******/ }
]);