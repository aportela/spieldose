import{default as spieldoseAPI}from"../api.js";import{mixinAPIError}from"../mixins.js";const template=function(){return'\n        <section class="panel">\n            <p class="panel-heading">\n                <span class="icon">\n                    <i class="fas fa-cog fa-spin fa-fw" v-if="loading"></i>\n                    <i class="fas fa-exclamation-triangle" v-else-if="hasAPIErrors"></i>\n                    <i class="fas fa-chart-line" v-else></i>\n                </span>\n                <span>{{ $t("dashboard.labels.playStatistics") }}</span>\n                <a class="icon is-pulled-right" v-bind:title="$t(\'commonMessages.refreshData\')" v-on:click.prevent="loadChart();"><i class="fas fa-redo fa-fw"></i></a>\n            </p>\n            <p class="panel-tabs">\n                <a v-bind:class="{ \'is-active\': isHourInterval }" v-on:click.prevent="changeInterval(\'hour\');">{{ $t("dashboard.labels.byHour") }}</a>\n                <a v-bind:class="{ \'is-active\': isWeekDayInterval }" v-on:click.prevent="changeInterval(\'weekDay\');">{{ $t("dashboard.labels.byWeekday") }}</a>\n                <a v-bind:class="{ \'is-active\': isMonthInterval }" v-on:click.prevent="changeInterval(\'month\');">{{ $t("dashboard.labels.byMonth") }}</a>\n                <a v-bind:class="{ \'is-active\': isYearInterval }" v-on:click.prevent="changeInterval(\'year\');">{{ $t("dashboard.labels.byYear") }}</a>\n            </p>\n            <div class="panel-block" v-if="! hasAPIErrors">\n                <canvas v-if="isHourInterval" class="play-stats-metrics-graph" id="playcount-metrics-chart-hour" height="200"></canvas>\n                <canvas v-else-if="isWeekDayInterval" class="play-stats-metrics-graph" id="playcount-metrics-chart-weekday" height="200"></canvas>\n                <canvas v-else-if="isMonthInterval" class="play-stats-metrics-graph" id="playcount-metrics-chart-month" height="200"></canvas>\n                <canvas v-else-if="isYearInterval" class="play-stats-metrics-graph" id="playcount-metrics-chart-year" height="200"></canvas>\n            </div>\n            <div class="panel-block" v-else>{{ $t("commonErrors.invalidAPIResponse") }}</div>\n        </section>\n    '},commonChartOptions={maintainAspectRatio:!1,legend:{display:!1},scales:{yAxes:[{ticks:{beginAtZero:!0,callback:function(a){if(a%1==0)return a}}}]}};export default{name:"spieldose-dashboard-play-stats",template:'\n        <section class="panel">\n            <p class="panel-heading">\n                <span class="icon">\n                    <i class="fas fa-cog fa-spin fa-fw" v-if="loading"></i>\n                    <i class="fas fa-exclamation-triangle" v-else-if="hasAPIErrors"></i>\n                    <i class="fas fa-chart-line" v-else></i>\n                </span>\n                <span>{{ $t("dashboard.labels.playStatistics") }}</span>\n                <a class="icon is-pulled-right" v-bind:title="$t(\'commonMessages.refreshData\')" v-on:click.prevent="loadChart();"><i class="fas fa-redo fa-fw"></i></a>\n            </p>\n            <p class="panel-tabs">\n                <a v-bind:class="{ \'is-active\': isHourInterval }" v-on:click.prevent="changeInterval(\'hour\');">{{ $t("dashboard.labels.byHour") }}</a>\n                <a v-bind:class="{ \'is-active\': isWeekDayInterval }" v-on:click.prevent="changeInterval(\'weekDay\');">{{ $t("dashboard.labels.byWeekday") }}</a>\n                <a v-bind:class="{ \'is-active\': isMonthInterval }" v-on:click.prevent="changeInterval(\'month\');">{{ $t("dashboard.labels.byMonth") }}</a>\n                <a v-bind:class="{ \'is-active\': isYearInterval }" v-on:click.prevent="changeInterval(\'year\');">{{ $t("dashboard.labels.byYear") }}</a>\n            </p>\n            <div class="panel-block" v-if="! hasAPIErrors">\n                <canvas v-if="isHourInterval" class="play-stats-metrics-graph" id="playcount-metrics-chart-hour" height="200"></canvas>\n                <canvas v-else-if="isWeekDayInterval" class="play-stats-metrics-graph" id="playcount-metrics-chart-weekday" height="200"></canvas>\n                <canvas v-else-if="isMonthInterval" class="play-stats-metrics-graph" id="playcount-metrics-chart-month" height="200"></canvas>\n                <canvas v-else-if="isYearInterval" class="play-stats-metrics-graph" id="playcount-metrics-chart-year" height="200"></canvas>\n            </div>\n            <div class="panel-block" v-else>{{ $t("commonErrors.invalidAPIResponse") }}</div>\n        </section>\n    ',mixins:[mixinAPIError],data:function(){return{chart:null,loading:!1,activeInterval:"hour",items:[]}},created:function(){this.loadChart()},computed:{isHourInterval:function(){return"hour"==this.activeInterval},isWeekDayInterval:function(){return"weekDay"==this.activeInterval},isMonthInterval:function(){return"month"==this.activeInterval},isYearInterval:function(){return"year"==this.activeInterval}},methods:{loadMetricsByHourChart:function(){spieldoseAPI.metrics.getPlayStatMetricsByHour((a=>{if(a.ok){const t=["00","01","02","03","04","05","06","07","08","09","10","11","12","13","14","15","16","17","18","19","20","21","22","23"];let s=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];for(let t=0;t<a.body.metrics.length;t++)s[a.body.metrics[t].hour]=a.body.metrics[t].total;this.chart&&this.chart.destroy(),this.chart=new Chart(document.getElementById("playcount-metrics-chart-hour"),{type:"line",data:{labels:t,datasets:[{label:"play stats by hour",data:s,fill:!0,borderColor:"#3273dc",lineTension:.1}]},options:commonChartOptions})}else this.setAPIError(a.getApiErrorData());this.loading=!1}))},loadMetricsByWeekDayChart:function(){spieldoseAPI.metrics.getPlayStatMetricsByWeekDay((a=>{if(a.ok){const t=[this.$t("dashboard.labels.sunday"),this.$t("dashboard.labels.monday"),this.$t("dashboard.labels.tuesday"),this.$t("dashboard.labels.wednesday"),this.$t("dashboard.labels.thursday"),this.$t("dashboard.labels.friday"),this.$t("dashboard.labels.saturday")];let s=[],e=[];for(let r=0;r<a.body.metrics.length;r++)e.push(a.body.metrics[r].total),s.push(t[a.body.metrics[r].weekDay]);this.chart&&this.chart.destroy(),this.chart=new Chart(document.getElementById("playcount-metrics-chart-weekday"),{type:"bar",data:{labels:s,datasets:[{label:this.$t("dashboard.labels.playStatsByWeekday"),data:e,backgroundColor:"#3273dc"}]},options:commonChartOptions})}else this.setAPIError(a.getApiErrorData());this.loading=!1}))},loadMetricsByMonthChart:function(){spieldoseAPI.metrics.getPlayStatMetricsByMonth((a=>{if(a.ok){const t=[this.$t("dashboard.labels.january"),this.$t("dashboard.labels.february"),this.$t("dashboard.labels.march"),this.$t("dashboard.labels.april"),this.$t("dashboard.labels.may"),this.$t("dashboard.labels.june"),this.$t("dashboard.labels.july"),this.$t("dashboard.labels.august"),this.$t("dashboard.labels.september"),this.$t("dashboard.labels.october"),this.$t("dashboard.labels.november"),this.$t("dashboard.labels.december")];let s=[],e=[];for(let r=0;r<a.body.metrics.length;r++)e.push(a.body.metrics[r].total),s.push(t[a.body.metrics[r].month-1]);this.chart&&this.chart.destroy(),this.chart=new Chart(document.getElementById("playcount-metrics-chart-month"),{type:"bar",data:{labels:s,datasets:[{label:this.$t("dashboard.labels.playStatsByMonth"),data:e,backgroundColor:"#3273dc"}]},options:commonChartOptions})}else this.setAPIError(a.getApiErrorData());this.loading=!1}))},loadMetricsByYearChart:function(){spieldoseAPI.metrics.getPlayStatMetricsByYear((a=>{if(a.ok){let t=[],s=[];for(let e=0;e<a.body.metrics.length;e++)s.push(a.body.metrics[e].total),t.push(a.body.metrics[e].year);this.chart&&this.chart.destroy(),this.chart=new Chart(document.getElementById("playcount-metrics-chart-year"),{type:"bar",data:{labels:t,datasets:[{label:this.$t("dashboard.labels.playStatsByYear"),data:s,backgroundColor:"#3273dc"}]},options:commonChartOptions})}else this.setAPIError(a.getApiErrorData());this.loading=!1}))},loadChart:function(){switch(this.clearAPIErrors(),this.loading=!0,this.activeInterval){case"hour":this.loadMetricsByHourChart();break;case"weekDay":this.loadMetricsByWeekDayChart();break;case"month":this.loadMetricsByMonthChart();break;case"year":this.loadMetricsByYearChart();break;default:this.loading=!1}},changeInterval:function(a){this.loading||a&&a!=this.activeInterval&&(this.activeInterval=a,this.loadChart())}}};