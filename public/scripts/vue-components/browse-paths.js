import{default as spieldoseAPI}from"../api.js";import{mixinAPIError,mixinPagination,mixinLiveSearches,mixinPlayer}from"../mixins.js";import{default as inputTypeAHead}from"./input-typeahead.js";import{default as pagination}from"./pagination";import{default as apiError}from"./api-error.js";const template=function(){return'\n        <div class="container is-fluid box is-marginless">\n        <p class="title is-1 has-text-centered">{{ $t("browsePaths.labels.sectionName") }}</p>\n            <div v-if="! hasAPIErrors">\n                <div class="field has-addons">\n                    <div class="control is-expanded has-icons-left" v-bind:class="{ \'is-loading\': loading }">\n                    <spieldose-input-typeahead v-if="liveSearch" v-bind:loading="loading" v-bind:placeholder="$t(\'browsePaths.inputs.pathNamePlaceholder\')" v-on:on-value-change="onTypeahead"></spieldose-input-typeahead>\n                        <input type="text" class="input" v-bind:placeholder="$t(\'browsePaths.inputs.pathNamePlaceholder\')" v-else v-bind:disabled="loading" v-model.trim="nameFilter" v-on:keyup.enter="search();">\n                        <span class="icon is-small is-left">\n                            <i class="fas fa-search"></i>\n                        </span>\n                    </div>\n                    <p class="control" v-if="! liveSearch">\n                        <a class="button is-info" v-on:click.prevent="search();">\n                            <span class="icon">\n                                <i class="fas fa-search" aria-hidden="true"></i>\n                            </span>\n                            <span>{{ $t("browsePaths.buttons.search") }}</span>\n                        </a>\n                    </p>\n                </div>\n                <spieldose-pagination v-bind:loading="loading" v-bind:data="pager" v-on:pagination-changed="onPaginationChanged"></spieldose-pagination>\n                <table class="table is-bordered is-striped is-narrow is-fullwidth is-unselectable" v-show="! loading">\n                    <thead>\n                        <tr>\n                            <th>{{ $t("browsePaths.labels.pathNameTableHeader") }}</th>\n                            <th>{{ $t("browsePaths.labels.trackCountTableHeader") }}</th>\n                            <th>{{ $t("browsePaths.labels.actionsTableHeader") }}</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr v-for="item in paths" v-bind:key="item.path">\n                            <td>{{ item.path }}</td>\n                            <td class="has-text-right">{{ item.totalTracks }}</td>\n                            <td class="has-text-centered">\n                                <div v-if="item.totalTracks > 0">\n                                    <i class="cursor-pointer fa fa-play" v-bind:title="$t(\'browsePaths.labels.playThisPath\')" v-on:click.prevent="playPathTracks(item.path);"></i>\n                                    <i class="cursor-pointer fa fa-plus-square" v-bind:title="$t(\'browsePaths.labels.enqueueThisPath\')" v-on:click.prevent="enqueuePathTracks(item.path);"></i>\n                                </div>\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n            <spieldose-api-error-component v-else v-bind:apiError="apiError"></spieldose-api-error-component>\n        </div>\n    '};export default{name:"spieldose-browse-paths",template:'\n        <div class="container is-fluid box is-marginless">\n        <p class="title is-1 has-text-centered">{{ $t("browsePaths.labels.sectionName") }}</p>\n            <div v-if="! hasAPIErrors">\n                <div class="field has-addons">\n                    <div class="control is-expanded has-icons-left" v-bind:class="{ \'is-loading\': loading }">\n                    <spieldose-input-typeahead v-if="liveSearch" v-bind:loading="loading" v-bind:placeholder="$t(\'browsePaths.inputs.pathNamePlaceholder\')" v-on:on-value-change="onTypeahead"></spieldose-input-typeahead>\n                        <input type="text" class="input" v-bind:placeholder="$t(\'browsePaths.inputs.pathNamePlaceholder\')" v-else v-bind:disabled="loading" v-model.trim="nameFilter" v-on:keyup.enter="search();">\n                        <span class="icon is-small is-left">\n                            <i class="fas fa-search"></i>\n                        </span>\n                    </div>\n                    <p class="control" v-if="! liveSearch">\n                        <a class="button is-info" v-on:click.prevent="search();">\n                            <span class="icon">\n                                <i class="fas fa-search" aria-hidden="true"></i>\n                            </span>\n                            <span>{{ $t("browsePaths.buttons.search") }}</span>\n                        </a>\n                    </p>\n                </div>\n                <spieldose-pagination v-bind:loading="loading" v-bind:data="pager" v-on:pagination-changed="onPaginationChanged"></spieldose-pagination>\n                <table class="table is-bordered is-striped is-narrow is-fullwidth is-unselectable" v-show="! loading">\n                    <thead>\n                        <tr>\n                            <th>{{ $t("browsePaths.labels.pathNameTableHeader") }}</th>\n                            <th>{{ $t("browsePaths.labels.trackCountTableHeader") }}</th>\n                            <th>{{ $t("browsePaths.labels.actionsTableHeader") }}</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr v-for="item in paths" v-bind:key="item.path">\n                            <td>{{ item.path }}</td>\n                            <td class="has-text-right">{{ item.totalTracks }}</td>\n                            <td class="has-text-centered">\n                                <div v-if="item.totalTracks > 0">\n                                    <i class="cursor-pointer fa fa-play" v-bind:title="$t(\'browsePaths.labels.playThisPath\')" v-on:click.prevent="playPathTracks(item.path);"></i>\n                                    <i class="cursor-pointer fa fa-plus-square" v-bind:title="$t(\'browsePaths.labels.enqueueThisPath\')" v-on:click.prevent="enqueuePathTracks(item.path);"></i>\n                                </div>\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n            <spieldose-api-error-component v-else v-bind:apiError="apiError"></spieldose-api-error-component>\n        </div>\n    ',mixins:[mixinAPIError,mixinPagination,mixinLiveSearches,mixinPlayer],data:function(){return{loading:!1,nameFilter:null,paths:[]}},components:{"spieldose-input-typeahead":inputTypeAHead,"spieldose-pagination":pagination,"spieldose-api-error-component":apiError},methods:{onPaginationChanged:function(a){this.$router.push({name:"pathsPaged",params:{page:a}})},onTypeahead:function(a){this.nameFilter=a,this.search()},search:function(){this.loading=!0,this.clearAPIErrors(),spieldoseAPI.searchPaths(this.nameFilter,this.pager.actualPage,this.pager.resultsPage,(a=>{a.ok?(this.pager.actualPage=a.body.pagination.actualPage,this.pager.totalPages=a.body.pagination.totalPages,this.pager.totalResults=a.body.pagination.totalResults,a.body.paths&&a.body.paths.length>0?this.paths=a.body.paths:this.paths=[]):this.setAPIError(a.getApiErrorData()),this.loading=!1}))}}};