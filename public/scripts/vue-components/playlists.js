import{default as spieldoseAPI}from"../api.js";import{mixinAPIError,mixinPlayer,mixinNavigation}from"../mixins.js";const template=function(){return'\n        <div class="container is-fluid box is-marginless">\n            <p class="title is-1 has-text-centered">{{ $t(\'currentPlaylist.labels.sectionName\') }}</p>\n            <div v-if="! hasAPIErrors">\n                <div class="field has-addons">\n                    <div class="control has-icons-left is-expanded">\n                        <input class="input" type="text" v-bind:placeholder="$t(\'currentPlaylist.inputs.playlistNamePlaceholder\')" required v-bind:disabled="savingPlaylist" v-model.trim="currentPlaylistName">\n                        <span class="icon is-small is-left">\n                            <i class="fas fa-list-alt"></i>\n                        </span>\n                    </div>\n                    <div class="control">\n                        <a class="button is-success" v-bind:class="{ \'is-loading\': savingPlaylist }" v-bind:disabled="isSavePlaylistDisabled" v-on:click.prevent="savePlayList();">\n                            <span class="icon is-small">\n                            <i class="fas fa-check"></i>\n                            </span>\n                            <span>{{ $t(\'currentPlaylist.buttons.savePlaylist\') }}</span>\n                        </a>\n                    </div>\n                    <div class="control" v-if="isPlaylisted">\n                        <a class="button is-info" v-bind:class="{ \'is-loading\': savingPlaylist }" v-bind:disabled="isSavePlaylistDisabled" v-on:click.prevent="unsetPlaylist();">\n                            <span class="icon is-small">\n                            <i class="fas fa-check-square"></i>\n                            </span>\n                            <span>{{ $t(\'currentPlaylist.buttons.unsetPlaylist\') }}</span>\n                        </a>\n                    </div>\n                </div>\n\n                <div class="buttons">\n                    <a class="button is-light" v-bind:disabled="playerData.loading" v-on:click.prevent="loadRandom();">\n                        <span class="icon is-small">\n                            <i v-if="playerData.loading" class="fas fa-cog fa-spin fa-fw"></i>\n                            <i v-else class="fas fa-clone"></i>\n                        </span>\n                        <span class="is-hidden-touch">{{ $t(\'currentPlaylist.buttons.loadRandom\') }}</span>\n                    </a>\n                    <a class="button is-light" v-on:click.prevent="playerData.currentPlaylist.empty();">\n                        <span class="icon is-small">\n                            <i class="fas fa-eraser"></i>\n                        </span>\n                        <span class="is-hidden-touch">{{ $t(\'currentPlaylist.buttons.clearPlaylist\') }}</span>\n                    </a>\n                    <a class="button is-light" v-bind:class="{ \'is-primary\': isRepeatActive }" v-on:click.prevent="playerData.playback.toggleRepeatMode();">\n                        <span class="icon is-small">\n                            <i class="fas fa-redo"></i>\n                        </span>\n                        <span class="is-hidden-touch">{{ $t(\'currentPlaylist.buttons.repeat\') }}: {{ repeatMode }}</span>\n                    </a>\n                    <a class="button is-light" v-on:click.prevent="playerData.currentPlaylist.shuffle();">\n                        <span class="icon is-small">\n                            <i class="fas fa-random"></i>\n                        </span>\n                        <span class="is-hidden-touch">{{ $t(\'currentPlaylist.buttons.shufflePlaylist\') }}</span>\n                    </a>\n                    <a class="button is-light" v-on:click.prevent="playerData.currentPlaylist.playPrevious();">\n                        <span class="icon is-small">\n                            <i class="fas fa-backward"></i>\n                        </span>\n                        <span class="is-hidden-touch">{{ $t(\'currentPlaylist.buttons.previousTrack\') }}</span>\n                    </a>\n                    <a class="button is-light" v-on:click.prevent="playerData.currentPlaylist.playNext();">\n                        <span class="icon is-small">\n                            <i class="fas fa-forward"></i>\n                        </span>\n                        <span class="is-hidden-touch">{{ $t(\'currentPlaylist.buttons.nextTrack\') }}</span>\n                    </a>\n                    <a class="button is-light" v-if="playerData.isStopped" v-on:click.prevent="playerData.playback.play();">\n                        <span class="icon is-small">\n                            <i class="fas fa-play"></i>\n                        </span>\n                        <span class="is-hidden-touch">{{ $t(\'currentPlaylist.buttons.playTrack\') }}</span>\n                    </a>\n                    <a class="button is-light is-primary" v-else-if="playerData.isPaused" v-on:click.prevent="playerData.playback.resume();">\n                        <span class="icon is-small">\n                            <i class="fas fa-play"></i>\n                        </span>\n                        <span class="is-hidden-touch">{{ $t(\'currentPlaylist.buttons.resumeTrack\') }}</span>\n                    </a>\n                    <a class="button is-light is-primary" v-else-if="playerData.isPlaying" v-on:click.prevent="playerData.playback.pause();">\n                        <span class="icon is-small">\n                            <i class="fas fa-pause"></i>\n                        </span>\n                        <span class="is-hidden-touch">{{ $t(\'currentPlaylist.buttons.pauseTrack\') }}</span>\n                    </a>\n                    <a class="button is-light" v-bind:class="{ \'is-primary\': playerData.isStopped }" v-on:click.prevent="playerData.playback.stop();">\n                        <span class="icon is-small">\n                            <i class="fas fa-stop"></i>\n                        </span>\n                        <span class="is-hidden-touch">{{ $t(\'currentPlaylist.buttons.stopTrack\') }}</span>\n                    </a>\n                    <a class="button is-light is-primary" v-if="nowPlayingLoved" v-bind:disabled="playerData.loading" v-on:click.prevent="playerData.playerData.currentTrack.unSetLoved();">\n                        <span class="icon is-small">\n                            <i class="fas fa-heart"></i>\n                        </span>\n                        <span class="is-hidden-touch">{{ $t(\'currentPlaylist.buttons.unloveTrack\') }}</span>\n                    </a>\n                    <a class="button is-light" v-else v-bind:disabled="playerData.loading" v-on:click.prevent="playerData.playerData.currentTrack.setLoved();">\n                        <span class="icon is-small">\n                            <i class="fas fa-heart"></i>\n                        </span>\n                        <span class="is-hidden-touch">{{ $t(\'currentPlaylist.buttons.loveTrack\') }}</span>\n                    </a>\n                    <a class="button is-light" v-on:click.prevent="playerData.currentTrack.download();">\n                        <span class="icon is-small">\n                            <i class="fas fa-save"></i>\n                        </span>\n                        <span class="is-hidden-touch">{{ $t(\'currentPlaylist.buttons.downloadTrack\') }}</span>\n                    </a>\n                </div>\n\n                <table id="playlist-now-playing" class="table is-bordered is-striped is-narrow is-fullwidth is-unselectable">\n                    <thead>\n                        <tr>\n                            <th>{{ $t(\'currentPlaylist.labels.tableHeaderTrack\') }}</th>\n                            <th>{{ $t(\'currentPlaylist.labels.tableHeaderArtist\') }}</th>\n                            <th>{{ $t(\'currentPlaylist.labels.tableHeaderAlbum\') }}</th>\n                            <th>{{ $t(\'currentPlaylist.labels.tableHeaderGenre\') }}</th>\n                            <th>{{ $t(\'currentPlaylist.labels.tableHeaderYear\') }}</th>\n                            <th>{{ $t(\'currentPlaylist.labels.tableHeaderActions\') }}</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr v-bind:class="{ \'is-selected\': playerData.currentTrack.index == i }" v-for="track, i in playerData.tracks" v-bind:key="i">\n                            <td>\n                                <i class="fas fa-play cursor-pointer" v-bind:title="$t(\'currentPlaylist.labels.playThisTrackHint\')" aria-hidden="true" v-if="iconAction(i) == \'play\'" v-on:click="playerData.currentPlaylist.playAtIdx(i);"></i>\n                                <i class="fas fa-headphones cursor-pointer" v-bind:title="$t(\'currentPlaylist.labels.nowPlayingClickToPauseHint\')" aria-hidden="true" v-else-if="iconAction(i) == \'none\'" v-on:click="playerData.playback.pause();"></i>\n                                <i class="fas fa-pause cursor-pointer" v-bind:title="$t(\'currentPlaylist.labels.pausedClickToResumeHint\')" aria-hidden="true" v-else-if="iconAction(i) == \'unPause\'" v-on:click="playerData.playback.resume();"></i>\n                                <span>{{ track.title}}</span>\n                            </td>\n                            <td v-if="! track.radioStation">\n                                <a v-bind:title="$t(\'commonLabels.navigateToArtistPage\')" v-if="track.artist" v-on:click.prevent="navigateToArtistPage(track.artist);">{{ track.artist }}</a>\n                            </td>\n                            <td v-else>\n                                {{ track.artist }}\n                            </td>\n                            <td><span>{{ track.album }}</span></td>\n                            <td><span>{{ track.genre }}</span></td>\n                            <td><span>{{ track.year }}</span></td>\n                            <td>\n                                <i class="fas fa-caret-up cursor-pointer" v-bind:title="$t(\'currentPlaylist.labels.moveElementUpHint\')"  aria-hidden="true" v-on:click="playerData.currentPlaylist.moveItemUp(i);"></i>\n                                <i class="fas fa-caret-down cursor-pointer" v-bind:title="$t(\'currentPlaylist.labels.moveElementDownHint\')" aria-hidden="true" v-on:click="playerData.currentPlaylist.moveItemDown(i);"></i>\n                                <i class="fas fa-times cursor-pointer" v-bind:title="$t(\'currentPlaylist.labels.removeElementHint\')"  aria-hidden="true" v-on:click="playerData.currentPlaylist.removeItem(i); $forceUpdate();"></i>\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n            <spieldose-api-error-component v-else v-bind:apiError="apiError"></spieldose-api-error-component>\n        </div>\n    '};export default{name:"spieldose-nowplaying",template:'\n        <div class="container is-fluid box is-marginless">\n            <p class="title is-1 has-text-centered">{{ $t(\'currentPlaylist.labels.sectionName\') }}</p>\n            <div v-if="! hasAPIErrors">\n                <div class="field has-addons">\n                    <div class="control has-icons-left is-expanded">\n                        <input class="input" type="text" v-bind:placeholder="$t(\'currentPlaylist.inputs.playlistNamePlaceholder\')" required v-bind:disabled="savingPlaylist" v-model.trim="currentPlaylistName">\n                        <span class="icon is-small is-left">\n                            <i class="fas fa-list-alt"></i>\n                        </span>\n                    </div>\n                    <div class="control">\n                        <a class="button is-success" v-bind:class="{ \'is-loading\': savingPlaylist }" v-bind:disabled="isSavePlaylistDisabled" v-on:click.prevent="savePlayList();">\n                            <span class="icon is-small">\n                            <i class="fas fa-check"></i>\n                            </span>\n                            <span>{{ $t(\'currentPlaylist.buttons.savePlaylist\') }}</span>\n                        </a>\n                    </div>\n                    <div class="control" v-if="isPlaylisted">\n                        <a class="button is-info" v-bind:class="{ \'is-loading\': savingPlaylist }" v-bind:disabled="isSavePlaylistDisabled" v-on:click.prevent="unsetPlaylist();">\n                            <span class="icon is-small">\n                            <i class="fas fa-check-square"></i>\n                            </span>\n                            <span>{{ $t(\'currentPlaylist.buttons.unsetPlaylist\') }}</span>\n                        </a>\n                    </div>\n                </div>\n\n                <div class="buttons">\n                    <a class="button is-light" v-bind:disabled="playerData.loading" v-on:click.prevent="loadRandom();">\n                        <span class="icon is-small">\n                            <i v-if="playerData.loading" class="fas fa-cog fa-spin fa-fw"></i>\n                            <i v-else class="fas fa-clone"></i>\n                        </span>\n                        <span class="is-hidden-touch">{{ $t(\'currentPlaylist.buttons.loadRandom\') }}</span>\n                    </a>\n                    <a class="button is-light" v-on:click.prevent="playerData.currentPlaylist.empty();">\n                        <span class="icon is-small">\n                            <i class="fas fa-eraser"></i>\n                        </span>\n                        <span class="is-hidden-touch">{{ $t(\'currentPlaylist.buttons.clearPlaylist\') }}</span>\n                    </a>\n                    <a class="button is-light" v-bind:class="{ \'is-primary\': isRepeatActive }" v-on:click.prevent="playerData.playback.toggleRepeatMode();">\n                        <span class="icon is-small">\n                            <i class="fas fa-redo"></i>\n                        </span>\n                        <span class="is-hidden-touch">{{ $t(\'currentPlaylist.buttons.repeat\') }}: {{ repeatMode }}</span>\n                    </a>\n                    <a class="button is-light" v-on:click.prevent="playerData.currentPlaylist.shuffle();">\n                        <span class="icon is-small">\n                            <i class="fas fa-random"></i>\n                        </span>\n                        <span class="is-hidden-touch">{{ $t(\'currentPlaylist.buttons.shufflePlaylist\') }}</span>\n                    </a>\n                    <a class="button is-light" v-on:click.prevent="playerData.currentPlaylist.playPrevious();">\n                        <span class="icon is-small">\n                            <i class="fas fa-backward"></i>\n                        </span>\n                        <span class="is-hidden-touch">{{ $t(\'currentPlaylist.buttons.previousTrack\') }}</span>\n                    </a>\n                    <a class="button is-light" v-on:click.prevent="playerData.currentPlaylist.playNext();">\n                        <span class="icon is-small">\n                            <i class="fas fa-forward"></i>\n                        </span>\n                        <span class="is-hidden-touch">{{ $t(\'currentPlaylist.buttons.nextTrack\') }}</span>\n                    </a>\n                    <a class="button is-light" v-if="playerData.isStopped" v-on:click.prevent="playerData.playback.play();">\n                        <span class="icon is-small">\n                            <i class="fas fa-play"></i>\n                        </span>\n                        <span class="is-hidden-touch">{{ $t(\'currentPlaylist.buttons.playTrack\') }}</span>\n                    </a>\n                    <a class="button is-light is-primary" v-else-if="playerData.isPaused" v-on:click.prevent="playerData.playback.resume();">\n                        <span class="icon is-small">\n                            <i class="fas fa-play"></i>\n                        </span>\n                        <span class="is-hidden-touch">{{ $t(\'currentPlaylist.buttons.resumeTrack\') }}</span>\n                    </a>\n                    <a class="button is-light is-primary" v-else-if="playerData.isPlaying" v-on:click.prevent="playerData.playback.pause();">\n                        <span class="icon is-small">\n                            <i class="fas fa-pause"></i>\n                        </span>\n                        <span class="is-hidden-touch">{{ $t(\'currentPlaylist.buttons.pauseTrack\') }}</span>\n                    </a>\n                    <a class="button is-light" v-bind:class="{ \'is-primary\': playerData.isStopped }" v-on:click.prevent="playerData.playback.stop();">\n                        <span class="icon is-small">\n                            <i class="fas fa-stop"></i>\n                        </span>\n                        <span class="is-hidden-touch">{{ $t(\'currentPlaylist.buttons.stopTrack\') }}</span>\n                    </a>\n                    <a class="button is-light is-primary" v-if="nowPlayingLoved" v-bind:disabled="playerData.loading" v-on:click.prevent="playerData.playerData.currentTrack.unSetLoved();">\n                        <span class="icon is-small">\n                            <i class="fas fa-heart"></i>\n                        </span>\n                        <span class="is-hidden-touch">{{ $t(\'currentPlaylist.buttons.unloveTrack\') }}</span>\n                    </a>\n                    <a class="button is-light" v-else v-bind:disabled="playerData.loading" v-on:click.prevent="playerData.playerData.currentTrack.setLoved();">\n                        <span class="icon is-small">\n                            <i class="fas fa-heart"></i>\n                        </span>\n                        <span class="is-hidden-touch">{{ $t(\'currentPlaylist.buttons.loveTrack\') }}</span>\n                    </a>\n                    <a class="button is-light" v-on:click.prevent="playerData.currentTrack.download();">\n                        <span class="icon is-small">\n                            <i class="fas fa-save"></i>\n                        </span>\n                        <span class="is-hidden-touch">{{ $t(\'currentPlaylist.buttons.downloadTrack\') }}</span>\n                    </a>\n                </div>\n\n                <table id="playlist-now-playing" class="table is-bordered is-striped is-narrow is-fullwidth is-unselectable">\n                    <thead>\n                        <tr>\n                            <th>{{ $t(\'currentPlaylist.labels.tableHeaderTrack\') }}</th>\n                            <th>{{ $t(\'currentPlaylist.labels.tableHeaderArtist\') }}</th>\n                            <th>{{ $t(\'currentPlaylist.labels.tableHeaderAlbum\') }}</th>\n                            <th>{{ $t(\'currentPlaylist.labels.tableHeaderGenre\') }}</th>\n                            <th>{{ $t(\'currentPlaylist.labels.tableHeaderYear\') }}</th>\n                            <th>{{ $t(\'currentPlaylist.labels.tableHeaderActions\') }}</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr v-bind:class="{ \'is-selected\': playerData.currentTrack.index == i }" v-for="track, i in playerData.tracks" v-bind:key="i">\n                            <td>\n                                <i class="fas fa-play cursor-pointer" v-bind:title="$t(\'currentPlaylist.labels.playThisTrackHint\')" aria-hidden="true" v-if="iconAction(i) == \'play\'" v-on:click="playerData.currentPlaylist.playAtIdx(i);"></i>\n                                <i class="fas fa-headphones cursor-pointer" v-bind:title="$t(\'currentPlaylist.labels.nowPlayingClickToPauseHint\')" aria-hidden="true" v-else-if="iconAction(i) == \'none\'" v-on:click="playerData.playback.pause();"></i>\n                                <i class="fas fa-pause cursor-pointer" v-bind:title="$t(\'currentPlaylist.labels.pausedClickToResumeHint\')" aria-hidden="true" v-else-if="iconAction(i) == \'unPause\'" v-on:click="playerData.playback.resume();"></i>\n                                <span>{{ track.title}}</span>\n                            </td>\n                            <td v-if="! track.radioStation">\n                                <a v-bind:title="$t(\'commonLabels.navigateToArtistPage\')" v-if="track.artist" v-on:click.prevent="navigateToArtistPage(track.artist);">{{ track.artist }}</a>\n                            </td>\n                            <td v-else>\n                                {{ track.artist }}\n                            </td>\n                            <td><span>{{ track.album }}</span></td>\n                            <td><span>{{ track.genre }}</span></td>\n                            <td><span>{{ track.year }}</span></td>\n                            <td>\n                                <i class="fas fa-caret-up cursor-pointer" v-bind:title="$t(\'currentPlaylist.labels.moveElementUpHint\')"  aria-hidden="true" v-on:click="playerData.currentPlaylist.moveItemUp(i);"></i>\n                                <i class="fas fa-caret-down cursor-pointer" v-bind:title="$t(\'currentPlaylist.labels.moveElementDownHint\')" aria-hidden="true" v-on:click="playerData.currentPlaylist.moveItemDown(i);"></i>\n                                <i class="fas fa-times cursor-pointer" v-bind:title="$t(\'currentPlaylist.labels.removeElementHint\')"  aria-hidden="true" v-on:click="playerData.currentPlaylist.removeItem(i); $forceUpdate();"></i>\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n            <spieldose-api-error-component v-else v-bind:apiError="apiError"></spieldose-api-error-component>\n        </div>\n    ',mixins:[mixinAPIError,mixinPlayer,mixinNavigation],data:function(){return{loading:!1,savingPlaylist:!1,currentPlaylistName:null}},created:function(){this.currentPlaylistName=this.playerData.currentPlaylist.name},computed:{isPlaylisted:function(){return!!this.playerData.currentPlaylist.name},isRepeatActive:function(){return"none"!=this.playerData.repeatTracksMode},isSavePlaylistDisabled:function(){return!this.currentPlaylistName||this.savingPlaylist},repeatMode:function(){let a=this.$t("commonLabels.repeatModeNone");switch(this.playerData.repeatTracksMode){case"track":a=this.$t("commonLabels.repeatModeTrack");break;case"all":a=this.$t("commonLabels.repeatModeAll")}return a}},methods:{iconAction:function(a){return this.playerData.isPaused&&this.playerData.currentTrack.index==a?"unPause":this.playerData.isPlaying&&this.playerData.currentTrack.index==a?"none":"play"},unsetPlaylist:function(){this.playerData.currentPlaylist.unset(),this.currentPlaylistName=null},loadRandom:function(){this.playerData.currentPlaylist.loadRandomTracks(initialState.defaultResultsPage)},savePlayList:function(){this.loading=!0,this.clearAPIErrors();let a=[];this.savingPlaylist=!0;for(let s=0;s<this.playerData.tracks.length;s++)a.push(this.playerData.tracks[s].id);this.playerData.currentPlaylist.isSet()?spieldoseAPI.playlist.update(this.playerData.currentPlaylist.id,this.currentPlaylistName,a,(a=>{this.savingPlaylist=!1,a.ok?this.playerData.currentPlaylist.set(a.body.playlist.id,a.body.playlist.name):this.setAPIError(a.getApiErrorData()),this.loading=!1})):spieldoseAPI.playlist.add(this.currentPlaylistName,a,(a=>{this.savingPlaylist=!1,a.ok?this.playerData.currentPlaylist.set(a.body.playlist.id,a.body.playlist.name):this.setAPIError(a.getApiErrorData()),this.loading=!1}))}}};