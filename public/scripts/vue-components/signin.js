import{default as spieldoseAPI}from"../api.js";import{mixinValidations,mixinAPIError}from"../mixins.js";import{default as blockTilesAlbumImages}from"./tiles-album-images.js";const template=function(){return'\n        \x3c!-- template credits: daniel (https://github.com/dansup) --\x3e\n                    <div class="columns is-vcentered is-centered">\n                    <div class="column is-4-widescreen is-6-desktop is-8-tablet is-12-mobile">\n                    <section class="section">\n                            \x3c!-- Apple Music Sound Equalizer in SVG by Geoff Graham (https://codepen.io/geoffgraham/pen/XmMJqj) --\x3e\n                            <div class="columns is-centered">\n                            <div class="column is-half">\n                            <svg xmlns="http://www.w3.org/2000/svg" class="equilizer" viewBox="0 0 128 128">\n                                <g>\n                                    <title>Audio Equalizer</title>\n                                    <rect class="bar" transform="translate(0,0)" y="15"></rect>\n                                    <rect class="bar" transform="translate(25,0)" y="15"></rect>\n                                    <rect class="bar" transform="translate(50,0)" y="15"></rect>\n                                    <rect class="bar" transform="translate(75,0)" y="15"></rect>\n                                    <rect class="bar" transform="translate(100,0)" y="15"></rect>\n                                </g>\n                            </svg>\n                            </div>\n                            </div>\n                            <h1 class="title has-text-centered"><span class="icon is-medium"><i class="fas fa-music" aria-hidden="true"></i></span> Spieldose <span class="icon is-medium"><i class="fas fa-music" aria-hidden="true"></i></span></h1>\n                            <h2 class="subtitle is-6 has-text-centered"><cite>{{ $t("commonLabels.slogan") }}</cite></h2>\n                            <div class="box is-radiusless is-shadowless is-marginless">\n                                <div class="tabs is-toggle is-radiusless spieldose-tabs-without-margin-bottom" v-if="allowSignUp">\n                                    <ul>\n                                        <li v-bind:class="{ \'is-active\': isSignInTabActive }">\n                                            <a v-on:click.prevent="changeTab(\'signin\');">\n                                                <span class="icon is-small"><i class="fas fa-user"></i></span>\n                                                <span>{{ $t("signIn.labels.tabLink") }}</span>\n                                            </a>\n                                        </li>\n                                        <li v-bind:class="{ \'is-active\': isSignUpTabActive }">\n                                            <a v-on:click.prevent="changeTab(\'signup\');">\n                                                <span class="icon is-small"><i class="fas fa-user-plus"></i></span>\n                                                <span>{{ $t("signUp.labels.tabLink") }}</span>\n                                            </a>\n                                        </li>\n                                    </ul>\n                                </div>\n                            </div>\n                            <form v-on:submit.prevent="submitSignIn" v-show="isSignInTabActive">\n                                <div class="box is-radiusless is-shadowless">\n                                    <div class="field">\n                                        <label class="label is-hidden-mobile">{{ $t("signIn.labels.email") }}</label>\n                                        <p class="block control has-icons-left" v-bind:class="{ \'has-icons-right\' : validator.hasInvalidField(\'signInEmail\') }">\n                                            <input class="input is-rounded" type="email" ref="signInEmail" maxlength="255" required v-bind:class="{ \'is-danger\': validator.hasInvalidField(\'signInEmail\') }" v-bind:disabled="loading ? true: false" v-model="signInEmail" :placeholder="$t(\'signIn.labels.email\')">\n                                            <span class="icon is-small is-left"><i class="fas fa-envelope"></i></span>\n                                            <span class="icon is-small is-right" v-show="validator.hasInvalidField(\'signInEmail\')"><i class="fas fa-warning"></i></span>\n                                            <p class="help is-danger" v-show="validator.hasInvalidField(\'signInEmail\')">{{ validator.getInvalidFieldMessage(\'signInEmail\') }}</p>\n                                        </p>\n                                    </div>\n                                    <div class="field">\n                                        <label class="label is-hidden-mobile">{{ $t("signIn.labels.password") }}</label>\n                                        <p class="block control has-icons-left" v-bind:class="{ \'has-icons-right\' : validator.hasInvalidField(\'signInPassword\') }">\n                                            <input class="input is-rounded" type="password" required v-bind:class="{ \'is-danger\': validator.hasInvalidField(\'signInPassword\') }" v-bind:disabled="loading ? true: false" v-model="signInPassword" :placeholder="$t(\'signIn.labels.password\')">\n                                            <span class="icon is-small is-left"><i class="fas fa-key"></i></span>\n                                            <span class="icon is-small is-right" v-show="validator.hasInvalidField(\'signInPassword\')"><i class="fas fa-warning"></i></span>\n                                            <p class="help is-danger" v-show="validator.hasInvalidField(\'signInPassword\')">{{ validator.getInvalidFieldMessage(\'signInPassword\') }}</p>\n                                        </p>\n                                    </div>\n                                    <p class="control">\n                                        <button type="submit" class="button is-black" v-bind:class="{ \'is-loading\': loading }" v-bind:disabled="loading ? true: false">\n                                            <span class="icon"><i class="fas fa-lock"></i></span>\n                                            <span>{{ $t("signIn.buttons.submit") }}</span>\n                                        </button>\n                                    </p>\n                                </div>\n                            </form>\n                            <form v-on:submit.prevent="submitSignUp" v-show="isSignUpTabActive">\n                                <div class="box is-radiusless is-shadowless">\n                                    <label class="label is-hidden-mobile">{{ $t("signUp.labels.email") }}</label>\n                                    <p class="block control has-icons-left" v-bind:class="{ \'has-icons-right\' : validator.hasInvalidField(\'signUpEmail\') }">\n                                        <input class="input is-rounded" type="email" ref="signUpEmail" maxlength="255" required v-bind:class="{ \'is-danger\': validator.hasInvalidField(\'signUpEmail\') }" v-bind:disabled="loading ? true: false" v-model="signUpEmail" :placeholder="$t(\'signIn.labels.email\')">\n                                        <span class="icon is-small is-left"><i class="fas fa-envelope"></i></span>\n                                        <span class="icon is-small is-right" v-show="validator.hasInvalidField(\'signUpEmail\')"><i class="fas fa-warning"></i></span>\n                                        <p class="help is-danger" v-show="validator.hasInvalidField(\'signUpEmail\')">{{ validator.getInvalidFieldMessage(\'signUpEmail\') }}</p>\n                                    </p>\n                                    <label class="label is-hidden-mobile">{{ $t("signUp.labels.password") }}</label>\n                                    <p class="block control has-icons-left" v-bind:class="{ \'has-icons-right\' : validator.hasInvalidField(\'signUpPassword\') }">\n                                        <input class="input is-rounded" type="password" required v-bind:class="{ \'is-danger\': validator.hasInvalidField(\'signUpPassword\') }" v-bind:disabled="loading ? true: false" v-model="signUpPassword" :placeholder="$t(\'signIn.labels.password\')">\n                                        <span class="icon is-small is-left"><i class="fas fa-key"></i></span>\n                                        <span class="icon is-small is-right" v-show="validator.hasInvalidField(\'signUpPassword\')"><i class="fas fa-warning"></i></span>\n                                        <p class="help is-danger" v-show="validator.hasInvalidField(\'signUpPassword\')">{{ validator.getInvalidFieldMessage(\'signUpPassword\') }}</p>\n                                    </p>\n                                    <p class="control">\n                                        <button type="submit" class="button is-black" v-bind:class="{ \'is-loading\': loading }" v-bind:disabled="loading ? true: false">\n                                            <span class="icon"><i class="fas fa-plus-circle"></i></span>\n                                            <span>{{ $t("signUp.buttons.submit") }}</span>\n                                        </button>\n                                    </p>\n                                </div>\n                            </form>\n                            <p class="has-text-centered spieldose-margin-top-1rem">\n                                <a href="https://github.com/aportela/spieldose" target="_blank"><span class="icon is-small"><i class="fab fa-github"></i></span>{{ $t("commonLabels.projectPageLinkLabel") }}</a> | <a href="https://github.com/aportela" target="_blank">{{ $t("commonLabels.authorLinkLabel") }}</a>\n                            </p>\n\n                    </section>\n                </div>\n                <div class="column is-8 is-hidden-mobile is-hidden-tablet-only is-hidden-desktop-only container_tiles">\n                    <spieldose-tiles-album-images></spieldose-tiles-album-images>\n                </div>\n            </div>\n    '};export default{name:"spieldose-signin-component",template:'\n        \x3c!-- template credits: daniel (https://github.com/dansup) --\x3e\n                    <div class="columns is-vcentered is-centered">\n                    <div class="column is-4-widescreen is-6-desktop is-8-tablet is-12-mobile">\n                    <section class="section">\n                            \x3c!-- Apple Music Sound Equalizer in SVG by Geoff Graham (https://codepen.io/geoffgraham/pen/XmMJqj) --\x3e\n                            <div class="columns is-centered">\n                            <div class="column is-half">\n                            <svg xmlns="http://www.w3.org/2000/svg" class="equilizer" viewBox="0 0 128 128">\n                                <g>\n                                    <title>Audio Equalizer</title>\n                                    <rect class="bar" transform="translate(0,0)" y="15"></rect>\n                                    <rect class="bar" transform="translate(25,0)" y="15"></rect>\n                                    <rect class="bar" transform="translate(50,0)" y="15"></rect>\n                                    <rect class="bar" transform="translate(75,0)" y="15"></rect>\n                                    <rect class="bar" transform="translate(100,0)" y="15"></rect>\n                                </g>\n                            </svg>\n                            </div>\n                            </div>\n                            <h1 class="title has-text-centered"><span class="icon is-medium"><i class="fas fa-music" aria-hidden="true"></i></span> Spieldose <span class="icon is-medium"><i class="fas fa-music" aria-hidden="true"></i></span></h1>\n                            <h2 class="subtitle is-6 has-text-centered"><cite>{{ $t("commonLabels.slogan") }}</cite></h2>\n                            <div class="box is-radiusless is-shadowless is-marginless">\n                                <div class="tabs is-toggle is-radiusless spieldose-tabs-without-margin-bottom" v-if="allowSignUp">\n                                    <ul>\n                                        <li v-bind:class="{ \'is-active\': isSignInTabActive }">\n                                            <a v-on:click.prevent="changeTab(\'signin\');">\n                                                <span class="icon is-small"><i class="fas fa-user"></i></span>\n                                                <span>{{ $t("signIn.labels.tabLink") }}</span>\n                                            </a>\n                                        </li>\n                                        <li v-bind:class="{ \'is-active\': isSignUpTabActive }">\n                                            <a v-on:click.prevent="changeTab(\'signup\');">\n                                                <span class="icon is-small"><i class="fas fa-user-plus"></i></span>\n                                                <span>{{ $t("signUp.labels.tabLink") }}</span>\n                                            </a>\n                                        </li>\n                                    </ul>\n                                </div>\n                            </div>\n                            <form v-on:submit.prevent="submitSignIn" v-show="isSignInTabActive">\n                                <div class="box is-radiusless is-shadowless">\n                                    <div class="field">\n                                        <label class="label is-hidden-mobile">{{ $t("signIn.labels.email") }}</label>\n                                        <p class="block control has-icons-left" v-bind:class="{ \'has-icons-right\' : validator.hasInvalidField(\'signInEmail\') }">\n                                            <input class="input is-rounded" type="email" ref="signInEmail" maxlength="255" required v-bind:class="{ \'is-danger\': validator.hasInvalidField(\'signInEmail\') }" v-bind:disabled="loading ? true: false" v-model="signInEmail" :placeholder="$t(\'signIn.labels.email\')">\n                                            <span class="icon is-small is-left"><i class="fas fa-envelope"></i></span>\n                                            <span class="icon is-small is-right" v-show="validator.hasInvalidField(\'signInEmail\')"><i class="fas fa-warning"></i></span>\n                                            <p class="help is-danger" v-show="validator.hasInvalidField(\'signInEmail\')">{{ validator.getInvalidFieldMessage(\'signInEmail\') }}</p>\n                                        </p>\n                                    </div>\n                                    <div class="field">\n                                        <label class="label is-hidden-mobile">{{ $t("signIn.labels.password") }}</label>\n                                        <p class="block control has-icons-left" v-bind:class="{ \'has-icons-right\' : validator.hasInvalidField(\'signInPassword\') }">\n                                            <input class="input is-rounded" type="password" required v-bind:class="{ \'is-danger\': validator.hasInvalidField(\'signInPassword\') }" v-bind:disabled="loading ? true: false" v-model="signInPassword" :placeholder="$t(\'signIn.labels.password\')">\n                                            <span class="icon is-small is-left"><i class="fas fa-key"></i></span>\n                                            <span class="icon is-small is-right" v-show="validator.hasInvalidField(\'signInPassword\')"><i class="fas fa-warning"></i></span>\n                                            <p class="help is-danger" v-show="validator.hasInvalidField(\'signInPassword\')">{{ validator.getInvalidFieldMessage(\'signInPassword\') }}</p>\n                                        </p>\n                                    </div>\n                                    <p class="control">\n                                        <button type="submit" class="button is-black" v-bind:class="{ \'is-loading\': loading }" v-bind:disabled="loading ? true: false">\n                                            <span class="icon"><i class="fas fa-lock"></i></span>\n                                            <span>{{ $t("signIn.buttons.submit") }}</span>\n                                        </button>\n                                    </p>\n                                </div>\n                            </form>\n                            <form v-on:submit.prevent="submitSignUp" v-show="isSignUpTabActive">\n                                <div class="box is-radiusless is-shadowless">\n                                    <label class="label is-hidden-mobile">{{ $t("signUp.labels.email") }}</label>\n                                    <p class="block control has-icons-left" v-bind:class="{ \'has-icons-right\' : validator.hasInvalidField(\'signUpEmail\') }">\n                                        <input class="input is-rounded" type="email" ref="signUpEmail" maxlength="255" required v-bind:class="{ \'is-danger\': validator.hasInvalidField(\'signUpEmail\') }" v-bind:disabled="loading ? true: false" v-model="signUpEmail" :placeholder="$t(\'signIn.labels.email\')">\n                                        <span class="icon is-small is-left"><i class="fas fa-envelope"></i></span>\n                                        <span class="icon is-small is-right" v-show="validator.hasInvalidField(\'signUpEmail\')"><i class="fas fa-warning"></i></span>\n                                        <p class="help is-danger" v-show="validator.hasInvalidField(\'signUpEmail\')">{{ validator.getInvalidFieldMessage(\'signUpEmail\') }}</p>\n                                    </p>\n                                    <label class="label is-hidden-mobile">{{ $t("signUp.labels.password") }}</label>\n                                    <p class="block control has-icons-left" v-bind:class="{ \'has-icons-right\' : validator.hasInvalidField(\'signUpPassword\') }">\n                                        <input class="input is-rounded" type="password" required v-bind:class="{ \'is-danger\': validator.hasInvalidField(\'signUpPassword\') }" v-bind:disabled="loading ? true: false" v-model="signUpPassword" :placeholder="$t(\'signIn.labels.password\')">\n                                        <span class="icon is-small is-left"><i class="fas fa-key"></i></span>\n                                        <span class="icon is-small is-right" v-show="validator.hasInvalidField(\'signUpPassword\')"><i class="fas fa-warning"></i></span>\n                                        <p class="help is-danger" v-show="validator.hasInvalidField(\'signUpPassword\')">{{ validator.getInvalidFieldMessage(\'signUpPassword\') }}</p>\n                                    </p>\n                                    <p class="control">\n                                        <button type="submit" class="button is-black" v-bind:class="{ \'is-loading\': loading }" v-bind:disabled="loading ? true: false">\n                                            <span class="icon"><i class="fas fa-plus-circle"></i></span>\n                                            <span>{{ $t("signUp.buttons.submit") }}</span>\n                                        </button>\n                                    </p>\n                                </div>\n                            </form>\n                            <p class="has-text-centered spieldose-margin-top-1rem">\n                                <a href="https://github.com/aportela/spieldose" target="_blank"><span class="icon is-small"><i class="fab fa-github"></i></span>{{ $t("commonLabels.projectPageLinkLabel") }}</a> | <a href="https://github.com/aportela" target="_blank">{{ $t("commonLabels.authorLinkLabel") }}</a>\n                            </p>\n\n                    </section>\n                </div>\n                <div class="column is-8 is-hidden-mobile is-hidden-tablet-only is-hidden-desktop-only container_tiles">\n                    <spieldose-tiles-album-images></spieldose-tiles-album-images>\n                </div>\n            </div>\n    ',mixins:[mixinValidations,mixinAPIError],data:function(){return{loading:!1,signInEmail:null,signInPassword:null,allowSignUp:initialState.allowSignUp,signUpEmail:null,signUpPassword:null,tab:"signin"}},mounted:function(){this.$nextTick((()=>this.$refs.signInEmail.focus()))},computed:{isSignInTabActive:function(){return"signin"==this.tab},isSignUpTabActive:function(){return"signup"==this.tab}},watch:{isSignInTabActive:function(s){s&&this.$nextTick((()=>this.$refs.signInEmail.focus()))},isSignUpTabActive:function(s){s&&this.$nextTick((()=>this.$refs.signUpEmail.focus()))}},components:{"spieldose-tiles-album-images":blockTilesAlbumImages},methods:{changeTab:function(s){this.tab!=s&&(this.tab=s)},submitSignIn:function(){this.loading=!0,this.validator.clear(),this.clearAPIErrors(),spieldoseAPI.session.signIn(this.signInEmail,this.signInPassword,(s=>{if(s.ok)this.$router.push({name:"dashboard"});else{switch(s.status){case 400:s.isFieldInvalid("email")?this.validator.setInvalid("signInEmail",this.$t("commonErrors.invalidAPIParam")):s.isFieldInvalid("password")?this.validator.setInvalid("signInPassword",this.$t("commonErrors.invalidAPIParam")):this.setAPIError(s.getApiErrorData());break;case 404:this.validator.setInvalid("signInEmail",this.$t("signIn.errorMessages.userNotFound"));break;case 401:this.validator.setInvalid("signInPassword",this.$t("signIn.errorMessages.incorrectPassword"));break;default:this.setAPIError(s.getApiErrorData())}this.loading=!1}}))},submitSignUp:function(){this.invalidSignUpUsername=!1,this.invalidSignUpPassword=!1,this.loading=!0,this.clearAPIErrors(),spieldoseAPI.session.signUp(this.signUpEmail,this.signUpPassword,(s=>{if(s.ok)this.signInEmail=this.signUpEmail,this.signInPassword=this.signUpPassword,this.loading=!1,this.tab="signin",this.submitSignIn();else{switch(s.status){case 400:s.isFieldInvalid("email")?this.validator.setInvalid("signUpEmail",this.$t("commonErrors.invalidAPIParam")):s.isFieldInvalid("password")?this.validator.setInvalid("signUpPassword",this.$t("commonErrors.invalidAPIParam")):this.setAPIError(s.getApiErrorData());break;case 409:this.validator.setInvalid("signUpEmail",this.$t("signUp.errorMessages.emailAlreadyUsed"));break;default:this.setAPIError(s.getApiErrorData())}this.loading=!1}}))}}};