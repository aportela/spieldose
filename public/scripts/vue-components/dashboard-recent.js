import{default as spieldoseAPI}from"../api.js";import{mixinAPIError,mixinTopRecentCharts,mixinNavigation,mixinPlayer}from"../mixins.js";const template=function(){return'\n        <section class="panel chart height-100">\n            <p class="panel-heading">\n                <span class="icon">\n                    <i class="fas fa-cog fa-spin fa-fw" v-if="loading"></i>\n                    <i class="fas fa-exclamation-triangle" v-else-if="hasAPIErrors"></i>\n                    <i class="far fa-clock" v-else></i>\n                </span>\n                <span>{{ title }}</span>\n                <a class="icon is-pulled-right" v-bind:title="$t(\'commonMessages.refreshData\')" v-on:click.prevent="load();"><i class="fas fa-redo fa-fw"></i></a>\n            </p>\n            <p class="panel-tabs">\n                <a v-bind:class="{ \'is-active\' : isTrackEntity }" v-on:click.prevent="changeEntity(\'tracks\');">{{ $t("dashboard.labels.entityTracks") }}</a>\n                <a v-bind:class="{ \'is-active\' : isArtistEntity }" v-on:click.prevent="changeEntity(\'artists\');">{{ $t("dashboard.labels.entityArtists") }}</a>\n                <a v-bind:class="{ \'is-active\' : isAlbumEntity }" v-on:click.prevent="changeEntity(\'albums\');">{{ $t("dashboard.labels.entityAlbums") }}</a>\n            </p>\n            <div class="panel-block cut-text">\n                <ol v-if="hasItems">\n                    <li class="is-small" v-if="isTrackEntity" v-for="item, i in items" v-bind:key="i">\n                        <i class="cursor-pointer fa fa-play" v-on:click="playTrack(item);" v-bind:title="$t(\'commonLabels.playThisTrack\')"></i>\n                        <i class="cursor-pointer fa fa-plus-square" v-on:click="enqueueTrack(item);" v-bind:title="$t(\'commonLabels.enqueueThisTrack\')"></i>\n                        <span>{{ item.title }}</span>\n                        <span v-if="item.artist"> / <a v-bind:title="$t(\'commonLabels.navigateToArtistPage\')" v-on:click.prevent="navigateToArtistPage(item.artist);">{{ item.artist }}</a></span>\n                    </li>\n                    <li class="is-small" v-if="isArtistEntity" v-for="item in items">\n                        <a v-bind:title="$t(\'commonLabels.navigateToArtistPage\')" v-on:click.prevent="navigateToArtistPage(item.artist);">{{ item.artist }}</a>\n                    </li>\n                    <li class="is-small" v-if="isAlbumEntity" v-for="item in items">\n                        <i class="cursor-pointer fa fa-play" v-bind:title="$t(\'commonLabels.playThisAlbum\')" v-on:click="playAlbum(item);" ></i>\n                        <i class="cursor-pointer fa fa-plus-square" v-bind:title="$t(\'commonLabels.enqueueThisAlbum\')" v-on:click="enqueueAlbum(item);"></i>\n                        <span>{{ item.album }}</span>\n                        <span v-if="item.artist"> / <a v-bind:title="$t(\'commonLabels.navigateToArtistPage\')" v-on:click.prevent="navigateToArtistPage(item.artist);">{{ item.artist }}</a></span>\n                    </li>\n                </ol>\n                <p v-else-if="! hasItems && ! loading && ! hasAPIErrors">{{ $t("dashboard.errors.notEnoughData") }}</p>\n                <p v-else-if="hasAPIErrors">{{ $t("commonErrors.invalidAPIResponse") }}</p>\n            </div>\n        </section>\n    '};export default{name:"spieldose-dashboard-recent",template:'\n        <section class="panel chart height-100">\n            <p class="panel-heading">\n                <span class="icon">\n                    <i class="fas fa-cog fa-spin fa-fw" v-if="loading"></i>\n                    <i class="fas fa-exclamation-triangle" v-else-if="hasAPIErrors"></i>\n                    <i class="far fa-clock" v-else></i>\n                </span>\n                <span>{{ title }}</span>\n                <a class="icon is-pulled-right" v-bind:title="$t(\'commonMessages.refreshData\')" v-on:click.prevent="load();"><i class="fas fa-redo fa-fw"></i></a>\n            </p>\n            <p class="panel-tabs">\n                <a v-bind:class="{ \'is-active\' : isTrackEntity }" v-on:click.prevent="changeEntity(\'tracks\');">{{ $t("dashboard.labels.entityTracks") }}</a>\n                <a v-bind:class="{ \'is-active\' : isArtistEntity }" v-on:click.prevent="changeEntity(\'artists\');">{{ $t("dashboard.labels.entityArtists") }}</a>\n                <a v-bind:class="{ \'is-active\' : isAlbumEntity }" v-on:click.prevent="changeEntity(\'albums\');">{{ $t("dashboard.labels.entityAlbums") }}</a>\n            </p>\n            <div class="panel-block cut-text">\n                <ol v-if="hasItems">\n                    <li class="is-small" v-if="isTrackEntity" v-for="item, i in items" v-bind:key="i">\n                        <i class="cursor-pointer fa fa-play" v-on:click="playTrack(item);" v-bind:title="$t(\'commonLabels.playThisTrack\')"></i>\n                        <i class="cursor-pointer fa fa-plus-square" v-on:click="enqueueTrack(item);" v-bind:title="$t(\'commonLabels.enqueueThisTrack\')"></i>\n                        <span>{{ item.title }}</span>\n                        <span v-if="item.artist"> / <a v-bind:title="$t(\'commonLabels.navigateToArtistPage\')" v-on:click.prevent="navigateToArtistPage(item.artist);">{{ item.artist }}</a></span>\n                    </li>\n                    <li class="is-small" v-if="isArtistEntity" v-for="item in items">\n                        <a v-bind:title="$t(\'commonLabels.navigateToArtistPage\')" v-on:click.prevent="navigateToArtistPage(item.artist);">{{ item.artist }}</a>\n                    </li>\n                    <li class="is-small" v-if="isAlbumEntity" v-for="item in items">\n                        <i class="cursor-pointer fa fa-play" v-bind:title="$t(\'commonLabels.playThisAlbum\')" v-on:click="playAlbum(item);" ></i>\n                        <i class="cursor-pointer fa fa-plus-square" v-bind:title="$t(\'commonLabels.enqueueThisAlbum\')" v-on:click="enqueueAlbum(item);"></i>\n                        <span>{{ item.album }}</span>\n                        <span v-if="item.artist"> / <a v-bind:title="$t(\'commonLabels.navigateToArtistPage\')" v-on:click.prevent="navigateToArtistPage(item.artist);">{{ item.artist }}</a></span>\n                    </li>\n                </ol>\n                <p v-else-if="! hasItems && ! loading && ! hasAPIErrors">{{ $t("dashboard.errors.notEnoughData") }}</p>\n                <p v-else-if="hasAPIErrors">{{ $t("commonErrors.invalidAPIResponse") }}</p>\n            </div>\n        </section>\n    ',mixins:[mixinAPIError,mixinTopRecentCharts,mixinNavigation,mixinPlayer],data:function(){return{loading:!1,actualEntity:"tracks"}},props:["type","title","listItemCount"],computed:{isTrackEntity:function(){return"tracks"==this.actualEntity},isArtistEntity:function(){return"artists"==this.actualEntity},isAlbumEntity:function(){return"albums"==this.actualEntity}},methods:{loadRecentAddedTracks:function(){spieldoseAPI.metrics.getRecentAddedTracks(this.interval,(t=>{t.ok?t.body.metrics&&t.body.metrics.length>0&&(this.items=t.body.metrics):this.setAPIError(t.getApiErrorData()),this.loading=!1}))},loadRecentAddedArtists:function(){spieldoseAPI.metrics.getRecentAddedArtists(this.interval,(t=>{t.ok?t.body.metrics&&t.body.metrics.length>0&&(this.items=t.body.metrics):this.setAPIError(t.getApiErrorData()),this.loading=!1}))},loadRecentAddedAlbums:function(){spieldoseAPI.metrics.getRecentAddedAlbums(this.interval,(t=>{t.ok?t.body.metrics&&t.body.metrics.length>0&&(this.items=t.body.metrics):this.setAPIError(t.getApiErrorData()),this.loading=!1}))},loadRecentPlayedTracks:function(){spieldoseAPI.metrics.getRecentPlayedTracks(this.interval,(t=>{t.ok?t.body.metrics&&t.body.metrics.length>0&&(this.items=t.body.metrics):this.setAPIError(t.getApiErrorData()),this.loading=!1}))},loadRecentPlayedArtists:function(){spieldoseAPI.metrics.getRecentPlayedArtists(this.interval,(t=>{t.ok?t.body.metrics&&t.body.metrics.length>0&&(this.items=t.body.metrics):this.setAPIError(t.getApiErrorData()),this.loading=!1}))},loadRecentPlayedAlbums:function(){spieldoseAPI.metrics.getRecentPlayedAlbums(this.interval,(t=>{t.ok?t.body.metrics&&t.body.metrics.length>0&&(this.items=t.body.metrics):this.setAPIError(t.getApiErrorData()),this.loading=!1}))},load:function(){switch(this.clearAPIErrors(),this.loading=!0,this.items=[],this.type){case"recentlyAdded":this.loadRecentAdded();break;case"recentlyPlayed":this.loadRecentPlayed();break;default:this.loading=!1}},loadRecentAdded:function(){switch(this.actualEntity){case"tracks":this.loadRecentAddedTracks();break;case"artists":this.loadRecentAddedArtists();break;case"albums":this.loadRecentAddedAlbums();break;default:this.loading=!1}},loadRecentPlayed:function(){switch(this.actualEntity){case"tracks":this.loadRecentPlayedTracks();break;case"artists":this.loadRecentPlayedArtists();break;case"albums":this.loadRecentPlayedAlbums();break;default:this.loading=!1}},changeEntity:function(t){this.loading||t&&t!=this.actualEntity&&(this.actualEntity=t,this.load())},playAlbum:function(t){},enqueueAlbum:function(t){}}};