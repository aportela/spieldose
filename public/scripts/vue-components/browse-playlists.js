import{default as spieldoseAPI}from"../api.js";import{mixinAPIError,mixinPagination,mixinLiveSearches,mixinPlayer}from"../mixins.js";import{default as inputTypeAHead}from"./input-typeahead.js";import{default as pagination}from"./pagination";import{default as apiError}from"./api-error.js";import{default as deleteConfirmationModal}from"./delete-confirmation-modal.js";const template=function(){return'\n        <div class="container is-fluid box is-marginless">\n        <p class="title is-1 has-text-centered">{{ $t("browsePlaylists.labels.sectionName") }}</p>\n            <div v-if="! hasAPIErrors">\n                <div class="field has-addons">\n                    <div class="control is-expanded has-icons-left" v-bind:class="{ \'is-loading\': loading }">\n                        <spieldose-input-typeahead v-if="liveSearch" v-bind:loading="loading" v-bind:placeholder="$t(\'browsePlaylists.inputs.playlistNamePlaceholder\')" v-on:on-value-change="onTypeahead"></spieldose-input-typeahead>\n                        <input type="text" class="input" v-bind:placeholder="$t(\'browsePlaylists.inputs.playlistNamePlaceholder\')" v-else v-bind:disabled="loading" v-model.trim="nameFilter" v-on:keyup.enter="search();">\n                        <span class="icon is-small is-left">\n                            <i class="fas fa-search"></i>\n                        </span>\n                    </div>\n                    <p class="control" v-if="! liveSearch">\n                        <a class="button is-info" v-on:click.prevent="search();">\n                            <span class="icon">\n                                <i class="fas fa-search" aria-hidden="true"></i>\n                            </span>\n                            <span>{{ $t("browsePlaylists.buttons.search") }}</span>\n                        </a>\n                    </p>\n                </div>\n                <spieldose-pagination v-bind:loading="loading" v-bind:data="pager" v-on:pagination-changed="onPaginationChanged"></spieldose-pagination>\n                <div class="playlist-item box has-text-centered" v-for="playlist in playlists" v-show="! loading">\n                    <p class="playlist-item-icon">\n                        <span class="icon has-text-light">\n                            <i class="fas fa-list-alt fa-5x"></i>\n                        </span>\n                    </p>\n                    <p class="playlist-info">\n                        <strong>“{{ playlist.name }}”</strong>\n                    </p>\n                    <p class="content is-small">{{ playlist.trackCount }} tracks</p>\n                    <div class="field has-addons">\n                        <p class="control">\n                            <a class="button is-small is-link" v-on:click.prevent="playPlaylistTracks(playlist.id);">\n                                <span class="icon is-small"><i class="fas fa-play"></i></span>\n                                <span>{{ $t("browsePlaylists.buttons.play") }}</span>\n                            </a>\n                        </p>\n                        <p class="control">\n                            <a class="button is-small is-danger" v-bind:disabled="! playlist.id" v-on:click.prevent="onShowDeleteModal(playlist.id);">\n                                <span class="icon is-small"><i class="fas fa-times"></i></span>\n                                <span>{{ $t("browsePlaylists.buttons.remove") }}</span>\n                            </a>\n                        </p>\n                    </div>\n                </div>\n                <div class="is-clearfix"></div>\n                <delete-confirmation-modal v-bind:id="deleteItemId" v-if="showDeleteConfirmationModal" v-on:confirm-delete="onConfirmDelete" v-on:cancel-delete="onCancelDelete"></delete-confirmation-modal>\n            </div>\n            <spieldose-api-error-component v-else v-bind:apiError="apiError"></spieldose-api-error-component>\n        </div>\n    '};export default{name:"spieldose-browse-playlists",template:'\n        <div class="container is-fluid box is-marginless">\n        <p class="title is-1 has-text-centered">{{ $t("browsePlaylists.labels.sectionName") }}</p>\n            <div v-if="! hasAPIErrors">\n                <div class="field has-addons">\n                    <div class="control is-expanded has-icons-left" v-bind:class="{ \'is-loading\': loading }">\n                        <spieldose-input-typeahead v-if="liveSearch" v-bind:loading="loading" v-bind:placeholder="$t(\'browsePlaylists.inputs.playlistNamePlaceholder\')" v-on:on-value-change="onTypeahead"></spieldose-input-typeahead>\n                        <input type="text" class="input" v-bind:placeholder="$t(\'browsePlaylists.inputs.playlistNamePlaceholder\')" v-else v-bind:disabled="loading" v-model.trim="nameFilter" v-on:keyup.enter="search();">\n                        <span class="icon is-small is-left">\n                            <i class="fas fa-search"></i>\n                        </span>\n                    </div>\n                    <p class="control" v-if="! liveSearch">\n                        <a class="button is-info" v-on:click.prevent="search();">\n                            <span class="icon">\n                                <i class="fas fa-search" aria-hidden="true"></i>\n                            </span>\n                            <span>{{ $t("browsePlaylists.buttons.search") }}</span>\n                        </a>\n                    </p>\n                </div>\n                <spieldose-pagination v-bind:loading="loading" v-bind:data="pager" v-on:pagination-changed="onPaginationChanged"></spieldose-pagination>\n                <div class="playlist-item box has-text-centered" v-for="playlist in playlists" v-show="! loading">\n                    <p class="playlist-item-icon">\n                        <span class="icon has-text-light">\n                            <i class="fas fa-list-alt fa-5x"></i>\n                        </span>\n                    </p>\n                    <p class="playlist-info">\n                        <strong>“{{ playlist.name }}”</strong>\n                    </p>\n                    <p class="content is-small">{{ playlist.trackCount }} tracks</p>\n                    <div class="field has-addons">\n                        <p class="control">\n                            <a class="button is-small is-link" v-on:click.prevent="playPlaylistTracks(playlist.id);">\n                                <span class="icon is-small"><i class="fas fa-play"></i></span>\n                                <span>{{ $t("browsePlaylists.buttons.play") }}</span>\n                            </a>\n                        </p>\n                        <p class="control">\n                            <a class="button is-small is-danger" v-bind:disabled="! playlist.id" v-on:click.prevent="onShowDeleteModal(playlist.id);">\n                                <span class="icon is-small"><i class="fas fa-times"></i></span>\n                                <span>{{ $t("browsePlaylists.buttons.remove") }}</span>\n                            </a>\n                        </p>\n                    </div>\n                </div>\n                <div class="is-clearfix"></div>\n                <delete-confirmation-modal v-bind:id="deleteItemId" v-if="showDeleteConfirmationModal" v-on:confirm-delete="onConfirmDelete" v-on:cancel-delete="onCancelDelete"></delete-confirmation-modal>\n            </div>\n            <spieldose-api-error-component v-else v-bind:apiError="apiError"></spieldose-api-error-component>\n        </div>\n    ',mixins:[mixinAPIError,mixinPagination,mixinLiveSearches,mixinPlayer],data:function(){return{loading:!1,nameFilter:null,playlists:[],showDeleteConfirmationModal:!1,deleteItemId:null}},components:{"spieldose-input-typeahead":inputTypeAHead,"spieldose-pagination":pagination,"spieldose-api-error-component":apiError,"delete-confirmation-modal":deleteConfirmationModal},methods:{onPaginationChanged:function(a){this.$router.push({name:"playlistsPaged",params:{page:a}})},onTypeahead:function(a){this.nameFilter=a,this.search()},onShowDeleteModal:function(a){a&&(this.deleteItemId=a,this.showDeleteConfirmationModal=!0)},onConfirmDelete:function(a){a&&(this.loading=!0,this.clearAPIErrors(),spieldoseAPI.playlist.remove(a,(s=>{s.ok?(this.playerData.currentPlaylist.id==a&&this.playerData.currentPlaylist.unset(),this.search()):this.setAPIError(s.getApiErrorData()),this.showDeleteConfirmationModal=!1,this.deleteItemId=null})))},onCancelDelete:function(){this.showDeleteConfirmationModal=!1,this.deleteItemId=null},search:function(){this.loading=!0,this.clearAPIErrors(),spieldoseAPI.playlist.search(this.nameFilter,this.pager.actualPage,this.pager.resultsPage,(a=>{a.ok?(this.pager.actualPage=a.body.pagination.actualPage,this.pager.totalPages=a.body.pagination.totalPages,this.pager.totalResults=a.body.pagination.totalResults,a.body.playlists&&a.body.playlists.length>0?this.playlists=a.body.playlists:this.playlists=[],this.loading=!1):(this.errors=!0,this.apiError=a.getApiErrorData(),this.loading=!1)}))}}};