import{default as spieldoseAPI}from"../api.js";import{mixinAPIError,mixinTopRecentCharts,mixinNavigation,mixinPlayer}from"../mixins.js";const template=function(){return'\n        <section class="panel chart height-100">\n            <p class="panel-heading">\n                <span class="icon">\n                    <i class="fas fa-cog fa-spin fa-fw" v-if="loading"></i>\n                    <i class="fas fa-exclamation-triangle" v-else-if="hasAPIErrors"></i>\n                    <i class="fas fa-list" v-else></i>\n                </span>\n                <span>{{ title }}</span>\n                <a class="icon is-pulled-right" v-bind:title="$t(\'commonMessages.refreshData\')" v-on:click.prevent="load();"><i class="fas fa-redo fa-fw2"></i></a>\n            </p>\n            <p class="panel-tabs">\n                <a v-bind:class="{ \'is-active\' : isAllTimeInterval }" v-on:click.prevent="changeInterval(0);">{{ $t("dashboard.labels.allTimeInterval") }}</a>\n                <a v-bind:class="{ \'is-active\' : isPastWeekInterval }" v-on:click.prevent="changeInterval(1);">{{ $t("dashboard.labels.pastWeekInterval") }}</a>\n                <a v-bind:class="{ \'is-active\' : isPastMonthInterval }" v-on:click.prevent="changeInterval(2);">{{ $t("dashboard.labels.pastMonthInterval") }}</a>\n                <a v-bind:class="{ \'is-active\' : isPastSemesterInterval }" v-on:click.prevent="changeInterval(3);">{{ $t("dashboard.labels.pastSemesterInterval") }}</a>\n                <a v-bind:class="{ \'is-active\' : isPastYearInterval }" v-on:click.prevent="changeInterval(4);">{{ $t("dashboard.labels.pastYearInterval") }}</a>\n            </p>\n            <div class="panel-block cut-text">\n                <ol v-if="items.length > 0">\n                    <li class="is-small" v-if="isTopTracksType" v-for="item, i in items" v-bind:key="i">\n                        <i class="cursor-pointer fa fa-play" v-on:click="playTrack(item);" v-bind:title="$t(\'commonLabels.playThisTrack\')"></i>\n                        <i class="cursor-pointer fa fa-plus-square" v-on:click="enqueueTrack(item);" v-bind:title="$t(\'commonLabels.enqueueThisTrack\')"></i>\n                        <span>{{ item.title }}</span>\n                        <span v-if="item.artist"> / <a v-bind:title="$t(\'commonLabels.navigateToArtistPage\')" v-on:click.prevent="navigateToArtistPage(item.artist);">{{ item.artist }}</a></span>\n                        <span v-if="showPlayCount"> ({{ item.total }} {{ $t(\'dashboard.labels.playCount\') }})</span>\n                    </li>\n                    <li class="is-small" v-if="isTopArtistsType" v-for="item in items">\n                        <a v-bind:title="$t(\'commonLabels.navigateToArtistPage\')" v-on:click.prevent="navigateToArtistPage(item.artist);">{{ item.artist }}</a>\n                        <span v-if="showPlayCount"> ({{ item.total }} {{ $t(\'dashboard.labels.playCount\') }})</span>\n                    </li>\n                    <li class="is-small" v-if="isTopGenresType" v-for="item in items">\n                        <span>{{ item.genre }}</span>\n                        <span v-if="showPlayCount"> ({{ item.total }} {{ $t(\'dashboard.labels.playCount\') }})</span>\n                    </li>\n                </ol>\n                <p v-else-if="! hasItems && ! loading && ! hasAPIErrors">{{ $t("dashboard.errors.notEnoughData") }}</p>\n                <p v-else-if="hasAPIErrors">{{ $t("commonErrors.invalidAPIResponse") }}</p>\n            </div>\n        </section>\n    '};export default{name:"spieldose-dashboard-toplist",template:'\n        <section class="panel chart height-100">\n            <p class="panel-heading">\n                <span class="icon">\n                    <i class="fas fa-cog fa-spin fa-fw" v-if="loading"></i>\n                    <i class="fas fa-exclamation-triangle" v-else-if="hasAPIErrors"></i>\n                    <i class="fas fa-list" v-else></i>\n                </span>\n                <span>{{ title }}</span>\n                <a class="icon is-pulled-right" v-bind:title="$t(\'commonMessages.refreshData\')" v-on:click.prevent="load();"><i class="fas fa-redo fa-fw2"></i></a>\n            </p>\n            <p class="panel-tabs">\n                <a v-bind:class="{ \'is-active\' : isAllTimeInterval }" v-on:click.prevent="changeInterval(0);">{{ $t("dashboard.labels.allTimeInterval") }}</a>\n                <a v-bind:class="{ \'is-active\' : isPastWeekInterval }" v-on:click.prevent="changeInterval(1);">{{ $t("dashboard.labels.pastWeekInterval") }}</a>\n                <a v-bind:class="{ \'is-active\' : isPastMonthInterval }" v-on:click.prevent="changeInterval(2);">{{ $t("dashboard.labels.pastMonthInterval") }}</a>\n                <a v-bind:class="{ \'is-active\' : isPastSemesterInterval }" v-on:click.prevent="changeInterval(3);">{{ $t("dashboard.labels.pastSemesterInterval") }}</a>\n                <a v-bind:class="{ \'is-active\' : isPastYearInterval }" v-on:click.prevent="changeInterval(4);">{{ $t("dashboard.labels.pastYearInterval") }}</a>\n            </p>\n            <div class="panel-block cut-text">\n                <ol v-if="items.length > 0">\n                    <li class="is-small" v-if="isTopTracksType" v-for="item, i in items" v-bind:key="i">\n                        <i class="cursor-pointer fa fa-play" v-on:click="playTrack(item);" v-bind:title="$t(\'commonLabels.playThisTrack\')"></i>\n                        <i class="cursor-pointer fa fa-plus-square" v-on:click="enqueueTrack(item);" v-bind:title="$t(\'commonLabels.enqueueThisTrack\')"></i>\n                        <span>{{ item.title }}</span>\n                        <span v-if="item.artist"> / <a v-bind:title="$t(\'commonLabels.navigateToArtistPage\')" v-on:click.prevent="navigateToArtistPage(item.artist);">{{ item.artist }}</a></span>\n                        <span v-if="showPlayCount"> ({{ item.total }} {{ $t(\'dashboard.labels.playCount\') }})</span>\n                    </li>\n                    <li class="is-small" v-if="isTopArtistsType" v-for="item in items">\n                        <a v-bind:title="$t(\'commonLabels.navigateToArtistPage\')" v-on:click.prevent="navigateToArtistPage(item.artist);">{{ item.artist }}</a>\n                        <span v-if="showPlayCount"> ({{ item.total }} {{ $t(\'dashboard.labels.playCount\') }})</span>\n                    </li>\n                    <li class="is-small" v-if="isTopGenresType" v-for="item in items">\n                        <span>{{ item.genre }}</span>\n                        <span v-if="showPlayCount"> ({{ item.total }} {{ $t(\'dashboard.labels.playCount\') }})</span>\n                    </li>\n                </ol>\n                <p v-else-if="! hasItems && ! loading && ! hasAPIErrors">{{ $t("dashboard.errors.notEnoughData") }}</p>\n                <p v-else-if="hasAPIErrors">{{ $t("commonErrors.invalidAPIResponse") }}</p>\n            </div>\n        </section>\n    ',mixins:[mixinAPIError,mixinTopRecentCharts,mixinNavigation,mixinPlayer],data:function(){return{loading:!1,activeInterval:0}},props:["type","title","listItemCount","showPlayCount","artist"],computed:{isAllTimeInterval:function(){return 0==this.activeInterval},isPastWeekInterval:function(){return 1==this.activeInterval},isPastMonthInterval:function(){return 2==this.activeInterval},isPastSemesterInterval:function(){return 3==this.activeInterval},isPastYearInterval:function(){return 4==this.activeInterval},isTopTracksType:function(){return"topTracks"==this.type},isTopArtistsType:function(){return"topArtists"==this.type},isTopGenresType:function(){return"topGenres"==this.type}},methods:{loadTopPlayedTracks:function(){spieldoseAPI.metrics.getTopPlayedTracks(this.activeInterval,this.artist,(a=>{a.ok?a.body.metrics&&a.body.metrics.length>0&&(this.items=a.body.metrics):this.setAPIError(a.getApiErrorData()),this.loading=!1}))},loadTopPlayedArtists:function(){spieldoseAPI.metrics.getTopPlayedArtists(this.activeInterval,(a=>{a.ok?a.body.metrics&&a.body.metrics.length>0&&(this.items=a.body.metrics):this.setAPIError(a.getApiErrorData()),this.loading=!1}))},loadTopPlayedGenres:function(){spieldoseAPI.metrics.getTopPlayedGenres(this.activeInterval,(a=>{a.ok?a.body.metrics&&a.body.metrics.length>0&&(this.items=a.body.metrics):this.setAPIError(a.getApiErrorData()),this.loading=!1}))},changeInterval:function(a){this.loading||this.activeInterval!=a&&(this.activeInterval=a,this.load())},load:function(){switch(this.clearAPIErrors(),this.loading=!0,this.items=[],this.type){case"topTracks":this.loadTopPlayedTracks();break;case"topArtists":this.loadTopPlayedArtists();break;case"topGenres":this.loadTopPlayedGenres();break;default:this.loading=!1}}}};